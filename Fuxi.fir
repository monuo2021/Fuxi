;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Fuxi : 
  module GHR : 
    input clock : Clock
    input reset : Reset
    output io : {flip branch : UInt<1>, flip taken : UInt<1>, ghr : UInt<5>}
    
    reg ghr : UInt<5>, clock @[GHR.scala 23:16]
    when io.branch : @[GHR.scala 25:20]
      node _T = bits(ghr, 3, 0) @[GHR.scala 26:19]
      node _T_1 = cat(_T, io.taken) @[Cat.scala 30:58]
      ghr <= _T_1 @[GHR.scala 26:9]
      skip @[GHR.scala 25:20]
    io.ghr <= ghr @[GHR.scala 29:10]
    
  module PHT : 
    input clock : Clock
    input reset : Reset
    output io : {flip lastBranch : UInt<1>, flip lastTaken : UInt<1>, flip lastIndex : UInt<5>, flip index : UInt<5>, taken : UInt<1>}
    
    wire _T : UInt<2>[32] @[PHT.scala 23:34]
    _T[0] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[1] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[2] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[3] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[4] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[5] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[6] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[7] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[8] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[9] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[10] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[11] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[12] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[13] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[14] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[15] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[16] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[17] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[18] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[19] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[20] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[21] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[22] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[23] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[24] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[25] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[26] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[27] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[28] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[29] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[30] <= UInt<2>("h02") @[PHT.scala 23:34]
    _T[31] <= UInt<2>("h02") @[PHT.scala 23:34]
    reg counters : UInt<2>[32], clock with : (reset => (reset, _T)) @[PHT.scala 23:26]
    when io.lastBranch : @[PHT.scala 26:24]
      node _T_1 = eq(counters[io.lastIndex], UInt<2>("h03")) @[PHT.scala 27:34]
      when _T_1 : @[PHT.scala 27:47]
        node _T_2 = eq(io.lastTaken, UInt<1>("h00")) @[PHT.scala 28:13]
        when _T_2 : @[PHT.scala 28:28]
          node _T_3 = sub(counters[io.lastIndex], UInt<1>("h01")) @[PHT.scala 29:58]
          node _T_4 = tail(_T_3, 1) @[PHT.scala 29:58]
          counters[io.lastIndex] <= _T_4 @[PHT.scala 29:32]
          skip @[PHT.scala 28:28]
        skip @[PHT.scala 27:47]
      else : @[PHT.scala 31:54]
        node _T_5 = eq(counters[io.lastIndex], UInt<1>("h00")) @[PHT.scala 31:41]
        when _T_5 : @[PHT.scala 31:54]
          when io.lastTaken : @[PHT.scala 32:27]
            node _T_6 = add(counters[io.lastIndex], UInt<1>("h01")) @[PHT.scala 33:58]
            node _T_7 = tail(_T_6, 1) @[PHT.scala 33:58]
            counters[io.lastIndex] <= _T_7 @[PHT.scala 33:32]
            skip @[PHT.scala 32:27]
          skip @[PHT.scala 31:54]
        else : @[PHT.scala 35:18]
          node _T_8 = eq(io.lastTaken, UInt<1>("h00")) @[PHT.scala 37:13]
          when _T_8 : @[PHT.scala 37:28]
            node _T_9 = sub(counters[io.lastIndex], UInt<1>("h01")) @[PHT.scala 38:58]
            node _T_10 = tail(_T_9, 1) @[PHT.scala 38:58]
            counters[io.lastIndex] <= _T_10 @[PHT.scala 38:32]
            skip @[PHT.scala 37:28]
          else : @[PHT.scala 39:20]
            node _T_11 = add(counters[io.lastIndex], UInt<1>("h01")) @[PHT.scala 40:58]
            node _T_12 = tail(_T_11, 1) @[PHT.scala 40:58]
            counters[io.lastIndex] <= _T_12 @[PHT.scala 40:32]
            skip @[PHT.scala 39:20]
          skip @[PHT.scala 35:18]
      skip @[PHT.scala 26:24]
    node _T_13 = bits(counters[io.index], 1, 1) @[PHT.scala 46:33]
    io.taken <= _T_13 @[PHT.scala 46:12]
    
  module BTB : 
    input clock : Clock
    input reset : Reset
    output io : {flip branch : UInt<1>, flip jump : UInt<1>, flip pc : UInt<32>, flip target : UInt<32>, flip lookupPc : UInt<32>, lookupBranch : UInt<1>, lookupJump : UInt<1>, lookupTarget : UInt<32>}
    
    wire _T : UInt<1>[64] @[BTB.scala 32:32]
    _T[0] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[1] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[2] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[3] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[4] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[5] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[6] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[7] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[8] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[9] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[10] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[11] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[12] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[13] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[14] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[15] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[16] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[17] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[18] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[19] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[20] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[21] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[22] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[23] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[24] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[25] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[26] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[27] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[28] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[29] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[30] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[31] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[32] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[33] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[34] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[35] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[36] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[37] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[38] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[39] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[40] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[41] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[42] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[43] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[44] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[45] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[46] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[47] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[48] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[49] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[50] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[51] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[52] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[53] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[54] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[55] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[56] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[57] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[58] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[59] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[60] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[61] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[62] <= UInt<1>("h00") @[BTB.scala 32:32]
    _T[63] <= UInt<1>("h00") @[BTB.scala 32:32]
    reg valids : UInt<1>[64], clock with : (reset => (reset, _T)) @[BTB.scala 32:24]
    cmem lines : {jump : UInt<1>, pc : UInt<24>, target : UInt<30>}[64] @[BTB.scala 33:20]
    node index = bits(io.pc, 7, 2) @[BTB.scala 36:22]
    node linePc = bits(io.pc, 31, 8) @[BTB.scala 38:22]
    when io.branch : @[BTB.scala 41:20]
      valids[index] <= UInt<1>("h01") @[BTB.scala 42:25]
      infer mport _T_1 = lines[index], clock @[BTB.scala 43:10]
      _T_1.jump <= io.jump @[BTB.scala 43:25]
      infer mport _T_2 = lines[index], clock @[BTB.scala 44:10]
      _T_2.pc <= linePc @[BTB.scala 44:25]
      infer mport _T_3 = lines[index], clock @[BTB.scala 45:10]
      node _T_4 = bits(io.target, 31, 2) @[BTB.scala 45:37]
      _T_3.target <= _T_4 @[BTB.scala 45:25]
      skip @[BTB.scala 41:20]
    node lookupIndex = bits(io.lookupPc, 7, 2) @[BTB.scala 49:32]
    node lookupPcSel = bits(io.lookupPc, 31, 8) @[BTB.scala 51:32]
    infer mport _T_5 = lines[lookupIndex], clock @[BTB.scala 54:26]
    node _T_6 = eq(_T_5.pc, lookupPcSel) @[BTB.scala 54:43]
    node btbHit = and(valids[lookupIndex], _T_6) @[BTB.scala 53:41]
    io.lookupBranch <= btbHit @[BTB.scala 57:19]
    infer mport _T_7 = lines[lookupIndex], clock @[BTB.scala 58:39]
    node _T_8 = mux(btbHit, _T_7.jump, UInt<1>("h00")) @[BTB.scala 58:25]
    io.lookupJump <= _T_8 @[BTB.scala 58:19]
    infer mport _T_9 = lines[lookupIndex], clock @[BTB.scala 59:43]
    node _T_10 = mux(btbHit, _T_9.target, UInt<1>("h00")) @[BTB.scala 59:29]
    node _T_11 = cat(_T_10, UInt<2>("h00")) @[Cat.scala 30:58]
    io.lookupTarget <= _T_11 @[BTB.scala 59:19]
    
  module BranchPredictor : 
    input clock : Clock
    input reset : Reset
    output io : {flip branchInfo : {branch : UInt<1>, jump : UInt<1>, taken : UInt<1>, index : UInt<5>, pc : UInt<32>, target : UInt<32>}, flip lookupPc : UInt<32>, predTaken : UInt<1>, predTarget : UInt<32>, predIndex : UInt<5>}
    
    inst ghr of GHR @[BranchPredictor.scala 21:19]
    ghr.clock <= clock
    ghr.reset <= reset
    inst pht of PHT @[BranchPredictor.scala 22:19]
    pht.clock <= clock
    pht.reset <= reset
    inst btb of BTB @[BranchPredictor.scala 23:19]
    btb.clock <= clock
    btb.reset <= reset
    ghr.io.branch <= io.branchInfo.branch @[BranchPredictor.scala 26:17]
    ghr.io.taken <= io.branchInfo.taken @[BranchPredictor.scala 27:17]
    node _T = bits(io.lookupPc, 6, 2) @[BranchPredictor.scala 30:26]
    node index = xor(_T, ghr.io.ghr) @[BranchPredictor.scala 31:45]
    pht.io.lastBranch <= io.branchInfo.branch @[BranchPredictor.scala 32:21]
    pht.io.lastTaken <= io.branchInfo.taken @[BranchPredictor.scala 33:21]
    pht.io.lastIndex <= io.branchInfo.index @[BranchPredictor.scala 34:21]
    pht.io.index <= index @[BranchPredictor.scala 35:21]
    btb.io.branch <= io.branchInfo.branch @[BranchPredictor.scala 38:19]
    btb.io.jump <= io.branchInfo.jump @[BranchPredictor.scala 39:19]
    btb.io.pc <= io.branchInfo.pc @[BranchPredictor.scala 40:19]
    btb.io.target <= io.branchInfo.target @[BranchPredictor.scala 41:19]
    btb.io.lookupPc <= io.lookupPc @[BranchPredictor.scala 42:19]
    node _T_1 = or(pht.io.taken, btb.io.lookupJump) @[BranchPredictor.scala 46:34]
    node _T_2 = and(btb.io.lookupBranch, _T_1) @[BranchPredictor.scala 45:40]
    io.predTaken <= _T_2 @[BranchPredictor.scala 45:17]
    io.predTarget <= btb.io.lookupTarget @[BranchPredictor.scala 47:17]
    io.predIndex <= index @[BranchPredictor.scala 48:17]
    
  module Fetch : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip stall : UInt<1>, stallReq : UInt<1>, flip flushPc : UInt<32>, rom : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flip branch : {branch : UInt<1>, jump : UInt<1>, taken : UInt<1>, index : UInt<5>, pc : UInt<32>, target : UInt<32>}, fetch : {valid : UInt<1>, pc : UInt<32>, taken : UInt<1>, target : UInt<32>, predIndex : UInt<5>, pageFault : UInt<1>}}
    
    reg pc : UInt<32>, clock with : (reset => (reset, UInt<32>("h0200"))) @[Fetch.scala 25:19]
    inst bpu of BranchPredictor @[Fetch.scala 28:19]
    bpu.clock <= clock
    bpu.reset <= reset
    bpu.io.branchInfo.target <= io.branch.target @[Fetch.scala 29:21]
    bpu.io.branchInfo.pc <= io.branch.pc @[Fetch.scala 29:21]
    bpu.io.branchInfo.index <= io.branch.index @[Fetch.scala 29:21]
    bpu.io.branchInfo.taken <= io.branch.taken @[Fetch.scala 29:21]
    bpu.io.branchInfo.jump <= io.branch.jump @[Fetch.scala 29:21]
    bpu.io.branchInfo.branch <= io.branch.branch @[Fetch.scala 29:21]
    bpu.io.lookupPc <= pc @[Fetch.scala 30:21]
    node _T = add(pc, UInt<3>("h04")) @[Fetch.scala 36:23]
    node _T_1 = tail(_T, 1) @[Fetch.scala 36:23]
    node _T_2 = mux(bpu.io.predTaken, bpu.io.predTarget, _T_1) @[Fetch.scala 35:19]
    node _T_3 = mux(io.stall, pc, _T_2) @[Fetch.scala 34:19]
    node nextPc = mux(io.flush, io.flushPc, _T_3) @[Fetch.scala 33:19]
    pc <= nextPc @[Fetch.scala 37:6]
    node _T_4 = eq(io.rom.valid, UInt<1>("h00")) @[Fetch.scala 40:18]
    io.stallReq <= _T_4 @[Fetch.scala 40:15]
    io.rom.en <= UInt<1>("h01") @[Fetch.scala 43:17]
    io.rom.wen <= UInt<1>("h00") @[Fetch.scala 44:17]
    io.rom.addr <= pc @[Fetch.scala 45:17]
    io.rom.wdata <= UInt<1>("h00") @[Fetch.scala 46:17]
    io.fetch.valid <= io.rom.valid @[Fetch.scala 49:23]
    io.fetch.pc <= pc @[Fetch.scala 50:23]
    io.fetch.taken <= bpu.io.predTaken @[Fetch.scala 51:23]
    io.fetch.target <= bpu.io.predTarget @[Fetch.scala 52:23]
    io.fetch.predIndex <= bpu.io.predIndex @[Fetch.scala 53:23]
    io.fetch.pageFault <= io.rom.fault @[Fetch.scala 54:23]
    
  module MidStage : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip stallPrev : UInt<1>, flip stallNext : UInt<1>, flip prev : {valid : UInt<1>, pc : UInt<32>, taken : UInt<1>, target : UInt<32>, predIndex : UInt<5>, pageFault : UInt<1>}, next : {valid : UInt<1>, pc : UInt<32>, taken : UInt<1>, target : UInt<32>, predIndex : UInt<5>, pageFault : UInt<1>}}
    
    wire _T : {valid : UInt<1>, pc : UInt<32>, taken : UInt<1>, target : UInt<32>, predIndex : UInt<5>, pageFault : UInt<1>} @[StageIO.scala 18:31]
    _T.pageFault <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.predIndex <= UInt<5>("h00") @[StageIO.scala 18:31]
    _T.target <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.taken <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.pc <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.valid <= UInt<1>("h00") @[StageIO.scala 18:31]
    reg ff : {valid : UInt<1>, pc : UInt<32>, taken : UInt<1>, target : UInt<32>, predIndex : UInt<5>, pageFault : UInt<1>}, clock with : (reset => (reset, _T)) @[MidStage.scala 20:19]
    node _T_1 = eq(io.stallNext, UInt<1>("h00")) @[MidStage.scala 21:38]
    node _T_2 = and(io.stallPrev, _T_1) @[MidStage.scala 21:35]
    node _T_3 = or(io.flush, _T_2) @[MidStage.scala 21:18]
    when _T_3 : @[MidStage.scala 21:54]
      wire _T_4 : {valid : UInt<1>, pc : UInt<32>, taken : UInt<1>, target : UInt<32>, predIndex : UInt<5>, pageFault : UInt<1>} @[StageIO.scala 18:31]
      _T_4.pageFault <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.predIndex <= UInt<5>("h00") @[StageIO.scala 18:31]
      _T_4.target <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.taken <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.pc <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.valid <= UInt<1>("h00") @[StageIO.scala 18:31]
      ff.pageFault <= _T_4.pageFault @[MidStage.scala 22:8]
      ff.predIndex <= _T_4.predIndex @[MidStage.scala 22:8]
      ff.target <= _T_4.target @[MidStage.scala 22:8]
      ff.taken <= _T_4.taken @[MidStage.scala 22:8]
      ff.pc <= _T_4.pc @[MidStage.scala 22:8]
      ff.valid <= _T_4.valid @[MidStage.scala 22:8]
      skip @[MidStage.scala 21:54]
    else : @[MidStage.scala 23:30]
      node _T_5 = eq(io.stallPrev, UInt<1>("h00")) @[MidStage.scala 23:15]
      when _T_5 : @[MidStage.scala 23:30]
        ff.pageFault <= io.prev.pageFault @[MidStage.scala 24:8]
        ff.predIndex <= io.prev.predIndex @[MidStage.scala 24:8]
        ff.target <= io.prev.target @[MidStage.scala 24:8]
        ff.taken <= io.prev.taken @[MidStage.scala 24:8]
        ff.pc <= io.prev.pc @[MidStage.scala 24:8]
        ff.valid <= io.prev.valid @[MidStage.scala 24:8]
        skip @[MidStage.scala 23:30]
    io.next.pageFault <= ff.pageFault @[MidStage.scala 27:11]
    io.next.predIndex <= ff.predIndex @[MidStage.scala 27:11]
    io.next.target <= ff.target @[MidStage.scala 27:11]
    io.next.taken <= ff.taken @[MidStage.scala 27:11]
    io.next.pc <= ff.pc @[MidStage.scala 27:11]
    io.next.valid <= ff.valid @[MidStage.scala 27:11]
    
  module Decoder : 
    input clock : Clock
    input reset : Reset
    output io : {flip fetch : {valid : UInt<1>, pc : UInt<32>, taken : UInt<1>, target : UInt<32>, predIndex : UInt<5>, pageFault : UInt<1>}, flip inst : UInt<32>, flip stallId : UInt<1>, flushIf : UInt<1>, flushPc : UInt<32>, read1 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, read2 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, branch : {branch : UInt<1>, jump : UInt<1>, taken : UInt<1>, index : UInt<5>, pc : UInt<32>, target : UInt<32>}, decoder : {aluOp : UInt<4>, opr1 : UInt<32>, opr2 : UInt<32>, mduOp : UInt<4>, lsuOp : UInt<5>, lsuData : UInt<32>, regWen : UInt<1>, regWaddr : UInt<5>, csrOp : UInt<3>, csrAddr : UInt<12>, csrData : UInt<32>, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}}
    
    reg stallDelay : UInt<1>, clock @[Decoder.scala 36:28]
    stallDelay <= io.stallId @[Decoder.scala 36:28]
    reg lastInst : UInt<32>, clock @[Decoder.scala 37:24]
    node _T = eq(io.fetch.valid, UInt<1>("h00")) @[Decoder.scala 38:25]
    node _T_1 = mux(stallDelay, lastInst, io.inst) @[Decoder.scala 39:24]
    node inst = mux(_T, UInt<32>("h013"), _T_1) @[Decoder.scala 38:24]
    node _T_2 = eq(stallDelay, UInt<1>("h00")) @[Decoder.scala 40:9]
    when _T_2 : @[Decoder.scala 40:22]
      lastInst <= io.inst @[Decoder.scala 40:33]
      skip @[Decoder.scala 40:22]
    node rd = bits(inst, 11, 7) @[Decoder.scala 43:17]
    node rs1 = bits(inst, 19, 15) @[Decoder.scala 44:17]
    node rs2 = bits(inst, 24, 20) @[Decoder.scala 45:17]
    node immI = bits(inst, 31, 20) @[Decoder.scala 48:19]
    node _T_3 = bits(inst, 31, 25) @[Decoder.scala 49:23]
    node _T_4 = bits(inst, 11, 7) @[Decoder.scala 49:37]
    node immS = cat(_T_3, _T_4) @[Cat.scala 30:58]
    node _T_5 = bits(inst, 31, 31) @[Decoder.scala 50:23]
    node _T_6 = bits(inst, 7, 7) @[Decoder.scala 50:33]
    node _T_7 = bits(inst, 30, 25) @[Decoder.scala 50:42]
    node _T_8 = bits(inst, 11, 8) @[Decoder.scala 50:56]
    node _T_9 = cat(_T_8, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_10 = cat(_T_5, _T_6) @[Cat.scala 30:58]
    node _T_11 = cat(_T_10, _T_7) @[Cat.scala 30:58]
    node immB = cat(_T_11, _T_9) @[Cat.scala 30:58]
    node _T_12 = bits(inst, 31, 12) @[Decoder.scala 51:23]
    node immU = cat(_T_12, UInt<12>("h00")) @[Cat.scala 30:58]
    node _T_13 = bits(inst, 31, 31) @[Decoder.scala 52:23]
    node _T_14 = bits(inst, 19, 12) @[Decoder.scala 52:33]
    node _T_15 = bits(inst, 20, 20) @[Decoder.scala 52:47]
    node _T_16 = bits(inst, 30, 21) @[Decoder.scala 52:57]
    node _T_17 = cat(_T_16, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_18 = cat(_T_13, _T_14) @[Cat.scala 30:58]
    node _T_19 = cat(_T_18, _T_15) @[Cat.scala 30:58]
    node immJ = cat(_T_19, _T_17) @[Cat.scala 30:58]
    node _T_20 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_21 = eq(UInt<6>("h033"), _T_20) @[Lookup.scala 31:38]
    node _T_22 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_23 = eq(UInt<5>("h013"), _T_22) @[Lookup.scala 31:38]
    node _T_24 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_25 = eq(UInt<31>("h040000033"), _T_24) @[Lookup.scala 31:38]
    node _T_26 = and(inst, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_27 = eq(UInt<6>("h037"), _T_26) @[Lookup.scala 31:38]
    node _T_28 = and(inst, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_29 = eq(UInt<5>("h017"), _T_28) @[Lookup.scala 31:38]
    node _T_30 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_31 = eq(UInt<15>("h04033"), _T_30) @[Lookup.scala 31:38]
    node _T_32 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_33 = eq(UInt<15>("h04013"), _T_32) @[Lookup.scala 31:38]
    node _T_34 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_35 = eq(UInt<15>("h06033"), _T_34) @[Lookup.scala 31:38]
    node _T_36 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_37 = eq(UInt<15>("h06013"), _T_36) @[Lookup.scala 31:38]
    node _T_38 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_39 = eq(UInt<15>("h07033"), _T_38) @[Lookup.scala 31:38]
    node _T_40 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_41 = eq(UInt<15>("h07013"), _T_40) @[Lookup.scala 31:38]
    node _T_42 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_43 = eq(UInt<14>("h02033"), _T_42) @[Lookup.scala 31:38]
    node _T_44 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_45 = eq(UInt<14>("h02013"), _T_44) @[Lookup.scala 31:38]
    node _T_46 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_47 = eq(UInt<14>("h03033"), _T_46) @[Lookup.scala 31:38]
    node _T_48 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_49 = eq(UInt<14>("h03013"), _T_48) @[Lookup.scala 31:38]
    node _T_50 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_51 = eq(UInt<13>("h01033"), _T_50) @[Lookup.scala 31:38]
    node _T_52 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_53 = eq(UInt<13>("h01013"), _T_52) @[Lookup.scala 31:38]
    node _T_54 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_55 = eq(UInt<15>("h05033"), _T_54) @[Lookup.scala 31:38]
    node _T_56 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_57 = eq(UInt<15>("h05013"), _T_56) @[Lookup.scala 31:38]
    node _T_58 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_59 = eq(UInt<31>("h040005033"), _T_58) @[Lookup.scala 31:38]
    node _T_60 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_61 = eq(UInt<31>("h040005013"), _T_60) @[Lookup.scala 31:38]
    node _T_62 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_63 = eq(UInt<7>("h063"), _T_62) @[Lookup.scala 31:38]
    node _T_64 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_65 = eq(UInt<13>("h01063"), _T_64) @[Lookup.scala 31:38]
    node _T_66 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_67 = eq(UInt<15>("h04063"), _T_66) @[Lookup.scala 31:38]
    node _T_68 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_69 = eq(UInt<15>("h05063"), _T_68) @[Lookup.scala 31:38]
    node _T_70 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_71 = eq(UInt<15>("h06063"), _T_70) @[Lookup.scala 31:38]
    node _T_72 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_73 = eq(UInt<15>("h07063"), _T_72) @[Lookup.scala 31:38]
    node _T_74 = and(inst, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_75 = eq(UInt<7>("h06f"), _T_74) @[Lookup.scala 31:38]
    node _T_76 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_77 = eq(UInt<7>("h067"), _T_76) @[Lookup.scala 31:38]
    node _T_78 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_79 = eq(UInt<2>("h03"), _T_78) @[Lookup.scala 31:38]
    node _T_80 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_81 = eq(UInt<13>("h01003"), _T_80) @[Lookup.scala 31:38]
    node _T_82 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_83 = eq(UInt<14>("h02003"), _T_82) @[Lookup.scala 31:38]
    node _T_84 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_85 = eq(UInt<15>("h04003"), _T_84) @[Lookup.scala 31:38]
    node _T_86 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_87 = eq(UInt<15>("h05003"), _T_86) @[Lookup.scala 31:38]
    node _T_88 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_89 = eq(UInt<6>("h023"), _T_88) @[Lookup.scala 31:38]
    node _T_90 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_91 = eq(UInt<13>("h01023"), _T_90) @[Lookup.scala 31:38]
    node _T_92 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_93 = eq(UInt<14>("h02023"), _T_92) @[Lookup.scala 31:38]
    node _T_94 = and(inst, UInt<32>("h0f00fffff")) @[Lookup.scala 31:38]
    node _T_95 = eq(UInt<4>("h0f"), _T_94) @[Lookup.scala 31:38]
    node _T_96 = and(inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _T_97 = eq(UInt<13>("h0100f"), _T_96) @[Lookup.scala 31:38]
    node _T_98 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_99 = eq(UInt<13>("h01073"), _T_98) @[Lookup.scala 31:38]
    node _T_100 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_101 = eq(UInt<14>("h02073"), _T_100) @[Lookup.scala 31:38]
    node _T_102 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_103 = eq(UInt<14>("h03073"), _T_102) @[Lookup.scala 31:38]
    node _T_104 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_105 = eq(UInt<15>("h05073"), _T_104) @[Lookup.scala 31:38]
    node _T_106 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_107 = eq(UInt<15>("h06073"), _T_106) @[Lookup.scala 31:38]
    node _T_108 = and(inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_109 = eq(UInt<15>("h07073"), _T_108) @[Lookup.scala 31:38]
    node _T_110 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_111 = eq(UInt<26>("h02000033"), _T_110) @[Lookup.scala 31:38]
    node _T_112 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_113 = eq(UInt<26>("h02001033"), _T_112) @[Lookup.scala 31:38]
    node _T_114 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_115 = eq(UInt<26>("h02002033"), _T_114) @[Lookup.scala 31:38]
    node _T_116 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_117 = eq(UInt<26>("h02003033"), _T_116) @[Lookup.scala 31:38]
    node _T_118 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_119 = eq(UInt<26>("h02004033"), _T_118) @[Lookup.scala 31:38]
    node _T_120 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_121 = eq(UInt<26>("h02005033"), _T_120) @[Lookup.scala 31:38]
    node _T_122 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_123 = eq(UInt<26>("h02006033"), _T_122) @[Lookup.scala 31:38]
    node _T_124 = and(inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_125 = eq(UInt<26>("h02007033"), _T_124) @[Lookup.scala 31:38]
    node _T_126 = and(inst, UInt<32>("h0f9f0707f")) @[Lookup.scala 31:38]
    node _T_127 = eq(UInt<29>("h01000202f"), _T_126) @[Lookup.scala 31:38]
    node _T_128 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_129 = eq(UInt<29>("h01800202f"), _T_128) @[Lookup.scala 31:38]
    node _T_130 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_131 = eq(UInt<28>("h0800202f"), _T_130) @[Lookup.scala 31:38]
    node _T_132 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_133 = eq(UInt<14>("h0202f"), _T_132) @[Lookup.scala 31:38]
    node _T_134 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_135 = eq(UInt<30>("h02000202f"), _T_134) @[Lookup.scala 31:38]
    node _T_136 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_137 = eq(UInt<31>("h06000202f"), _T_136) @[Lookup.scala 31:38]
    node _T_138 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_139 = eq(UInt<31>("h04000202f"), _T_138) @[Lookup.scala 31:38]
    node _T_140 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_141 = eq(UInt<32>("h08000202f"), _T_140) @[Lookup.scala 31:38]
    node _T_142 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_143 = eq(UInt<32>("h0a000202f"), _T_142) @[Lookup.scala 31:38]
    node _T_144 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_145 = eq(UInt<32>("h0c000202f"), _T_144) @[Lookup.scala 31:38]
    node _T_146 = and(inst, UInt<32>("h0f800707f")) @[Lookup.scala 31:38]
    node _T_147 = eq(UInt<32>("h0e000202f"), _T_146) @[Lookup.scala 31:38]
    node _T_148 = and(inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _T_149 = eq(UInt<7>("h073"), _T_148) @[Lookup.scala 31:38]
    node _T_150 = and(inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _T_151 = eq(UInt<21>("h0100073"), _T_150) @[Lookup.scala 31:38]
    node _T_152 = and(inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _T_153 = eq(UInt<29>("h010200073"), _T_152) @[Lookup.scala 31:38]
    node _T_154 = and(inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _T_155 = eq(UInt<30>("h030200073"), _T_154) @[Lookup.scala 31:38]
    node _T_156 = and(inst, UInt<32>("h0ffffffff")) @[Lookup.scala 31:38]
    node _T_157 = eq(UInt<29>("h010500073"), _T_156) @[Lookup.scala 31:38]
    node _T_158 = and(inst, UInt<32>("h0fe007fff")) @[Lookup.scala 31:38]
    node _T_159 = eq(UInt<29>("h012000073"), _T_158) @[Lookup.scala 31:38]
    node _T_160 = mux(_T_159, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_161 = mux(_T_157, UInt<1>("h00"), _T_160) @[Lookup.scala 33:37]
    node _T_162 = mux(_T_155, UInt<1>("h00"), _T_161) @[Lookup.scala 33:37]
    node _T_163 = mux(_T_153, UInt<1>("h00"), _T_162) @[Lookup.scala 33:37]
    node _T_164 = mux(_T_151, UInt<1>("h00"), _T_163) @[Lookup.scala 33:37]
    node _T_165 = mux(_T_149, UInt<1>("h00"), _T_164) @[Lookup.scala 33:37]
    node _T_166 = mux(_T_147, UInt<1>("h01"), _T_165) @[Lookup.scala 33:37]
    node _T_167 = mux(_T_145, UInt<1>("h01"), _T_166) @[Lookup.scala 33:37]
    node _T_168 = mux(_T_143, UInt<1>("h01"), _T_167) @[Lookup.scala 33:37]
    node _T_169 = mux(_T_141, UInt<1>("h01"), _T_168) @[Lookup.scala 33:37]
    node _T_170 = mux(_T_139, UInt<1>("h01"), _T_169) @[Lookup.scala 33:37]
    node _T_171 = mux(_T_137, UInt<1>("h01"), _T_170) @[Lookup.scala 33:37]
    node _T_172 = mux(_T_135, UInt<1>("h01"), _T_171) @[Lookup.scala 33:37]
    node _T_173 = mux(_T_133, UInt<1>("h01"), _T_172) @[Lookup.scala 33:37]
    node _T_174 = mux(_T_131, UInt<1>("h01"), _T_173) @[Lookup.scala 33:37]
    node _T_175 = mux(_T_129, UInt<1>("h01"), _T_174) @[Lookup.scala 33:37]
    node _T_176 = mux(_T_127, UInt<1>("h01"), _T_175) @[Lookup.scala 33:37]
    node _T_177 = mux(_T_125, UInt<1>("h01"), _T_176) @[Lookup.scala 33:37]
    node _T_178 = mux(_T_123, UInt<1>("h01"), _T_177) @[Lookup.scala 33:37]
    node _T_179 = mux(_T_121, UInt<1>("h01"), _T_178) @[Lookup.scala 33:37]
    node _T_180 = mux(_T_119, UInt<1>("h01"), _T_179) @[Lookup.scala 33:37]
    node _T_181 = mux(_T_117, UInt<1>("h01"), _T_180) @[Lookup.scala 33:37]
    node _T_182 = mux(_T_115, UInt<1>("h01"), _T_181) @[Lookup.scala 33:37]
    node _T_183 = mux(_T_113, UInt<1>("h01"), _T_182) @[Lookup.scala 33:37]
    node _T_184 = mux(_T_111, UInt<1>("h01"), _T_183) @[Lookup.scala 33:37]
    node _T_185 = mux(_T_109, UInt<1>("h00"), _T_184) @[Lookup.scala 33:37]
    node _T_186 = mux(_T_107, UInt<1>("h00"), _T_185) @[Lookup.scala 33:37]
    node _T_187 = mux(_T_105, UInt<1>("h00"), _T_186) @[Lookup.scala 33:37]
    node _T_188 = mux(_T_103, UInt<1>("h01"), _T_187) @[Lookup.scala 33:37]
    node _T_189 = mux(_T_101, UInt<1>("h01"), _T_188) @[Lookup.scala 33:37]
    node _T_190 = mux(_T_99, UInt<1>("h01"), _T_189) @[Lookup.scala 33:37]
    node _T_191 = mux(_T_97, UInt<1>("h00"), _T_190) @[Lookup.scala 33:37]
    node _T_192 = mux(_T_95, UInt<1>("h00"), _T_191) @[Lookup.scala 33:37]
    node _T_193 = mux(_T_93, UInt<1>("h01"), _T_192) @[Lookup.scala 33:37]
    node _T_194 = mux(_T_91, UInt<1>("h01"), _T_193) @[Lookup.scala 33:37]
    node _T_195 = mux(_T_89, UInt<1>("h01"), _T_194) @[Lookup.scala 33:37]
    node _T_196 = mux(_T_87, UInt<1>("h01"), _T_195) @[Lookup.scala 33:37]
    node _T_197 = mux(_T_85, UInt<1>("h01"), _T_196) @[Lookup.scala 33:37]
    node _T_198 = mux(_T_83, UInt<1>("h01"), _T_197) @[Lookup.scala 33:37]
    node _T_199 = mux(_T_81, UInt<1>("h01"), _T_198) @[Lookup.scala 33:37]
    node _T_200 = mux(_T_79, UInt<1>("h01"), _T_199) @[Lookup.scala 33:37]
    node _T_201 = mux(_T_77, UInt<1>("h01"), _T_200) @[Lookup.scala 33:37]
    node _T_202 = mux(_T_75, UInt<1>("h00"), _T_201) @[Lookup.scala 33:37]
    node _T_203 = mux(_T_73, UInt<1>("h01"), _T_202) @[Lookup.scala 33:37]
    node _T_204 = mux(_T_71, UInt<1>("h01"), _T_203) @[Lookup.scala 33:37]
    node _T_205 = mux(_T_69, UInt<1>("h01"), _T_204) @[Lookup.scala 33:37]
    node _T_206 = mux(_T_67, UInt<1>("h01"), _T_205) @[Lookup.scala 33:37]
    node _T_207 = mux(_T_65, UInt<1>("h01"), _T_206) @[Lookup.scala 33:37]
    node _T_208 = mux(_T_63, UInt<1>("h01"), _T_207) @[Lookup.scala 33:37]
    node _T_209 = mux(_T_61, UInt<1>("h01"), _T_208) @[Lookup.scala 33:37]
    node _T_210 = mux(_T_59, UInt<1>("h01"), _T_209) @[Lookup.scala 33:37]
    node _T_211 = mux(_T_57, UInt<1>("h01"), _T_210) @[Lookup.scala 33:37]
    node _T_212 = mux(_T_55, UInt<1>("h01"), _T_211) @[Lookup.scala 33:37]
    node _T_213 = mux(_T_53, UInt<1>("h01"), _T_212) @[Lookup.scala 33:37]
    node _T_214 = mux(_T_51, UInt<1>("h01"), _T_213) @[Lookup.scala 33:37]
    node _T_215 = mux(_T_49, UInt<1>("h01"), _T_214) @[Lookup.scala 33:37]
    node _T_216 = mux(_T_47, UInt<1>("h01"), _T_215) @[Lookup.scala 33:37]
    node _T_217 = mux(_T_45, UInt<1>("h01"), _T_216) @[Lookup.scala 33:37]
    node _T_218 = mux(_T_43, UInt<1>("h01"), _T_217) @[Lookup.scala 33:37]
    node _T_219 = mux(_T_41, UInt<1>("h01"), _T_218) @[Lookup.scala 33:37]
    node _T_220 = mux(_T_39, UInt<1>("h01"), _T_219) @[Lookup.scala 33:37]
    node _T_221 = mux(_T_37, UInt<1>("h01"), _T_220) @[Lookup.scala 33:37]
    node _T_222 = mux(_T_35, UInt<1>("h01"), _T_221) @[Lookup.scala 33:37]
    node _T_223 = mux(_T_33, UInt<1>("h01"), _T_222) @[Lookup.scala 33:37]
    node _T_224 = mux(_T_31, UInt<1>("h01"), _T_223) @[Lookup.scala 33:37]
    node _T_225 = mux(_T_29, UInt<1>("h00"), _T_224) @[Lookup.scala 33:37]
    node _T_226 = mux(_T_27, UInt<1>("h00"), _T_225) @[Lookup.scala 33:37]
    node _T_227 = mux(_T_25, UInt<1>("h01"), _T_226) @[Lookup.scala 33:37]
    node _T_228 = mux(_T_23, UInt<1>("h01"), _T_227) @[Lookup.scala 33:37]
    node regEn1 = mux(_T_21, UInt<1>("h01"), _T_228) @[Lookup.scala 33:37]
    node _T_229 = mux(_T_159, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_230 = mux(_T_157, UInt<1>("h00"), _T_229) @[Lookup.scala 33:37]
    node _T_231 = mux(_T_155, UInt<1>("h00"), _T_230) @[Lookup.scala 33:37]
    node _T_232 = mux(_T_153, UInt<1>("h00"), _T_231) @[Lookup.scala 33:37]
    node _T_233 = mux(_T_151, UInt<1>("h00"), _T_232) @[Lookup.scala 33:37]
    node _T_234 = mux(_T_149, UInt<1>("h00"), _T_233) @[Lookup.scala 33:37]
    node _T_235 = mux(_T_147, UInt<1>("h01"), _T_234) @[Lookup.scala 33:37]
    node _T_236 = mux(_T_145, UInt<1>("h01"), _T_235) @[Lookup.scala 33:37]
    node _T_237 = mux(_T_143, UInt<1>("h01"), _T_236) @[Lookup.scala 33:37]
    node _T_238 = mux(_T_141, UInt<1>("h01"), _T_237) @[Lookup.scala 33:37]
    node _T_239 = mux(_T_139, UInt<1>("h01"), _T_238) @[Lookup.scala 33:37]
    node _T_240 = mux(_T_137, UInt<1>("h01"), _T_239) @[Lookup.scala 33:37]
    node _T_241 = mux(_T_135, UInt<1>("h01"), _T_240) @[Lookup.scala 33:37]
    node _T_242 = mux(_T_133, UInt<1>("h01"), _T_241) @[Lookup.scala 33:37]
    node _T_243 = mux(_T_131, UInt<1>("h01"), _T_242) @[Lookup.scala 33:37]
    node _T_244 = mux(_T_129, UInt<1>("h01"), _T_243) @[Lookup.scala 33:37]
    node _T_245 = mux(_T_127, UInt<1>("h00"), _T_244) @[Lookup.scala 33:37]
    node _T_246 = mux(_T_125, UInt<1>("h01"), _T_245) @[Lookup.scala 33:37]
    node _T_247 = mux(_T_123, UInt<1>("h01"), _T_246) @[Lookup.scala 33:37]
    node _T_248 = mux(_T_121, UInt<1>("h01"), _T_247) @[Lookup.scala 33:37]
    node _T_249 = mux(_T_119, UInt<1>("h01"), _T_248) @[Lookup.scala 33:37]
    node _T_250 = mux(_T_117, UInt<1>("h01"), _T_249) @[Lookup.scala 33:37]
    node _T_251 = mux(_T_115, UInt<1>("h01"), _T_250) @[Lookup.scala 33:37]
    node _T_252 = mux(_T_113, UInt<1>("h01"), _T_251) @[Lookup.scala 33:37]
    node _T_253 = mux(_T_111, UInt<1>("h01"), _T_252) @[Lookup.scala 33:37]
    node _T_254 = mux(_T_109, UInt<1>("h00"), _T_253) @[Lookup.scala 33:37]
    node _T_255 = mux(_T_107, UInt<1>("h00"), _T_254) @[Lookup.scala 33:37]
    node _T_256 = mux(_T_105, UInt<1>("h00"), _T_255) @[Lookup.scala 33:37]
    node _T_257 = mux(_T_103, UInt<1>("h00"), _T_256) @[Lookup.scala 33:37]
    node _T_258 = mux(_T_101, UInt<1>("h00"), _T_257) @[Lookup.scala 33:37]
    node _T_259 = mux(_T_99, UInt<1>("h00"), _T_258) @[Lookup.scala 33:37]
    node _T_260 = mux(_T_97, UInt<1>("h00"), _T_259) @[Lookup.scala 33:37]
    node _T_261 = mux(_T_95, UInt<1>("h00"), _T_260) @[Lookup.scala 33:37]
    node _T_262 = mux(_T_93, UInt<1>("h01"), _T_261) @[Lookup.scala 33:37]
    node _T_263 = mux(_T_91, UInt<1>("h01"), _T_262) @[Lookup.scala 33:37]
    node _T_264 = mux(_T_89, UInt<1>("h01"), _T_263) @[Lookup.scala 33:37]
    node _T_265 = mux(_T_87, UInt<1>("h00"), _T_264) @[Lookup.scala 33:37]
    node _T_266 = mux(_T_85, UInt<1>("h00"), _T_265) @[Lookup.scala 33:37]
    node _T_267 = mux(_T_83, UInt<1>("h00"), _T_266) @[Lookup.scala 33:37]
    node _T_268 = mux(_T_81, UInt<1>("h00"), _T_267) @[Lookup.scala 33:37]
    node _T_269 = mux(_T_79, UInt<1>("h00"), _T_268) @[Lookup.scala 33:37]
    node _T_270 = mux(_T_77, UInt<1>("h00"), _T_269) @[Lookup.scala 33:37]
    node _T_271 = mux(_T_75, UInt<1>("h00"), _T_270) @[Lookup.scala 33:37]
    node _T_272 = mux(_T_73, UInt<1>("h01"), _T_271) @[Lookup.scala 33:37]
    node _T_273 = mux(_T_71, UInt<1>("h01"), _T_272) @[Lookup.scala 33:37]
    node _T_274 = mux(_T_69, UInt<1>("h01"), _T_273) @[Lookup.scala 33:37]
    node _T_275 = mux(_T_67, UInt<1>("h01"), _T_274) @[Lookup.scala 33:37]
    node _T_276 = mux(_T_65, UInt<1>("h01"), _T_275) @[Lookup.scala 33:37]
    node _T_277 = mux(_T_63, UInt<1>("h01"), _T_276) @[Lookup.scala 33:37]
    node _T_278 = mux(_T_61, UInt<1>("h00"), _T_277) @[Lookup.scala 33:37]
    node _T_279 = mux(_T_59, UInt<1>("h01"), _T_278) @[Lookup.scala 33:37]
    node _T_280 = mux(_T_57, UInt<1>("h00"), _T_279) @[Lookup.scala 33:37]
    node _T_281 = mux(_T_55, UInt<1>("h01"), _T_280) @[Lookup.scala 33:37]
    node _T_282 = mux(_T_53, UInt<1>("h00"), _T_281) @[Lookup.scala 33:37]
    node _T_283 = mux(_T_51, UInt<1>("h01"), _T_282) @[Lookup.scala 33:37]
    node _T_284 = mux(_T_49, UInt<1>("h00"), _T_283) @[Lookup.scala 33:37]
    node _T_285 = mux(_T_47, UInt<1>("h01"), _T_284) @[Lookup.scala 33:37]
    node _T_286 = mux(_T_45, UInt<1>("h00"), _T_285) @[Lookup.scala 33:37]
    node _T_287 = mux(_T_43, UInt<1>("h01"), _T_286) @[Lookup.scala 33:37]
    node _T_288 = mux(_T_41, UInt<1>("h00"), _T_287) @[Lookup.scala 33:37]
    node _T_289 = mux(_T_39, UInt<1>("h01"), _T_288) @[Lookup.scala 33:37]
    node _T_290 = mux(_T_37, UInt<1>("h00"), _T_289) @[Lookup.scala 33:37]
    node _T_291 = mux(_T_35, UInt<1>("h01"), _T_290) @[Lookup.scala 33:37]
    node _T_292 = mux(_T_33, UInt<1>("h00"), _T_291) @[Lookup.scala 33:37]
    node _T_293 = mux(_T_31, UInt<1>("h01"), _T_292) @[Lookup.scala 33:37]
    node _T_294 = mux(_T_29, UInt<1>("h00"), _T_293) @[Lookup.scala 33:37]
    node _T_295 = mux(_T_27, UInt<1>("h00"), _T_294) @[Lookup.scala 33:37]
    node _T_296 = mux(_T_25, UInt<1>("h01"), _T_295) @[Lookup.scala 33:37]
    node _T_297 = mux(_T_23, UInt<1>("h00"), _T_296) @[Lookup.scala 33:37]
    node regEn2 = mux(_T_21, UInt<1>("h01"), _T_297) @[Lookup.scala 33:37]
    node _T_298 = mux(_T_159, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_299 = mux(_T_157, UInt<1>("h00"), _T_298) @[Lookup.scala 33:37]
    node _T_300 = mux(_T_155, UInt<1>("h00"), _T_299) @[Lookup.scala 33:37]
    node _T_301 = mux(_T_153, UInt<1>("h00"), _T_300) @[Lookup.scala 33:37]
    node _T_302 = mux(_T_151, UInt<1>("h00"), _T_301) @[Lookup.scala 33:37]
    node _T_303 = mux(_T_149, UInt<1>("h00"), _T_302) @[Lookup.scala 33:37]
    node _T_304 = mux(_T_147, UInt<1>("h01"), _T_303) @[Lookup.scala 33:37]
    node _T_305 = mux(_T_145, UInt<1>("h01"), _T_304) @[Lookup.scala 33:37]
    node _T_306 = mux(_T_143, UInt<1>("h01"), _T_305) @[Lookup.scala 33:37]
    node _T_307 = mux(_T_141, UInt<1>("h01"), _T_306) @[Lookup.scala 33:37]
    node _T_308 = mux(_T_139, UInt<1>("h01"), _T_307) @[Lookup.scala 33:37]
    node _T_309 = mux(_T_137, UInt<1>("h01"), _T_308) @[Lookup.scala 33:37]
    node _T_310 = mux(_T_135, UInt<1>("h01"), _T_309) @[Lookup.scala 33:37]
    node _T_311 = mux(_T_133, UInt<1>("h01"), _T_310) @[Lookup.scala 33:37]
    node _T_312 = mux(_T_131, UInt<1>("h01"), _T_311) @[Lookup.scala 33:37]
    node _T_313 = mux(_T_129, UInt<1>("h01"), _T_312) @[Lookup.scala 33:37]
    node _T_314 = mux(_T_127, UInt<1>("h01"), _T_313) @[Lookup.scala 33:37]
    node _T_315 = mux(_T_125, UInt<1>("h01"), _T_314) @[Lookup.scala 33:37]
    node _T_316 = mux(_T_123, UInt<1>("h01"), _T_315) @[Lookup.scala 33:37]
    node _T_317 = mux(_T_121, UInt<1>("h01"), _T_316) @[Lookup.scala 33:37]
    node _T_318 = mux(_T_119, UInt<1>("h01"), _T_317) @[Lookup.scala 33:37]
    node _T_319 = mux(_T_117, UInt<1>("h01"), _T_318) @[Lookup.scala 33:37]
    node _T_320 = mux(_T_115, UInt<1>("h01"), _T_319) @[Lookup.scala 33:37]
    node _T_321 = mux(_T_113, UInt<1>("h01"), _T_320) @[Lookup.scala 33:37]
    node _T_322 = mux(_T_111, UInt<1>("h01"), _T_321) @[Lookup.scala 33:37]
    node _T_323 = mux(_T_109, UInt<1>("h01"), _T_322) @[Lookup.scala 33:37]
    node _T_324 = mux(_T_107, UInt<1>("h01"), _T_323) @[Lookup.scala 33:37]
    node _T_325 = mux(_T_105, UInt<1>("h01"), _T_324) @[Lookup.scala 33:37]
    node _T_326 = mux(_T_103, UInt<1>("h01"), _T_325) @[Lookup.scala 33:37]
    node _T_327 = mux(_T_101, UInt<1>("h01"), _T_326) @[Lookup.scala 33:37]
    node _T_328 = mux(_T_99, UInt<1>("h01"), _T_327) @[Lookup.scala 33:37]
    node _T_329 = mux(_T_97, UInt<1>("h00"), _T_328) @[Lookup.scala 33:37]
    node _T_330 = mux(_T_95, UInt<1>("h00"), _T_329) @[Lookup.scala 33:37]
    node _T_331 = mux(_T_93, UInt<1>("h00"), _T_330) @[Lookup.scala 33:37]
    node _T_332 = mux(_T_91, UInt<1>("h00"), _T_331) @[Lookup.scala 33:37]
    node _T_333 = mux(_T_89, UInt<1>("h00"), _T_332) @[Lookup.scala 33:37]
    node _T_334 = mux(_T_87, UInt<1>("h01"), _T_333) @[Lookup.scala 33:37]
    node _T_335 = mux(_T_85, UInt<1>("h01"), _T_334) @[Lookup.scala 33:37]
    node _T_336 = mux(_T_83, UInt<1>("h01"), _T_335) @[Lookup.scala 33:37]
    node _T_337 = mux(_T_81, UInt<1>("h01"), _T_336) @[Lookup.scala 33:37]
    node _T_338 = mux(_T_79, UInt<1>("h01"), _T_337) @[Lookup.scala 33:37]
    node _T_339 = mux(_T_77, UInt<1>("h01"), _T_338) @[Lookup.scala 33:37]
    node _T_340 = mux(_T_75, UInt<1>("h01"), _T_339) @[Lookup.scala 33:37]
    node _T_341 = mux(_T_73, UInt<1>("h00"), _T_340) @[Lookup.scala 33:37]
    node _T_342 = mux(_T_71, UInt<1>("h00"), _T_341) @[Lookup.scala 33:37]
    node _T_343 = mux(_T_69, UInt<1>("h00"), _T_342) @[Lookup.scala 33:37]
    node _T_344 = mux(_T_67, UInt<1>("h00"), _T_343) @[Lookup.scala 33:37]
    node _T_345 = mux(_T_65, UInt<1>("h00"), _T_344) @[Lookup.scala 33:37]
    node _T_346 = mux(_T_63, UInt<1>("h00"), _T_345) @[Lookup.scala 33:37]
    node _T_347 = mux(_T_61, UInt<1>("h01"), _T_346) @[Lookup.scala 33:37]
    node _T_348 = mux(_T_59, UInt<1>("h01"), _T_347) @[Lookup.scala 33:37]
    node _T_349 = mux(_T_57, UInt<1>("h01"), _T_348) @[Lookup.scala 33:37]
    node _T_350 = mux(_T_55, UInt<1>("h01"), _T_349) @[Lookup.scala 33:37]
    node _T_351 = mux(_T_53, UInt<1>("h01"), _T_350) @[Lookup.scala 33:37]
    node _T_352 = mux(_T_51, UInt<1>("h01"), _T_351) @[Lookup.scala 33:37]
    node _T_353 = mux(_T_49, UInt<1>("h01"), _T_352) @[Lookup.scala 33:37]
    node _T_354 = mux(_T_47, UInt<1>("h01"), _T_353) @[Lookup.scala 33:37]
    node _T_355 = mux(_T_45, UInt<1>("h01"), _T_354) @[Lookup.scala 33:37]
    node _T_356 = mux(_T_43, UInt<1>("h01"), _T_355) @[Lookup.scala 33:37]
    node _T_357 = mux(_T_41, UInt<1>("h01"), _T_356) @[Lookup.scala 33:37]
    node _T_358 = mux(_T_39, UInt<1>("h01"), _T_357) @[Lookup.scala 33:37]
    node _T_359 = mux(_T_37, UInt<1>("h01"), _T_358) @[Lookup.scala 33:37]
    node _T_360 = mux(_T_35, UInt<1>("h01"), _T_359) @[Lookup.scala 33:37]
    node _T_361 = mux(_T_33, UInt<1>("h01"), _T_360) @[Lookup.scala 33:37]
    node _T_362 = mux(_T_31, UInt<1>("h01"), _T_361) @[Lookup.scala 33:37]
    node _T_363 = mux(_T_29, UInt<1>("h01"), _T_362) @[Lookup.scala 33:37]
    node _T_364 = mux(_T_27, UInt<1>("h01"), _T_363) @[Lookup.scala 33:37]
    node _T_365 = mux(_T_25, UInt<1>("h01"), _T_364) @[Lookup.scala 33:37]
    node _T_366 = mux(_T_23, UInt<1>("h01"), _T_365) @[Lookup.scala 33:37]
    node regWen = mux(_T_21, UInt<1>("h01"), _T_366) @[Lookup.scala 33:37]
    node _T_367 = mux(_T_159, UInt<4>("h01"), UInt<4>("h00")) @[Lookup.scala 33:37]
    node _T_368 = mux(_T_157, UInt<4>("h00"), _T_367) @[Lookup.scala 33:37]
    node _T_369 = mux(_T_155, UInt<4>("h00"), _T_368) @[Lookup.scala 33:37]
    node _T_370 = mux(_T_153, UInt<4>("h00"), _T_369) @[Lookup.scala 33:37]
    node _T_371 = mux(_T_151, UInt<4>("h00"), _T_370) @[Lookup.scala 33:37]
    node _T_372 = mux(_T_149, UInt<4>("h00"), _T_371) @[Lookup.scala 33:37]
    node _T_373 = mux(_T_147, UInt<4>("h01"), _T_372) @[Lookup.scala 33:37]
    node _T_374 = mux(_T_145, UInt<4>("h01"), _T_373) @[Lookup.scala 33:37]
    node _T_375 = mux(_T_143, UInt<4>("h01"), _T_374) @[Lookup.scala 33:37]
    node _T_376 = mux(_T_141, UInt<4>("h01"), _T_375) @[Lookup.scala 33:37]
    node _T_377 = mux(_T_139, UInt<4>("h01"), _T_376) @[Lookup.scala 33:37]
    node _T_378 = mux(_T_137, UInt<4>("h01"), _T_377) @[Lookup.scala 33:37]
    node _T_379 = mux(_T_135, UInt<4>("h01"), _T_378) @[Lookup.scala 33:37]
    node _T_380 = mux(_T_133, UInt<4>("h01"), _T_379) @[Lookup.scala 33:37]
    node _T_381 = mux(_T_131, UInt<4>("h01"), _T_380) @[Lookup.scala 33:37]
    node _T_382 = mux(_T_129, UInt<4>("h01"), _T_381) @[Lookup.scala 33:37]
    node _T_383 = mux(_T_127, UInt<4>("h01"), _T_382) @[Lookup.scala 33:37]
    node _T_384 = mux(_T_125, UInt<4>("h01"), _T_383) @[Lookup.scala 33:37]
    node _T_385 = mux(_T_123, UInt<4>("h01"), _T_384) @[Lookup.scala 33:37]
    node _T_386 = mux(_T_121, UInt<4>("h01"), _T_385) @[Lookup.scala 33:37]
    node _T_387 = mux(_T_119, UInt<4>("h01"), _T_386) @[Lookup.scala 33:37]
    node _T_388 = mux(_T_117, UInt<4>("h01"), _T_387) @[Lookup.scala 33:37]
    node _T_389 = mux(_T_115, UInt<4>("h01"), _T_388) @[Lookup.scala 33:37]
    node _T_390 = mux(_T_113, UInt<4>("h01"), _T_389) @[Lookup.scala 33:37]
    node _T_391 = mux(_T_111, UInt<4>("h01"), _T_390) @[Lookup.scala 33:37]
    node _T_392 = mux(_T_109, UInt<4>("h00"), _T_391) @[Lookup.scala 33:37]
    node _T_393 = mux(_T_107, UInt<4>("h00"), _T_392) @[Lookup.scala 33:37]
    node _T_394 = mux(_T_105, UInt<4>("h00"), _T_393) @[Lookup.scala 33:37]
    node _T_395 = mux(_T_103, UInt<4>("h00"), _T_394) @[Lookup.scala 33:37]
    node _T_396 = mux(_T_101, UInt<4>("h00"), _T_395) @[Lookup.scala 33:37]
    node _T_397 = mux(_T_99, UInt<4>("h00"), _T_396) @[Lookup.scala 33:37]
    node _T_398 = mux(_T_97, UInt<4>("h00"), _T_397) @[Lookup.scala 33:37]
    node _T_399 = mux(_T_95, UInt<4>("h00"), _T_398) @[Lookup.scala 33:37]
    node _T_400 = mux(_T_93, UInt<4>("h01"), _T_399) @[Lookup.scala 33:37]
    node _T_401 = mux(_T_91, UInt<4>("h01"), _T_400) @[Lookup.scala 33:37]
    node _T_402 = mux(_T_89, UInt<4>("h01"), _T_401) @[Lookup.scala 33:37]
    node _T_403 = mux(_T_87, UInt<4>("h01"), _T_402) @[Lookup.scala 33:37]
    node _T_404 = mux(_T_85, UInt<4>("h01"), _T_403) @[Lookup.scala 33:37]
    node _T_405 = mux(_T_83, UInt<4>("h01"), _T_404) @[Lookup.scala 33:37]
    node _T_406 = mux(_T_81, UInt<4>("h01"), _T_405) @[Lookup.scala 33:37]
    node _T_407 = mux(_T_79, UInt<4>("h01"), _T_406) @[Lookup.scala 33:37]
    node _T_408 = mux(_T_77, UInt<4>("h07"), _T_407) @[Lookup.scala 33:37]
    node _T_409 = mux(_T_75, UInt<4>("h07"), _T_408) @[Lookup.scala 33:37]
    node _T_410 = mux(_T_73, UInt<4>("h00"), _T_409) @[Lookup.scala 33:37]
    node _T_411 = mux(_T_71, UInt<4>("h00"), _T_410) @[Lookup.scala 33:37]
    node _T_412 = mux(_T_69, UInt<4>("h00"), _T_411) @[Lookup.scala 33:37]
    node _T_413 = mux(_T_67, UInt<4>("h00"), _T_412) @[Lookup.scala 33:37]
    node _T_414 = mux(_T_65, UInt<4>("h00"), _T_413) @[Lookup.scala 33:37]
    node _T_415 = mux(_T_63, UInt<4>("h00"), _T_414) @[Lookup.scala 33:37]
    node _T_416 = mux(_T_61, UInt<4>("h01"), _T_415) @[Lookup.scala 33:37]
    node _T_417 = mux(_T_59, UInt<4>("h01"), _T_416) @[Lookup.scala 33:37]
    node _T_418 = mux(_T_57, UInt<4>("h01"), _T_417) @[Lookup.scala 33:37]
    node _T_419 = mux(_T_55, UInt<4>("h01"), _T_418) @[Lookup.scala 33:37]
    node _T_420 = mux(_T_53, UInt<4>("h01"), _T_419) @[Lookup.scala 33:37]
    node _T_421 = mux(_T_51, UInt<4>("h01"), _T_420) @[Lookup.scala 33:37]
    node _T_422 = mux(_T_49, UInt<4>("h01"), _T_421) @[Lookup.scala 33:37]
    node _T_423 = mux(_T_47, UInt<4>("h01"), _T_422) @[Lookup.scala 33:37]
    node _T_424 = mux(_T_45, UInt<4>("h01"), _T_423) @[Lookup.scala 33:37]
    node _T_425 = mux(_T_43, UInt<4>("h01"), _T_424) @[Lookup.scala 33:37]
    node _T_426 = mux(_T_41, UInt<4>("h01"), _T_425) @[Lookup.scala 33:37]
    node _T_427 = mux(_T_39, UInt<4>("h01"), _T_426) @[Lookup.scala 33:37]
    node _T_428 = mux(_T_37, UInt<4>("h01"), _T_427) @[Lookup.scala 33:37]
    node _T_429 = mux(_T_35, UInt<4>("h01"), _T_428) @[Lookup.scala 33:37]
    node _T_430 = mux(_T_33, UInt<4>("h01"), _T_429) @[Lookup.scala 33:37]
    node _T_431 = mux(_T_31, UInt<4>("h01"), _T_430) @[Lookup.scala 33:37]
    node _T_432 = mux(_T_29, UInt<4>("h07"), _T_431) @[Lookup.scala 33:37]
    node _T_433 = mux(_T_27, UInt<4>("h00"), _T_432) @[Lookup.scala 33:37]
    node _T_434 = mux(_T_25, UInt<4>("h01"), _T_433) @[Lookup.scala 33:37]
    node _T_435 = mux(_T_23, UInt<4>("h01"), _T_434) @[Lookup.scala 33:37]
    node aluSrc1 = mux(_T_21, UInt<4>("h01"), _T_435) @[Lookup.scala 33:37]
    node _T_436 = mux(_T_159, UInt<4>("h00"), UInt<4>("h00")) @[Lookup.scala 33:37]
    node _T_437 = mux(_T_157, UInt<4>("h00"), _T_436) @[Lookup.scala 33:37]
    node _T_438 = mux(_T_155, UInt<4>("h00"), _T_437) @[Lookup.scala 33:37]
    node _T_439 = mux(_T_153, UInt<4>("h00"), _T_438) @[Lookup.scala 33:37]
    node _T_440 = mux(_T_151, UInt<4>("h00"), _T_439) @[Lookup.scala 33:37]
    node _T_441 = mux(_T_149, UInt<4>("h00"), _T_440) @[Lookup.scala 33:37]
    node _T_442 = mux(_T_147, UInt<4>("h00"), _T_441) @[Lookup.scala 33:37]
    node _T_443 = mux(_T_145, UInt<4>("h00"), _T_442) @[Lookup.scala 33:37]
    node _T_444 = mux(_T_143, UInt<4>("h00"), _T_443) @[Lookup.scala 33:37]
    node _T_445 = mux(_T_141, UInt<4>("h00"), _T_444) @[Lookup.scala 33:37]
    node _T_446 = mux(_T_139, UInt<4>("h00"), _T_445) @[Lookup.scala 33:37]
    node _T_447 = mux(_T_137, UInt<4>("h00"), _T_446) @[Lookup.scala 33:37]
    node _T_448 = mux(_T_135, UInt<4>("h00"), _T_447) @[Lookup.scala 33:37]
    node _T_449 = mux(_T_133, UInt<4>("h00"), _T_448) @[Lookup.scala 33:37]
    node _T_450 = mux(_T_131, UInt<4>("h00"), _T_449) @[Lookup.scala 33:37]
    node _T_451 = mux(_T_129, UInt<4>("h00"), _T_450) @[Lookup.scala 33:37]
    node _T_452 = mux(_T_127, UInt<4>("h00"), _T_451) @[Lookup.scala 33:37]
    node _T_453 = mux(_T_125, UInt<4>("h02"), _T_452) @[Lookup.scala 33:37]
    node _T_454 = mux(_T_123, UInt<4>("h02"), _T_453) @[Lookup.scala 33:37]
    node _T_455 = mux(_T_121, UInt<4>("h02"), _T_454) @[Lookup.scala 33:37]
    node _T_456 = mux(_T_119, UInt<4>("h02"), _T_455) @[Lookup.scala 33:37]
    node _T_457 = mux(_T_117, UInt<4>("h02"), _T_456) @[Lookup.scala 33:37]
    node _T_458 = mux(_T_115, UInt<4>("h02"), _T_457) @[Lookup.scala 33:37]
    node _T_459 = mux(_T_113, UInt<4>("h02"), _T_458) @[Lookup.scala 33:37]
    node _T_460 = mux(_T_111, UInt<4>("h02"), _T_459) @[Lookup.scala 33:37]
    node _T_461 = mux(_T_109, UInt<4>("h00"), _T_460) @[Lookup.scala 33:37]
    node _T_462 = mux(_T_107, UInt<4>("h00"), _T_461) @[Lookup.scala 33:37]
    node _T_463 = mux(_T_105, UInt<4>("h00"), _T_462) @[Lookup.scala 33:37]
    node _T_464 = mux(_T_103, UInt<4>("h00"), _T_463) @[Lookup.scala 33:37]
    node _T_465 = mux(_T_101, UInt<4>("h00"), _T_464) @[Lookup.scala 33:37]
    node _T_466 = mux(_T_99, UInt<4>("h00"), _T_465) @[Lookup.scala 33:37]
    node _T_467 = mux(_T_97, UInt<4>("h00"), _T_466) @[Lookup.scala 33:37]
    node _T_468 = mux(_T_95, UInt<4>("h03"), _T_467) @[Lookup.scala 33:37]
    node _T_469 = mux(_T_93, UInt<4>("h04"), _T_468) @[Lookup.scala 33:37]
    node _T_470 = mux(_T_91, UInt<4>("h04"), _T_469) @[Lookup.scala 33:37]
    node _T_471 = mux(_T_89, UInt<4>("h04"), _T_470) @[Lookup.scala 33:37]
    node _T_472 = mux(_T_87, UInt<4>("h03"), _T_471) @[Lookup.scala 33:37]
    node _T_473 = mux(_T_85, UInt<4>("h03"), _T_472) @[Lookup.scala 33:37]
    node _T_474 = mux(_T_83, UInt<4>("h03"), _T_473) @[Lookup.scala 33:37]
    node _T_475 = mux(_T_81, UInt<4>("h03"), _T_474) @[Lookup.scala 33:37]
    node _T_476 = mux(_T_79, UInt<4>("h03"), _T_475) @[Lookup.scala 33:37]
    node _T_477 = mux(_T_77, UInt<4>("h08"), _T_476) @[Lookup.scala 33:37]
    node _T_478 = mux(_T_75, UInt<4>("h08"), _T_477) @[Lookup.scala 33:37]
    node _T_479 = mux(_T_73, UInt<4>("h00"), _T_478) @[Lookup.scala 33:37]
    node _T_480 = mux(_T_71, UInt<4>("h00"), _T_479) @[Lookup.scala 33:37]
    node _T_481 = mux(_T_69, UInt<4>("h00"), _T_480) @[Lookup.scala 33:37]
    node _T_482 = mux(_T_67, UInt<4>("h00"), _T_481) @[Lookup.scala 33:37]
    node _T_483 = mux(_T_65, UInt<4>("h00"), _T_482) @[Lookup.scala 33:37]
    node _T_484 = mux(_T_63, UInt<4>("h00"), _T_483) @[Lookup.scala 33:37]
    node _T_485 = mux(_T_61, UInt<4>("h06"), _T_484) @[Lookup.scala 33:37]
    node _T_486 = mux(_T_59, UInt<4>("h02"), _T_485) @[Lookup.scala 33:37]
    node _T_487 = mux(_T_57, UInt<4>("h06"), _T_486) @[Lookup.scala 33:37]
    node _T_488 = mux(_T_55, UInt<4>("h02"), _T_487) @[Lookup.scala 33:37]
    node _T_489 = mux(_T_53, UInt<4>("h06"), _T_488) @[Lookup.scala 33:37]
    node _T_490 = mux(_T_51, UInt<4>("h02"), _T_489) @[Lookup.scala 33:37]
    node _T_491 = mux(_T_49, UInt<4>("h03"), _T_490) @[Lookup.scala 33:37]
    node _T_492 = mux(_T_47, UInt<4>("h02"), _T_491) @[Lookup.scala 33:37]
    node _T_493 = mux(_T_45, UInt<4>("h03"), _T_492) @[Lookup.scala 33:37]
    node _T_494 = mux(_T_43, UInt<4>("h02"), _T_493) @[Lookup.scala 33:37]
    node _T_495 = mux(_T_41, UInt<4>("h03"), _T_494) @[Lookup.scala 33:37]
    node _T_496 = mux(_T_39, UInt<4>("h02"), _T_495) @[Lookup.scala 33:37]
    node _T_497 = mux(_T_37, UInt<4>("h03"), _T_496) @[Lookup.scala 33:37]
    node _T_498 = mux(_T_35, UInt<4>("h02"), _T_497) @[Lookup.scala 33:37]
    node _T_499 = mux(_T_33, UInt<4>("h03"), _T_498) @[Lookup.scala 33:37]
    node _T_500 = mux(_T_31, UInt<4>("h02"), _T_499) @[Lookup.scala 33:37]
    node _T_501 = mux(_T_29, UInt<4>("h05"), _T_500) @[Lookup.scala 33:37]
    node _T_502 = mux(_T_27, UInt<4>("h05"), _T_501) @[Lookup.scala 33:37]
    node _T_503 = mux(_T_25, UInt<4>("h02"), _T_502) @[Lookup.scala 33:37]
    node _T_504 = mux(_T_23, UInt<4>("h03"), _T_503) @[Lookup.scala 33:37]
    node aluSrc2 = mux(_T_21, UInt<4>("h02"), _T_504) @[Lookup.scala 33:37]
    node _T_505 = mux(_T_159, UInt<4>("h03"), UInt<4>("h00")) @[Lookup.scala 33:37]
    node _T_506 = mux(_T_157, UInt<4>("h00"), _T_505) @[Lookup.scala 33:37]
    node _T_507 = mux(_T_155, UInt<4>("h00"), _T_506) @[Lookup.scala 33:37]
    node _T_508 = mux(_T_153, UInt<4>("h00"), _T_507) @[Lookup.scala 33:37]
    node _T_509 = mux(_T_151, UInt<4>("h00"), _T_508) @[Lookup.scala 33:37]
    node _T_510 = mux(_T_149, UInt<4>("h00"), _T_509) @[Lookup.scala 33:37]
    node _T_511 = mux(_T_147, UInt<4>("h03"), _T_510) @[Lookup.scala 33:37]
    node _T_512 = mux(_T_145, UInt<4>("h03"), _T_511) @[Lookup.scala 33:37]
    node _T_513 = mux(_T_143, UInt<4>("h03"), _T_512) @[Lookup.scala 33:37]
    node _T_514 = mux(_T_141, UInt<4>("h03"), _T_513) @[Lookup.scala 33:37]
    node _T_515 = mux(_T_139, UInt<4>("h03"), _T_514) @[Lookup.scala 33:37]
    node _T_516 = mux(_T_137, UInt<4>("h03"), _T_515) @[Lookup.scala 33:37]
    node _T_517 = mux(_T_135, UInt<4>("h03"), _T_516) @[Lookup.scala 33:37]
    node _T_518 = mux(_T_133, UInt<4>("h03"), _T_517) @[Lookup.scala 33:37]
    node _T_519 = mux(_T_131, UInt<4>("h03"), _T_518) @[Lookup.scala 33:37]
    node _T_520 = mux(_T_129, UInt<4>("h03"), _T_519) @[Lookup.scala 33:37]
    node _T_521 = mux(_T_127, UInt<4>("h03"), _T_520) @[Lookup.scala 33:37]
    node _T_522 = mux(_T_125, UInt<4>("h00"), _T_521) @[Lookup.scala 33:37]
    node _T_523 = mux(_T_123, UInt<4>("h00"), _T_522) @[Lookup.scala 33:37]
    node _T_524 = mux(_T_121, UInt<4>("h00"), _T_523) @[Lookup.scala 33:37]
    node _T_525 = mux(_T_119, UInt<4>("h00"), _T_524) @[Lookup.scala 33:37]
    node _T_526 = mux(_T_117, UInt<4>("h00"), _T_525) @[Lookup.scala 33:37]
    node _T_527 = mux(_T_115, UInt<4>("h00"), _T_526) @[Lookup.scala 33:37]
    node _T_528 = mux(_T_113, UInt<4>("h00"), _T_527) @[Lookup.scala 33:37]
    node _T_529 = mux(_T_111, UInt<4>("h00"), _T_528) @[Lookup.scala 33:37]
    node _T_530 = mux(_T_109, UInt<4>("h00"), _T_529) @[Lookup.scala 33:37]
    node _T_531 = mux(_T_107, UInt<4>("h00"), _T_530) @[Lookup.scala 33:37]
    node _T_532 = mux(_T_105, UInt<4>("h00"), _T_531) @[Lookup.scala 33:37]
    node _T_533 = mux(_T_103, UInt<4>("h00"), _T_532) @[Lookup.scala 33:37]
    node _T_534 = mux(_T_101, UInt<4>("h00"), _T_533) @[Lookup.scala 33:37]
    node _T_535 = mux(_T_99, UInt<4>("h00"), _T_534) @[Lookup.scala 33:37]
    node _T_536 = mux(_T_97, UInt<4>("h00"), _T_535) @[Lookup.scala 33:37]
    node _T_537 = mux(_T_95, UInt<4>("h03"), _T_536) @[Lookup.scala 33:37]
    node _T_538 = mux(_T_93, UInt<4>("h00"), _T_537) @[Lookup.scala 33:37]
    node _T_539 = mux(_T_91, UInt<4>("h00"), _T_538) @[Lookup.scala 33:37]
    node _T_540 = mux(_T_89, UInt<4>("h00"), _T_539) @[Lookup.scala 33:37]
    node _T_541 = mux(_T_87, UInt<4>("h00"), _T_540) @[Lookup.scala 33:37]
    node _T_542 = mux(_T_85, UInt<4>("h00"), _T_541) @[Lookup.scala 33:37]
    node _T_543 = mux(_T_83, UInt<4>("h00"), _T_542) @[Lookup.scala 33:37]
    node _T_544 = mux(_T_81, UInt<4>("h00"), _T_543) @[Lookup.scala 33:37]
    node _T_545 = mux(_T_79, UInt<4>("h00"), _T_544) @[Lookup.scala 33:37]
    node _T_546 = mux(_T_77, UInt<4>("h00"), _T_545) @[Lookup.scala 33:37]
    node _T_547 = mux(_T_75, UInt<4>("h00"), _T_546) @[Lookup.scala 33:37]
    node _T_548 = mux(_T_73, UInt<4>("h00"), _T_547) @[Lookup.scala 33:37]
    node _T_549 = mux(_T_71, UInt<4>("h00"), _T_548) @[Lookup.scala 33:37]
    node _T_550 = mux(_T_69, UInt<4>("h00"), _T_549) @[Lookup.scala 33:37]
    node _T_551 = mux(_T_67, UInt<4>("h00"), _T_550) @[Lookup.scala 33:37]
    node _T_552 = mux(_T_65, UInt<4>("h00"), _T_551) @[Lookup.scala 33:37]
    node _T_553 = mux(_T_63, UInt<4>("h00"), _T_552) @[Lookup.scala 33:37]
    node _T_554 = mux(_T_61, UInt<4>("h09"), _T_553) @[Lookup.scala 33:37]
    node _T_555 = mux(_T_59, UInt<4>("h09"), _T_554) @[Lookup.scala 33:37]
    node _T_556 = mux(_T_57, UInt<4>("h08"), _T_555) @[Lookup.scala 33:37]
    node _T_557 = mux(_T_55, UInt<4>("h08"), _T_556) @[Lookup.scala 33:37]
    node _T_558 = mux(_T_53, UInt<4>("h07"), _T_557) @[Lookup.scala 33:37]
    node _T_559 = mux(_T_51, UInt<4>("h07"), _T_558) @[Lookup.scala 33:37]
    node _T_560 = mux(_T_49, UInt<4>("h06"), _T_559) @[Lookup.scala 33:37]
    node _T_561 = mux(_T_47, UInt<4>("h06"), _T_560) @[Lookup.scala 33:37]
    node _T_562 = mux(_T_45, UInt<4>("h05"), _T_561) @[Lookup.scala 33:37]
    node _T_563 = mux(_T_43, UInt<4>("h05"), _T_562) @[Lookup.scala 33:37]
    node _T_564 = mux(_T_41, UInt<4>("h04"), _T_563) @[Lookup.scala 33:37]
    node _T_565 = mux(_T_39, UInt<4>("h04"), _T_564) @[Lookup.scala 33:37]
    node _T_566 = mux(_T_37, UInt<4>("h03"), _T_565) @[Lookup.scala 33:37]
    node _T_567 = mux(_T_35, UInt<4>("h03"), _T_566) @[Lookup.scala 33:37]
    node _T_568 = mux(_T_33, UInt<4>("h02"), _T_567) @[Lookup.scala 33:37]
    node _T_569 = mux(_T_31, UInt<4>("h02"), _T_568) @[Lookup.scala 33:37]
    node _T_570 = mux(_T_29, UInt<4>("h00"), _T_569) @[Lookup.scala 33:37]
    node _T_571 = mux(_T_27, UInt<4>("h03"), _T_570) @[Lookup.scala 33:37]
    node _T_572 = mux(_T_25, UInt<4>("h01"), _T_571) @[Lookup.scala 33:37]
    node _T_573 = mux(_T_23, UInt<4>("h00"), _T_572) @[Lookup.scala 33:37]
    node aluOp = mux(_T_21, UInt<4>("h00"), _T_573) @[Lookup.scala 33:37]
    node _T_574 = mux(_T_159, UInt<3>("h00"), UInt<3>("h00")) @[Lookup.scala 33:37]
    node _T_575 = mux(_T_157, UInt<3>("h00"), _T_574) @[Lookup.scala 33:37]
    node _T_576 = mux(_T_155, UInt<3>("h00"), _T_575) @[Lookup.scala 33:37]
    node _T_577 = mux(_T_153, UInt<3>("h00"), _T_576) @[Lookup.scala 33:37]
    node _T_578 = mux(_T_151, UInt<3>("h00"), _T_577) @[Lookup.scala 33:37]
    node _T_579 = mux(_T_149, UInt<3>("h00"), _T_578) @[Lookup.scala 33:37]
    node _T_580 = mux(_T_147, UInt<3>("h00"), _T_579) @[Lookup.scala 33:37]
    node _T_581 = mux(_T_145, UInt<3>("h00"), _T_580) @[Lookup.scala 33:37]
    node _T_582 = mux(_T_143, UInt<3>("h00"), _T_581) @[Lookup.scala 33:37]
    node _T_583 = mux(_T_141, UInt<3>("h00"), _T_582) @[Lookup.scala 33:37]
    node _T_584 = mux(_T_139, UInt<3>("h00"), _T_583) @[Lookup.scala 33:37]
    node _T_585 = mux(_T_137, UInt<3>("h00"), _T_584) @[Lookup.scala 33:37]
    node _T_586 = mux(_T_135, UInt<3>("h00"), _T_585) @[Lookup.scala 33:37]
    node _T_587 = mux(_T_133, UInt<3>("h00"), _T_586) @[Lookup.scala 33:37]
    node _T_588 = mux(_T_131, UInt<3>("h00"), _T_587) @[Lookup.scala 33:37]
    node _T_589 = mux(_T_129, UInt<3>("h00"), _T_588) @[Lookup.scala 33:37]
    node _T_590 = mux(_T_127, UInt<3>("h00"), _T_589) @[Lookup.scala 33:37]
    node _T_591 = mux(_T_125, UInt<3>("h00"), _T_590) @[Lookup.scala 33:37]
    node _T_592 = mux(_T_123, UInt<3>("h00"), _T_591) @[Lookup.scala 33:37]
    node _T_593 = mux(_T_121, UInt<3>("h00"), _T_592) @[Lookup.scala 33:37]
    node _T_594 = mux(_T_119, UInt<3>("h00"), _T_593) @[Lookup.scala 33:37]
    node _T_595 = mux(_T_117, UInt<3>("h00"), _T_594) @[Lookup.scala 33:37]
    node _T_596 = mux(_T_115, UInt<3>("h00"), _T_595) @[Lookup.scala 33:37]
    node _T_597 = mux(_T_113, UInt<3>("h00"), _T_596) @[Lookup.scala 33:37]
    node _T_598 = mux(_T_111, UInt<3>("h00"), _T_597) @[Lookup.scala 33:37]
    node _T_599 = mux(_T_109, UInt<3>("h00"), _T_598) @[Lookup.scala 33:37]
    node _T_600 = mux(_T_107, UInt<3>("h00"), _T_599) @[Lookup.scala 33:37]
    node _T_601 = mux(_T_105, UInt<3>("h00"), _T_600) @[Lookup.scala 33:37]
    node _T_602 = mux(_T_103, UInt<3>("h00"), _T_601) @[Lookup.scala 33:37]
    node _T_603 = mux(_T_101, UInt<3>("h00"), _T_602) @[Lookup.scala 33:37]
    node _T_604 = mux(_T_99, UInt<3>("h00"), _T_603) @[Lookup.scala 33:37]
    node _T_605 = mux(_T_97, UInt<3>("h00"), _T_604) @[Lookup.scala 33:37]
    node _T_606 = mux(_T_95, UInt<3>("h00"), _T_605) @[Lookup.scala 33:37]
    node _T_607 = mux(_T_93, UInt<3>("h00"), _T_606) @[Lookup.scala 33:37]
    node _T_608 = mux(_T_91, UInt<3>("h00"), _T_607) @[Lookup.scala 33:37]
    node _T_609 = mux(_T_89, UInt<3>("h00"), _T_608) @[Lookup.scala 33:37]
    node _T_610 = mux(_T_87, UInt<3>("h00"), _T_609) @[Lookup.scala 33:37]
    node _T_611 = mux(_T_85, UInt<3>("h00"), _T_610) @[Lookup.scala 33:37]
    node _T_612 = mux(_T_83, UInt<3>("h00"), _T_611) @[Lookup.scala 33:37]
    node _T_613 = mux(_T_81, UInt<3>("h00"), _T_612) @[Lookup.scala 33:37]
    node _T_614 = mux(_T_79, UInt<3>("h00"), _T_613) @[Lookup.scala 33:37]
    node _T_615 = mux(_T_77, UInt<3>("h01"), _T_614) @[Lookup.scala 33:37]
    node _T_616 = mux(_T_75, UInt<3>("h01"), _T_615) @[Lookup.scala 33:37]
    node _T_617 = mux(_T_73, UInt<3>("h07"), _T_616) @[Lookup.scala 33:37]
    node _T_618 = mux(_T_71, UInt<3>("h06"), _T_617) @[Lookup.scala 33:37]
    node _T_619 = mux(_T_69, UInt<3>("h05"), _T_618) @[Lookup.scala 33:37]
    node _T_620 = mux(_T_67, UInt<3>("h04"), _T_619) @[Lookup.scala 33:37]
    node _T_621 = mux(_T_65, UInt<3>("h03"), _T_620) @[Lookup.scala 33:37]
    node _T_622 = mux(_T_63, UInt<3>("h02"), _T_621) @[Lookup.scala 33:37]
    node _T_623 = mux(_T_61, UInt<3>("h00"), _T_622) @[Lookup.scala 33:37]
    node _T_624 = mux(_T_59, UInt<3>("h00"), _T_623) @[Lookup.scala 33:37]
    node _T_625 = mux(_T_57, UInt<3>("h00"), _T_624) @[Lookup.scala 33:37]
    node _T_626 = mux(_T_55, UInt<3>("h00"), _T_625) @[Lookup.scala 33:37]
    node _T_627 = mux(_T_53, UInt<3>("h00"), _T_626) @[Lookup.scala 33:37]
    node _T_628 = mux(_T_51, UInt<3>("h00"), _T_627) @[Lookup.scala 33:37]
    node _T_629 = mux(_T_49, UInt<3>("h00"), _T_628) @[Lookup.scala 33:37]
    node _T_630 = mux(_T_47, UInt<3>("h00"), _T_629) @[Lookup.scala 33:37]
    node _T_631 = mux(_T_45, UInt<3>("h00"), _T_630) @[Lookup.scala 33:37]
    node _T_632 = mux(_T_43, UInt<3>("h00"), _T_631) @[Lookup.scala 33:37]
    node _T_633 = mux(_T_41, UInt<3>("h00"), _T_632) @[Lookup.scala 33:37]
    node _T_634 = mux(_T_39, UInt<3>("h00"), _T_633) @[Lookup.scala 33:37]
    node _T_635 = mux(_T_37, UInt<3>("h00"), _T_634) @[Lookup.scala 33:37]
    node _T_636 = mux(_T_35, UInt<3>("h00"), _T_635) @[Lookup.scala 33:37]
    node _T_637 = mux(_T_33, UInt<3>("h00"), _T_636) @[Lookup.scala 33:37]
    node _T_638 = mux(_T_31, UInt<3>("h00"), _T_637) @[Lookup.scala 33:37]
    node _T_639 = mux(_T_29, UInt<3>("h00"), _T_638) @[Lookup.scala 33:37]
    node _T_640 = mux(_T_27, UInt<3>("h00"), _T_639) @[Lookup.scala 33:37]
    node _T_641 = mux(_T_25, UInt<3>("h00"), _T_640) @[Lookup.scala 33:37]
    node _T_642 = mux(_T_23, UInt<3>("h00"), _T_641) @[Lookup.scala 33:37]
    node branchFlag = mux(_T_21, UInt<3>("h00"), _T_642) @[Lookup.scala 33:37]
    node _T_643 = mux(_T_159, UInt<5>("h016"), UInt<5>("h00")) @[Lookup.scala 33:37]
    node _T_644 = mux(_T_157, UInt<5>("h00"), _T_643) @[Lookup.scala 33:37]
    node _T_645 = mux(_T_155, UInt<5>("h00"), _T_644) @[Lookup.scala 33:37]
    node _T_646 = mux(_T_153, UInt<5>("h00"), _T_645) @[Lookup.scala 33:37]
    node _T_647 = mux(_T_151, UInt<5>("h00"), _T_646) @[Lookup.scala 33:37]
    node _T_648 = mux(_T_149, UInt<5>("h00"), _T_647) @[Lookup.scala 33:37]
    node _T_649 = mux(_T_147, UInt<5>("h013"), _T_648) @[Lookup.scala 33:37]
    node _T_650 = mux(_T_145, UInt<5>("h012"), _T_649) @[Lookup.scala 33:37]
    node _T_651 = mux(_T_143, UInt<5>("h011"), _T_650) @[Lookup.scala 33:37]
    node _T_652 = mux(_T_141, UInt<5>("h010"), _T_651) @[Lookup.scala 33:37]
    node _T_653 = mux(_T_139, UInt<5>("h0f"), _T_652) @[Lookup.scala 33:37]
    node _T_654 = mux(_T_137, UInt<5>("h0e"), _T_653) @[Lookup.scala 33:37]
    node _T_655 = mux(_T_135, UInt<5>("h0d"), _T_654) @[Lookup.scala 33:37]
    node _T_656 = mux(_T_133, UInt<5>("h0c"), _T_655) @[Lookup.scala 33:37]
    node _T_657 = mux(_T_131, UInt<5>("h0b"), _T_656) @[Lookup.scala 33:37]
    node _T_658 = mux(_T_129, UInt<5>("h0a"), _T_657) @[Lookup.scala 33:37]
    node _T_659 = mux(_T_127, UInt<5>("h09"), _T_658) @[Lookup.scala 33:37]
    node _T_660 = mux(_T_125, UInt<5>("h00"), _T_659) @[Lookup.scala 33:37]
    node _T_661 = mux(_T_123, UInt<5>("h00"), _T_660) @[Lookup.scala 33:37]
    node _T_662 = mux(_T_121, UInt<5>("h00"), _T_661) @[Lookup.scala 33:37]
    node _T_663 = mux(_T_119, UInt<5>("h00"), _T_662) @[Lookup.scala 33:37]
    node _T_664 = mux(_T_117, UInt<5>("h00"), _T_663) @[Lookup.scala 33:37]
    node _T_665 = mux(_T_115, UInt<5>("h00"), _T_664) @[Lookup.scala 33:37]
    node _T_666 = mux(_T_113, UInt<5>("h00"), _T_665) @[Lookup.scala 33:37]
    node _T_667 = mux(_T_111, UInt<5>("h00"), _T_666) @[Lookup.scala 33:37]
    node _T_668 = mux(_T_109, UInt<5>("h00"), _T_667) @[Lookup.scala 33:37]
    node _T_669 = mux(_T_107, UInt<5>("h00"), _T_668) @[Lookup.scala 33:37]
    node _T_670 = mux(_T_105, UInt<5>("h00"), _T_669) @[Lookup.scala 33:37]
    node _T_671 = mux(_T_103, UInt<5>("h00"), _T_670) @[Lookup.scala 33:37]
    node _T_672 = mux(_T_101, UInt<5>("h00"), _T_671) @[Lookup.scala 33:37]
    node _T_673 = mux(_T_99, UInt<5>("h00"), _T_672) @[Lookup.scala 33:37]
    node _T_674 = mux(_T_97, UInt<5>("h015"), _T_673) @[Lookup.scala 33:37]
    node _T_675 = mux(_T_95, UInt<5>("h014"), _T_674) @[Lookup.scala 33:37]
    node _T_676 = mux(_T_93, UInt<5>("h08"), _T_675) @[Lookup.scala 33:37]
    node _T_677 = mux(_T_91, UInt<5>("h07"), _T_676) @[Lookup.scala 33:37]
    node _T_678 = mux(_T_89, UInt<5>("h06"), _T_677) @[Lookup.scala 33:37]
    node _T_679 = mux(_T_87, UInt<5>("h05"), _T_678) @[Lookup.scala 33:37]
    node _T_680 = mux(_T_85, UInt<5>("h04"), _T_679) @[Lookup.scala 33:37]
    node _T_681 = mux(_T_83, UInt<5>("h03"), _T_680) @[Lookup.scala 33:37]
    node _T_682 = mux(_T_81, UInt<5>("h02"), _T_681) @[Lookup.scala 33:37]
    node _T_683 = mux(_T_79, UInt<5>("h01"), _T_682) @[Lookup.scala 33:37]
    node _T_684 = mux(_T_77, UInt<5>("h00"), _T_683) @[Lookup.scala 33:37]
    node _T_685 = mux(_T_75, UInt<5>("h00"), _T_684) @[Lookup.scala 33:37]
    node _T_686 = mux(_T_73, UInt<5>("h00"), _T_685) @[Lookup.scala 33:37]
    node _T_687 = mux(_T_71, UInt<5>("h00"), _T_686) @[Lookup.scala 33:37]
    node _T_688 = mux(_T_69, UInt<5>("h00"), _T_687) @[Lookup.scala 33:37]
    node _T_689 = mux(_T_67, UInt<5>("h00"), _T_688) @[Lookup.scala 33:37]
    node _T_690 = mux(_T_65, UInt<5>("h00"), _T_689) @[Lookup.scala 33:37]
    node _T_691 = mux(_T_63, UInt<5>("h00"), _T_690) @[Lookup.scala 33:37]
    node _T_692 = mux(_T_61, UInt<5>("h00"), _T_691) @[Lookup.scala 33:37]
    node _T_693 = mux(_T_59, UInt<5>("h00"), _T_692) @[Lookup.scala 33:37]
    node _T_694 = mux(_T_57, UInt<5>("h00"), _T_693) @[Lookup.scala 33:37]
    node _T_695 = mux(_T_55, UInt<5>("h00"), _T_694) @[Lookup.scala 33:37]
    node _T_696 = mux(_T_53, UInt<5>("h00"), _T_695) @[Lookup.scala 33:37]
    node _T_697 = mux(_T_51, UInt<5>("h00"), _T_696) @[Lookup.scala 33:37]
    node _T_698 = mux(_T_49, UInt<5>("h00"), _T_697) @[Lookup.scala 33:37]
    node _T_699 = mux(_T_47, UInt<5>("h00"), _T_698) @[Lookup.scala 33:37]
    node _T_700 = mux(_T_45, UInt<5>("h00"), _T_699) @[Lookup.scala 33:37]
    node _T_701 = mux(_T_43, UInt<5>("h00"), _T_700) @[Lookup.scala 33:37]
    node _T_702 = mux(_T_41, UInt<5>("h00"), _T_701) @[Lookup.scala 33:37]
    node _T_703 = mux(_T_39, UInt<5>("h00"), _T_702) @[Lookup.scala 33:37]
    node _T_704 = mux(_T_37, UInt<5>("h00"), _T_703) @[Lookup.scala 33:37]
    node _T_705 = mux(_T_35, UInt<5>("h00"), _T_704) @[Lookup.scala 33:37]
    node _T_706 = mux(_T_33, UInt<5>("h00"), _T_705) @[Lookup.scala 33:37]
    node _T_707 = mux(_T_31, UInt<5>("h00"), _T_706) @[Lookup.scala 33:37]
    node _T_708 = mux(_T_29, UInt<5>("h00"), _T_707) @[Lookup.scala 33:37]
    node _T_709 = mux(_T_27, UInt<5>("h00"), _T_708) @[Lookup.scala 33:37]
    node _T_710 = mux(_T_25, UInt<5>("h00"), _T_709) @[Lookup.scala 33:37]
    node _T_711 = mux(_T_23, UInt<5>("h00"), _T_710) @[Lookup.scala 33:37]
    node lsuOp = mux(_T_21, UInt<5>("h00"), _T_711) @[Lookup.scala 33:37]
    node _T_712 = mux(_T_159, UInt<3>("h00"), UInt<3>("h00")) @[Lookup.scala 33:37]
    node _T_713 = mux(_T_157, UInt<3>("h00"), _T_712) @[Lookup.scala 33:37]
    node _T_714 = mux(_T_155, UInt<3>("h00"), _T_713) @[Lookup.scala 33:37]
    node _T_715 = mux(_T_153, UInt<3>("h00"), _T_714) @[Lookup.scala 33:37]
    node _T_716 = mux(_T_151, UInt<3>("h00"), _T_715) @[Lookup.scala 33:37]
    node _T_717 = mux(_T_149, UInt<3>("h00"), _T_716) @[Lookup.scala 33:37]
    node _T_718 = mux(_T_147, UInt<3>("h00"), _T_717) @[Lookup.scala 33:37]
    node _T_719 = mux(_T_145, UInt<3>("h00"), _T_718) @[Lookup.scala 33:37]
    node _T_720 = mux(_T_143, UInt<3>("h00"), _T_719) @[Lookup.scala 33:37]
    node _T_721 = mux(_T_141, UInt<3>("h00"), _T_720) @[Lookup.scala 33:37]
    node _T_722 = mux(_T_139, UInt<3>("h00"), _T_721) @[Lookup.scala 33:37]
    node _T_723 = mux(_T_137, UInt<3>("h00"), _T_722) @[Lookup.scala 33:37]
    node _T_724 = mux(_T_135, UInt<3>("h00"), _T_723) @[Lookup.scala 33:37]
    node _T_725 = mux(_T_133, UInt<3>("h00"), _T_724) @[Lookup.scala 33:37]
    node _T_726 = mux(_T_131, UInt<3>("h00"), _T_725) @[Lookup.scala 33:37]
    node _T_727 = mux(_T_129, UInt<3>("h00"), _T_726) @[Lookup.scala 33:37]
    node _T_728 = mux(_T_127, UInt<3>("h00"), _T_727) @[Lookup.scala 33:37]
    node _T_729 = mux(_T_125, UInt<3>("h00"), _T_728) @[Lookup.scala 33:37]
    node _T_730 = mux(_T_123, UInt<3>("h00"), _T_729) @[Lookup.scala 33:37]
    node _T_731 = mux(_T_121, UInt<3>("h00"), _T_730) @[Lookup.scala 33:37]
    node _T_732 = mux(_T_119, UInt<3>("h00"), _T_731) @[Lookup.scala 33:37]
    node _T_733 = mux(_T_117, UInt<3>("h00"), _T_732) @[Lookup.scala 33:37]
    node _T_734 = mux(_T_115, UInt<3>("h00"), _T_733) @[Lookup.scala 33:37]
    node _T_735 = mux(_T_113, UInt<3>("h00"), _T_734) @[Lookup.scala 33:37]
    node _T_736 = mux(_T_111, UInt<3>("h00"), _T_735) @[Lookup.scala 33:37]
    node _T_737 = mux(_T_109, UInt<3>("h05"), _T_736) @[Lookup.scala 33:37]
    node _T_738 = mux(_T_107, UInt<3>("h04"), _T_737) @[Lookup.scala 33:37]
    node _T_739 = mux(_T_105, UInt<3>("h03"), _T_738) @[Lookup.scala 33:37]
    node _T_740 = mux(_T_103, UInt<3>("h05"), _T_739) @[Lookup.scala 33:37]
    node _T_741 = mux(_T_101, UInt<3>("h04"), _T_740) @[Lookup.scala 33:37]
    node _T_742 = mux(_T_99, UInt<3>("h03"), _T_741) @[Lookup.scala 33:37]
    node _T_743 = mux(_T_97, UInt<3>("h00"), _T_742) @[Lookup.scala 33:37]
    node _T_744 = mux(_T_95, UInt<3>("h00"), _T_743) @[Lookup.scala 33:37]
    node _T_745 = mux(_T_93, UInt<3>("h00"), _T_744) @[Lookup.scala 33:37]
    node _T_746 = mux(_T_91, UInt<3>("h00"), _T_745) @[Lookup.scala 33:37]
    node _T_747 = mux(_T_89, UInt<3>("h00"), _T_746) @[Lookup.scala 33:37]
    node _T_748 = mux(_T_87, UInt<3>("h00"), _T_747) @[Lookup.scala 33:37]
    node _T_749 = mux(_T_85, UInt<3>("h00"), _T_748) @[Lookup.scala 33:37]
    node _T_750 = mux(_T_83, UInt<3>("h00"), _T_749) @[Lookup.scala 33:37]
    node _T_751 = mux(_T_81, UInt<3>("h00"), _T_750) @[Lookup.scala 33:37]
    node _T_752 = mux(_T_79, UInt<3>("h00"), _T_751) @[Lookup.scala 33:37]
    node _T_753 = mux(_T_77, UInt<3>("h00"), _T_752) @[Lookup.scala 33:37]
    node _T_754 = mux(_T_75, UInt<3>("h00"), _T_753) @[Lookup.scala 33:37]
    node _T_755 = mux(_T_73, UInt<3>("h00"), _T_754) @[Lookup.scala 33:37]
    node _T_756 = mux(_T_71, UInt<3>("h00"), _T_755) @[Lookup.scala 33:37]
    node _T_757 = mux(_T_69, UInt<3>("h00"), _T_756) @[Lookup.scala 33:37]
    node _T_758 = mux(_T_67, UInt<3>("h00"), _T_757) @[Lookup.scala 33:37]
    node _T_759 = mux(_T_65, UInt<3>("h00"), _T_758) @[Lookup.scala 33:37]
    node _T_760 = mux(_T_63, UInt<3>("h00"), _T_759) @[Lookup.scala 33:37]
    node _T_761 = mux(_T_61, UInt<3>("h00"), _T_760) @[Lookup.scala 33:37]
    node _T_762 = mux(_T_59, UInt<3>("h00"), _T_761) @[Lookup.scala 33:37]
    node _T_763 = mux(_T_57, UInt<3>("h00"), _T_762) @[Lookup.scala 33:37]
    node _T_764 = mux(_T_55, UInt<3>("h00"), _T_763) @[Lookup.scala 33:37]
    node _T_765 = mux(_T_53, UInt<3>("h00"), _T_764) @[Lookup.scala 33:37]
    node _T_766 = mux(_T_51, UInt<3>("h00"), _T_765) @[Lookup.scala 33:37]
    node _T_767 = mux(_T_49, UInt<3>("h00"), _T_766) @[Lookup.scala 33:37]
    node _T_768 = mux(_T_47, UInt<3>("h00"), _T_767) @[Lookup.scala 33:37]
    node _T_769 = mux(_T_45, UInt<3>("h00"), _T_768) @[Lookup.scala 33:37]
    node _T_770 = mux(_T_43, UInt<3>("h00"), _T_769) @[Lookup.scala 33:37]
    node _T_771 = mux(_T_41, UInt<3>("h00"), _T_770) @[Lookup.scala 33:37]
    node _T_772 = mux(_T_39, UInt<3>("h00"), _T_771) @[Lookup.scala 33:37]
    node _T_773 = mux(_T_37, UInt<3>("h00"), _T_772) @[Lookup.scala 33:37]
    node _T_774 = mux(_T_35, UInt<3>("h00"), _T_773) @[Lookup.scala 33:37]
    node _T_775 = mux(_T_33, UInt<3>("h00"), _T_774) @[Lookup.scala 33:37]
    node _T_776 = mux(_T_31, UInt<3>("h00"), _T_775) @[Lookup.scala 33:37]
    node _T_777 = mux(_T_29, UInt<3>("h00"), _T_776) @[Lookup.scala 33:37]
    node _T_778 = mux(_T_27, UInt<3>("h00"), _T_777) @[Lookup.scala 33:37]
    node _T_779 = mux(_T_25, UInt<3>("h00"), _T_778) @[Lookup.scala 33:37]
    node _T_780 = mux(_T_23, UInt<3>("h00"), _T_779) @[Lookup.scala 33:37]
    node csrOp = mux(_T_21, UInt<3>("h00"), _T_780) @[Lookup.scala 33:37]
    node _T_781 = mux(_T_159, UInt<4>("h00"), UInt<4>("h00")) @[Lookup.scala 33:37]
    node _T_782 = mux(_T_157, UInt<4>("h00"), _T_781) @[Lookup.scala 33:37]
    node _T_783 = mux(_T_155, UInt<4>("h00"), _T_782) @[Lookup.scala 33:37]
    node _T_784 = mux(_T_153, UInt<4>("h00"), _T_783) @[Lookup.scala 33:37]
    node _T_785 = mux(_T_151, UInt<4>("h00"), _T_784) @[Lookup.scala 33:37]
    node _T_786 = mux(_T_149, UInt<4>("h00"), _T_785) @[Lookup.scala 33:37]
    node _T_787 = mux(_T_147, UInt<4>("h00"), _T_786) @[Lookup.scala 33:37]
    node _T_788 = mux(_T_145, UInt<4>("h00"), _T_787) @[Lookup.scala 33:37]
    node _T_789 = mux(_T_143, UInt<4>("h00"), _T_788) @[Lookup.scala 33:37]
    node _T_790 = mux(_T_141, UInt<4>("h00"), _T_789) @[Lookup.scala 33:37]
    node _T_791 = mux(_T_139, UInt<4>("h00"), _T_790) @[Lookup.scala 33:37]
    node _T_792 = mux(_T_137, UInt<4>("h00"), _T_791) @[Lookup.scala 33:37]
    node _T_793 = mux(_T_135, UInt<4>("h00"), _T_792) @[Lookup.scala 33:37]
    node _T_794 = mux(_T_133, UInt<4>("h00"), _T_793) @[Lookup.scala 33:37]
    node _T_795 = mux(_T_131, UInt<4>("h00"), _T_794) @[Lookup.scala 33:37]
    node _T_796 = mux(_T_129, UInt<4>("h00"), _T_795) @[Lookup.scala 33:37]
    node _T_797 = mux(_T_127, UInt<4>("h00"), _T_796) @[Lookup.scala 33:37]
    node _T_798 = mux(_T_125, UInt<4>("h08"), _T_797) @[Lookup.scala 33:37]
    node _T_799 = mux(_T_123, UInt<4>("h07"), _T_798) @[Lookup.scala 33:37]
    node _T_800 = mux(_T_121, UInt<4>("h06"), _T_799) @[Lookup.scala 33:37]
    node _T_801 = mux(_T_119, UInt<4>("h05"), _T_800) @[Lookup.scala 33:37]
    node _T_802 = mux(_T_117, UInt<4>("h04"), _T_801) @[Lookup.scala 33:37]
    node _T_803 = mux(_T_115, UInt<4>("h03"), _T_802) @[Lookup.scala 33:37]
    node _T_804 = mux(_T_113, UInt<4>("h02"), _T_803) @[Lookup.scala 33:37]
    node _T_805 = mux(_T_111, UInt<4>("h01"), _T_804) @[Lookup.scala 33:37]
    node _T_806 = mux(_T_109, UInt<4>("h00"), _T_805) @[Lookup.scala 33:37]
    node _T_807 = mux(_T_107, UInt<4>("h00"), _T_806) @[Lookup.scala 33:37]
    node _T_808 = mux(_T_105, UInt<4>("h00"), _T_807) @[Lookup.scala 33:37]
    node _T_809 = mux(_T_103, UInt<4>("h00"), _T_808) @[Lookup.scala 33:37]
    node _T_810 = mux(_T_101, UInt<4>("h00"), _T_809) @[Lookup.scala 33:37]
    node _T_811 = mux(_T_99, UInt<4>("h00"), _T_810) @[Lookup.scala 33:37]
    node _T_812 = mux(_T_97, UInt<4>("h00"), _T_811) @[Lookup.scala 33:37]
    node _T_813 = mux(_T_95, UInt<4>("h00"), _T_812) @[Lookup.scala 33:37]
    node _T_814 = mux(_T_93, UInt<4>("h00"), _T_813) @[Lookup.scala 33:37]
    node _T_815 = mux(_T_91, UInt<4>("h00"), _T_814) @[Lookup.scala 33:37]
    node _T_816 = mux(_T_89, UInt<4>("h00"), _T_815) @[Lookup.scala 33:37]
    node _T_817 = mux(_T_87, UInt<4>("h00"), _T_816) @[Lookup.scala 33:37]
    node _T_818 = mux(_T_85, UInt<4>("h00"), _T_817) @[Lookup.scala 33:37]
    node _T_819 = mux(_T_83, UInt<4>("h00"), _T_818) @[Lookup.scala 33:37]
    node _T_820 = mux(_T_81, UInt<4>("h00"), _T_819) @[Lookup.scala 33:37]
    node _T_821 = mux(_T_79, UInt<4>("h00"), _T_820) @[Lookup.scala 33:37]
    node _T_822 = mux(_T_77, UInt<4>("h00"), _T_821) @[Lookup.scala 33:37]
    node _T_823 = mux(_T_75, UInt<4>("h00"), _T_822) @[Lookup.scala 33:37]
    node _T_824 = mux(_T_73, UInt<4>("h00"), _T_823) @[Lookup.scala 33:37]
    node _T_825 = mux(_T_71, UInt<4>("h00"), _T_824) @[Lookup.scala 33:37]
    node _T_826 = mux(_T_69, UInt<4>("h00"), _T_825) @[Lookup.scala 33:37]
    node _T_827 = mux(_T_67, UInt<4>("h00"), _T_826) @[Lookup.scala 33:37]
    node _T_828 = mux(_T_65, UInt<4>("h00"), _T_827) @[Lookup.scala 33:37]
    node _T_829 = mux(_T_63, UInt<4>("h00"), _T_828) @[Lookup.scala 33:37]
    node _T_830 = mux(_T_61, UInt<4>("h00"), _T_829) @[Lookup.scala 33:37]
    node _T_831 = mux(_T_59, UInt<4>("h00"), _T_830) @[Lookup.scala 33:37]
    node _T_832 = mux(_T_57, UInt<4>("h00"), _T_831) @[Lookup.scala 33:37]
    node _T_833 = mux(_T_55, UInt<4>("h00"), _T_832) @[Lookup.scala 33:37]
    node _T_834 = mux(_T_53, UInt<4>("h00"), _T_833) @[Lookup.scala 33:37]
    node _T_835 = mux(_T_51, UInt<4>("h00"), _T_834) @[Lookup.scala 33:37]
    node _T_836 = mux(_T_49, UInt<4>("h00"), _T_835) @[Lookup.scala 33:37]
    node _T_837 = mux(_T_47, UInt<4>("h00"), _T_836) @[Lookup.scala 33:37]
    node _T_838 = mux(_T_45, UInt<4>("h00"), _T_837) @[Lookup.scala 33:37]
    node _T_839 = mux(_T_43, UInt<4>("h00"), _T_838) @[Lookup.scala 33:37]
    node _T_840 = mux(_T_41, UInt<4>("h00"), _T_839) @[Lookup.scala 33:37]
    node _T_841 = mux(_T_39, UInt<4>("h00"), _T_840) @[Lookup.scala 33:37]
    node _T_842 = mux(_T_37, UInt<4>("h00"), _T_841) @[Lookup.scala 33:37]
    node _T_843 = mux(_T_35, UInt<4>("h00"), _T_842) @[Lookup.scala 33:37]
    node _T_844 = mux(_T_33, UInt<4>("h00"), _T_843) @[Lookup.scala 33:37]
    node _T_845 = mux(_T_31, UInt<4>("h00"), _T_844) @[Lookup.scala 33:37]
    node _T_846 = mux(_T_29, UInt<4>("h00"), _T_845) @[Lookup.scala 33:37]
    node _T_847 = mux(_T_27, UInt<4>("h00"), _T_846) @[Lookup.scala 33:37]
    node _T_848 = mux(_T_25, UInt<4>("h00"), _T_847) @[Lookup.scala 33:37]
    node _T_849 = mux(_T_23, UInt<4>("h00"), _T_848) @[Lookup.scala 33:37]
    node mduOp = mux(_T_21, UInt<4>("h00"), _T_849) @[Lookup.scala 33:37]
    node _T_850 = mux(_T_159, UInt<4>("h0a"), UInt<4>("h05")) @[Lookup.scala 33:37]
    node _T_851 = mux(_T_157, UInt<4>("h00"), _T_850) @[Lookup.scala 33:37]
    node _T_852 = mux(_T_155, UInt<4>("h04"), _T_851) @[Lookup.scala 33:37]
    node _T_853 = mux(_T_153, UInt<4>("h03"), _T_852) @[Lookup.scala 33:37]
    node _T_854 = mux(_T_151, UInt<4>("h02"), _T_853) @[Lookup.scala 33:37]
    node _T_855 = mux(_T_149, UInt<4>("h01"), _T_854) @[Lookup.scala 33:37]
    node _T_856 = mux(_T_147, UInt<4>("h09"), _T_855) @[Lookup.scala 33:37]
    node _T_857 = mux(_T_145, UInt<4>("h09"), _T_856) @[Lookup.scala 33:37]
    node _T_858 = mux(_T_143, UInt<4>("h09"), _T_857) @[Lookup.scala 33:37]
    node _T_859 = mux(_T_141, UInt<4>("h09"), _T_858) @[Lookup.scala 33:37]
    node _T_860 = mux(_T_139, UInt<4>("h09"), _T_859) @[Lookup.scala 33:37]
    node _T_861 = mux(_T_137, UInt<4>("h09"), _T_860) @[Lookup.scala 33:37]
    node _T_862 = mux(_T_135, UInt<4>("h09"), _T_861) @[Lookup.scala 33:37]
    node _T_863 = mux(_T_133, UInt<4>("h09"), _T_862) @[Lookup.scala 33:37]
    node _T_864 = mux(_T_131, UInt<4>("h09"), _T_863) @[Lookup.scala 33:37]
    node _T_865 = mux(_T_129, UInt<4>("h09"), _T_864) @[Lookup.scala 33:37]
    node _T_866 = mux(_T_127, UInt<4>("h09"), _T_865) @[Lookup.scala 33:37]
    node _T_867 = mux(_T_125, UInt<4>("h00"), _T_866) @[Lookup.scala 33:37]
    node _T_868 = mux(_T_123, UInt<4>("h00"), _T_867) @[Lookup.scala 33:37]
    node _T_869 = mux(_T_121, UInt<4>("h00"), _T_868) @[Lookup.scala 33:37]
    node _T_870 = mux(_T_119, UInt<4>("h00"), _T_869) @[Lookup.scala 33:37]
    node _T_871 = mux(_T_117, UInt<4>("h00"), _T_870) @[Lookup.scala 33:37]
    node _T_872 = mux(_T_115, UInt<4>("h00"), _T_871) @[Lookup.scala 33:37]
    node _T_873 = mux(_T_113, UInt<4>("h00"), _T_872) @[Lookup.scala 33:37]
    node _T_874 = mux(_T_111, UInt<4>("h00"), _T_873) @[Lookup.scala 33:37]
    node _T_875 = mux(_T_109, UInt<4>("h00"), _T_874) @[Lookup.scala 33:37]
    node _T_876 = mux(_T_107, UInt<4>("h00"), _T_875) @[Lookup.scala 33:37]
    node _T_877 = mux(_T_105, UInt<4>("h00"), _T_876) @[Lookup.scala 33:37]
    node _T_878 = mux(_T_103, UInt<4>("h00"), _T_877) @[Lookup.scala 33:37]
    node _T_879 = mux(_T_101, UInt<4>("h00"), _T_878) @[Lookup.scala 33:37]
    node _T_880 = mux(_T_99, UInt<4>("h00"), _T_879) @[Lookup.scala 33:37]
    node _T_881 = mux(_T_97, UInt<4>("h00"), _T_880) @[Lookup.scala 33:37]
    node _T_882 = mux(_T_95, UInt<4>("h00"), _T_881) @[Lookup.scala 33:37]
    node _T_883 = mux(_T_93, UInt<4>("h09"), _T_882) @[Lookup.scala 33:37]
    node _T_884 = mux(_T_91, UInt<4>("h09"), _T_883) @[Lookup.scala 33:37]
    node _T_885 = mux(_T_89, UInt<4>("h09"), _T_884) @[Lookup.scala 33:37]
    node _T_886 = mux(_T_87, UInt<4>("h08"), _T_885) @[Lookup.scala 33:37]
    node _T_887 = mux(_T_85, UInt<4>("h08"), _T_886) @[Lookup.scala 33:37]
    node _T_888 = mux(_T_83, UInt<4>("h08"), _T_887) @[Lookup.scala 33:37]
    node _T_889 = mux(_T_81, UInt<4>("h08"), _T_888) @[Lookup.scala 33:37]
    node _T_890 = mux(_T_79, UInt<4>("h08"), _T_889) @[Lookup.scala 33:37]
    node _T_891 = mux(_T_77, UInt<4>("h00"), _T_890) @[Lookup.scala 33:37]
    node _T_892 = mux(_T_75, UInt<4>("h00"), _T_891) @[Lookup.scala 33:37]
    node _T_893 = mux(_T_73, UInt<4>("h00"), _T_892) @[Lookup.scala 33:37]
    node _T_894 = mux(_T_71, UInt<4>("h00"), _T_893) @[Lookup.scala 33:37]
    node _T_895 = mux(_T_69, UInt<4>("h00"), _T_894) @[Lookup.scala 33:37]
    node _T_896 = mux(_T_67, UInt<4>("h00"), _T_895) @[Lookup.scala 33:37]
    node _T_897 = mux(_T_65, UInt<4>("h00"), _T_896) @[Lookup.scala 33:37]
    node _T_898 = mux(_T_63, UInt<4>("h00"), _T_897) @[Lookup.scala 33:37]
    node _T_899 = mux(_T_61, UInt<4>("h00"), _T_898) @[Lookup.scala 33:37]
    node _T_900 = mux(_T_59, UInt<4>("h00"), _T_899) @[Lookup.scala 33:37]
    node _T_901 = mux(_T_57, UInt<4>("h00"), _T_900) @[Lookup.scala 33:37]
    node _T_902 = mux(_T_55, UInt<4>("h00"), _T_901) @[Lookup.scala 33:37]
    node _T_903 = mux(_T_53, UInt<4>("h00"), _T_902) @[Lookup.scala 33:37]
    node _T_904 = mux(_T_51, UInt<4>("h00"), _T_903) @[Lookup.scala 33:37]
    node _T_905 = mux(_T_49, UInt<4>("h00"), _T_904) @[Lookup.scala 33:37]
    node _T_906 = mux(_T_47, UInt<4>("h00"), _T_905) @[Lookup.scala 33:37]
    node _T_907 = mux(_T_45, UInt<4>("h00"), _T_906) @[Lookup.scala 33:37]
    node _T_908 = mux(_T_43, UInt<4>("h00"), _T_907) @[Lookup.scala 33:37]
    node _T_909 = mux(_T_41, UInt<4>("h00"), _T_908) @[Lookup.scala 33:37]
    node _T_910 = mux(_T_39, UInt<4>("h00"), _T_909) @[Lookup.scala 33:37]
    node _T_911 = mux(_T_37, UInt<4>("h00"), _T_910) @[Lookup.scala 33:37]
    node _T_912 = mux(_T_35, UInt<4>("h00"), _T_911) @[Lookup.scala 33:37]
    node _T_913 = mux(_T_33, UInt<4>("h00"), _T_912) @[Lookup.scala 33:37]
    node _T_914 = mux(_T_31, UInt<4>("h00"), _T_913) @[Lookup.scala 33:37]
    node _T_915 = mux(_T_29, UInt<4>("h00"), _T_914) @[Lookup.scala 33:37]
    node _T_916 = mux(_T_27, UInt<4>("h00"), _T_915) @[Lookup.scala 33:37]
    node _T_917 = mux(_T_25, UInt<4>("h00"), _T_916) @[Lookup.scala 33:37]
    node _T_918 = mux(_T_23, UInt<4>("h00"), _T_917) @[Lookup.scala 33:37]
    node excType = mux(_T_21, UInt<4>("h00"), _T_918) @[Lookup.scala 33:37]
    node isBranch = neq(branchFlag, UInt<3>("h00")) @[Decoder.scala 73:32]
    node isJump = eq(branchFlag, UInt<3>("h01")) @[Decoder.scala 74:32]
    node _T_919 = asSInt(io.fetch.pc) @[Decoder.scala 75:34]
    node _T_920 = asSInt(immJ) @[Decoder.scala 75:48]
    node _T_921 = add(_T_919, _T_920) @[Decoder.scala 75:41]
    node _T_922 = tail(_T_921, 1) @[Decoder.scala 75:41]
    node _T_923 = asSInt(_T_922) @[Decoder.scala 75:41]
    node targetJAL = asUInt(_T_923) @[Decoder.scala 75:56]
    node _T_924 = asSInt(io.read1.data) @[Decoder.scala 76:35]
    node _T_925 = asSInt(immI) @[Decoder.scala 76:49]
    node _T_926 = add(_T_924, _T_925) @[Decoder.scala 76:42]
    node _T_927 = tail(_T_926, 1) @[Decoder.scala 76:42]
    node sumR1immI = asSInt(_T_927) @[Decoder.scala 76:42]
    node _T_928 = bits(sumR1immI, 31, 1) @[Decoder.scala 77:34]
    node targetJALR = cat(_T_928, UInt<1>("h00")) @[Cat.scala 30:58]
    node targetJ = mux(regEn1, targetJALR, targetJAL) @[Decoder.scala 78:24]
    node _T_929 = asSInt(io.fetch.pc) @[Decoder.scala 79:34]
    node _T_930 = asSInt(immB) @[Decoder.scala 79:48]
    node _T_931 = add(_T_929, _T_930) @[Decoder.scala 79:41]
    node _T_932 = tail(_T_931, 1) @[Decoder.scala 79:41]
    node _T_933 = asSInt(_T_932) @[Decoder.scala 79:41]
    node targetB = asUInt(_T_933) @[Decoder.scala 79:56]
    node _T_934 = eq(io.read1.data, io.read2.data) @[Decoder.scala 83:31]
    node _T_935 = neq(io.read1.data, io.read2.data) @[Decoder.scala 84:31]
    node _T_936 = asSInt(io.read1.data) @[Decoder.scala 85:31]
    node _T_937 = asSInt(io.read2.data) @[Decoder.scala 85:54]
    node _T_938 = lt(_T_936, _T_937) @[Decoder.scala 85:38]
    node _T_939 = asSInt(io.read1.data) @[Decoder.scala 86:31]
    node _T_940 = asSInt(io.read2.data) @[Decoder.scala 86:55]
    node _T_941 = geq(_T_939, _T_940) @[Decoder.scala 86:38]
    node _T_942 = lt(io.read1.data, io.read2.data) @[Decoder.scala 87:31]
    node _T_943 = geq(io.read1.data, io.read2.data) @[Decoder.scala 88:31]
    node _T_944 = eq(UInt<3>("h07"), branchFlag) @[Mux.scala 68:19]
    node _T_945 = mux(_T_944, _T_943, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_946 = eq(UInt<3>("h06"), branchFlag) @[Mux.scala 68:19]
    node _T_947 = mux(_T_946, _T_942, _T_945) @[Mux.scala 68:16]
    node _T_948 = eq(UInt<3>("h05"), branchFlag) @[Mux.scala 68:19]
    node _T_949 = mux(_T_948, _T_941, _T_947) @[Mux.scala 68:16]
    node _T_950 = eq(UInt<3>("h04"), branchFlag) @[Mux.scala 68:19]
    node _T_951 = mux(_T_950, _T_938, _T_949) @[Mux.scala 68:16]
    node _T_952 = eq(UInt<3>("h03"), branchFlag) @[Mux.scala 68:19]
    node _T_953 = mux(_T_952, _T_935, _T_951) @[Mux.scala 68:16]
    node _T_954 = eq(UInt<3>("h02"), branchFlag) @[Mux.scala 68:19]
    node _T_955 = mux(_T_954, _T_934, _T_953) @[Mux.scala 68:16]
    node _T_956 = eq(UInt<3>("h01"), branchFlag) @[Mux.scala 68:19]
    node branchTaken = mux(_T_956, UInt<1>("h01"), _T_955) @[Mux.scala 68:16]
    node _T_957 = eq(branchFlag, UInt<3>("h00")) @[Decoder.scala 90:38]
    node _T_958 = mux(isJump, targetJ, targetB) @[Decoder.scala 91:26]
    node branchTarget = mux(_T_957, UInt<1>("h00"), _T_958) @[Decoder.scala 90:26]
    node _T_959 = neq(io.fetch.taken, branchTaken) @[Decoder.scala 92:36]
    node _T_960 = neq(io.fetch.target, branchTarget) @[Decoder.scala 93:53]
    node _T_961 = and(branchTaken, _T_960) @[Decoder.scala 93:34]
    node branchMiss = or(_T_959, _T_961) @[Decoder.scala 92:52]
    node _T_962 = add(io.fetch.pc, UInt<3>("h04")) @[Decoder.scala 94:64]
    node _T_963 = tail(_T_962, 1) @[Decoder.scala 94:64]
    node flushPc = mux(branchTaken, branchTarget, _T_963) @[Decoder.scala 94:24]
    node _T_964 = bits(branchTarget, 1, 0) @[Decoder.scala 96:33]
    node _T_965 = neq(_T_964, UInt<1>("h00")) @[Decoder.scala 96:59]
    node addrFault = and(branchTaken, _T_965) @[Decoder.scala 95:33]
    node _T_966 = eq(rd, UInt<1>("h00")) @[Decoder.scala 100:23]
    node _T_967 = mux(_T_966, UInt<3>("h02"), UInt<3>("h03")) @[Decoder.scala 100:19]
    node _T_968 = eq(rs1, UInt<1>("h00")) @[Decoder.scala 101:24]
    node _T_969 = mux(_T_968, UInt<3>("h01"), UInt<3>("h04")) @[Decoder.scala 101:19]
    node _T_970 = eq(rs1, UInt<1>("h00")) @[Decoder.scala 102:24]
    node _T_971 = mux(_T_970, UInt<3>("h01"), UInt<3>("h05")) @[Decoder.scala 102:19]
    node _T_972 = eq(UInt<3>("h05"), csrOp) @[Mux.scala 68:19]
    node _T_973 = mux(_T_972, _T_971, UInt<3>("h00")) @[Mux.scala 68:16]
    node _T_974 = eq(UInt<3>("h04"), csrOp) @[Mux.scala 68:19]
    node _T_975 = mux(_T_974, _T_969, _T_973) @[Mux.scala 68:16]
    node _T_976 = eq(UInt<3>("h03"), csrOp) @[Mux.scala 68:19]
    node csrActOp = mux(_T_976, _T_967, _T_975) @[Mux.scala 68:16]
    node _T_977 = eq(csrActOp, UInt<3>("h00")) @[Decoder.scala 104:32]
    node _T_978 = mux(regEn1, io.read1.data, rs1) @[Decoder.scala 105:22]
    node csrData = mux(_T_977, UInt<1>("h00"), _T_978) @[Decoder.scala 104:22]
    node _T_979 = mux(addrFault, UInt<4>("h07"), excType) @[Decoder.scala 109:24]
    node exceptType = mux(io.fetch.pageFault, UInt<4>("h06"), _T_979) @[Decoder.scala 108:24]
    node exceptValue = mux(addrFault, branchTarget, UInt<1>("h00")) @[Decoder.scala 110:24]
    node _T_980 = eq(exceptType, UInt<4>("h05")) @[Decoder.scala 114:34]
    node _T_981 = eq(exceptType, UInt<4>("h06")) @[Decoder.scala 114:62]
    node illegalFetch = or(_T_980, _T_981) @[Decoder.scala 114:48]
    node mduOperation = mux(illegalFetch, UInt<4>("h00"), mduOp) @[Decoder.scala 115:26]
    node lsuOperation = mux(illegalFetch, UInt<5>("h00"), lsuOp) @[Decoder.scala 116:26]
    node csrOperation = mux(illegalFetch, UInt<3>("h00"), csrActOp) @[Decoder.scala 117:26]
    node _T_982 = eq(io.stallId, UInt<1>("h00")) @[Decoder.scala 120:18]
    node _T_983 = eq(addrFault, UInt<1>("h00")) @[Decoder.scala 120:33]
    node _T_984 = and(_T_982, _T_983) @[Decoder.scala 120:30]
    node _T_985 = and(_T_984, branchMiss) @[Decoder.scala 120:44]
    io.flushIf <= _T_985 @[Decoder.scala 120:15]
    io.flushPc <= flushPc @[Decoder.scala 121:15]
    io.read1.en <= regEn1 @[Decoder.scala 124:17]
    io.read1.addr <= rs1 @[Decoder.scala 125:17]
    io.read2.en <= regEn2 @[Decoder.scala 126:17]
    io.read2.addr <= rs2 @[Decoder.scala 127:17]
    io.branch.branch <= isBranch @[Decoder.scala 130:21]
    io.branch.jump <= isJump @[Decoder.scala 131:21]
    io.branch.taken <= branchTaken @[Decoder.scala 132:21]
    io.branch.index <= io.fetch.predIndex @[Decoder.scala 133:21]
    io.branch.pc <= io.fetch.pc @[Decoder.scala 134:21]
    io.branch.target <= branchTarget @[Decoder.scala 135:21]
    io.decoder.aluOp <= aluOp @[Decoder.scala 139:25]
    node _T_986 = asSInt(io.read1.data) @[Decoder.scala 57:36]
    node _T_987 = asSInt(io.read2.data) @[Decoder.scala 58:36]
    node _T_988 = asSInt(immI) @[Decoder.scala 59:27]
    node _T_989 = asSInt(immS) @[Decoder.scala 60:27]
    node _T_990 = asSInt(immU) @[Decoder.scala 61:27]
    node _T_991 = cvt(rs2) @[Decoder.scala 62:26]
    node _T_992 = asSInt(io.fetch.pc) @[Decoder.scala 63:34]
    node _T_993 = eq(UInt<4>("h08"), aluSrc1) @[Mux.scala 68:19]
    node _T_994 = mux(_T_993, asSInt(UInt<4>("h04")), asSInt(UInt<1>("h00"))) @[Mux.scala 68:16]
    node _T_995 = eq(UInt<4>("h07"), aluSrc1) @[Mux.scala 68:19]
    node _T_996 = mux(_T_995, _T_992, _T_994) @[Mux.scala 68:16]
    node _T_997 = eq(UInt<4>("h06"), aluSrc1) @[Mux.scala 68:19]
    node _T_998 = mux(_T_997, _T_991, _T_996) @[Mux.scala 68:16]
    node _T_999 = eq(UInt<4>("h05"), aluSrc1) @[Mux.scala 68:19]
    node _T_1000 = mux(_T_999, _T_990, _T_998) @[Mux.scala 68:16]
    node _T_1001 = eq(UInt<4>("h04"), aluSrc1) @[Mux.scala 68:19]
    node _T_1002 = mux(_T_1001, _T_989, _T_1000) @[Mux.scala 68:16]
    node _T_1003 = eq(UInt<4>("h03"), aluSrc1) @[Mux.scala 68:19]
    node _T_1004 = mux(_T_1003, _T_988, _T_1002) @[Mux.scala 68:16]
    node _T_1005 = eq(UInt<4>("h02"), aluSrc1) @[Mux.scala 68:19]
    node _T_1006 = mux(_T_1005, _T_987, _T_1004) @[Mux.scala 68:16]
    node _T_1007 = eq(UInt<4>("h01"), aluSrc1) @[Mux.scala 68:19]
    node _T_1008 = mux(_T_1007, _T_986, _T_1006) @[Mux.scala 68:16]
    node _T_1009 = asUInt(_T_1008) @[Decoder.scala 140:49]
    io.decoder.opr1 <= _T_1009 @[Decoder.scala 140:25]
    node _T_1010 = asSInt(io.read1.data) @[Decoder.scala 57:36]
    node _T_1011 = asSInt(io.read2.data) @[Decoder.scala 58:36]
    node _T_1012 = asSInt(immI) @[Decoder.scala 59:27]
    node _T_1013 = asSInt(immS) @[Decoder.scala 60:27]
    node _T_1014 = asSInt(immU) @[Decoder.scala 61:27]
    node _T_1015 = cvt(rs2) @[Decoder.scala 62:26]
    node _T_1016 = asSInt(io.fetch.pc) @[Decoder.scala 63:34]
    node _T_1017 = eq(UInt<4>("h08"), aluSrc2) @[Mux.scala 68:19]
    node _T_1018 = mux(_T_1017, asSInt(UInt<4>("h04")), asSInt(UInt<1>("h00"))) @[Mux.scala 68:16]
    node _T_1019 = eq(UInt<4>("h07"), aluSrc2) @[Mux.scala 68:19]
    node _T_1020 = mux(_T_1019, _T_1016, _T_1018) @[Mux.scala 68:16]
    node _T_1021 = eq(UInt<4>("h06"), aluSrc2) @[Mux.scala 68:19]
    node _T_1022 = mux(_T_1021, _T_1015, _T_1020) @[Mux.scala 68:16]
    node _T_1023 = eq(UInt<4>("h05"), aluSrc2) @[Mux.scala 68:19]
    node _T_1024 = mux(_T_1023, _T_1014, _T_1022) @[Mux.scala 68:16]
    node _T_1025 = eq(UInt<4>("h04"), aluSrc2) @[Mux.scala 68:19]
    node _T_1026 = mux(_T_1025, _T_1013, _T_1024) @[Mux.scala 68:16]
    node _T_1027 = eq(UInt<4>("h03"), aluSrc2) @[Mux.scala 68:19]
    node _T_1028 = mux(_T_1027, _T_1012, _T_1026) @[Mux.scala 68:16]
    node _T_1029 = eq(UInt<4>("h02"), aluSrc2) @[Mux.scala 68:19]
    node _T_1030 = mux(_T_1029, _T_1011, _T_1028) @[Mux.scala 68:16]
    node _T_1031 = eq(UInt<4>("h01"), aluSrc2) @[Mux.scala 68:19]
    node _T_1032 = mux(_T_1031, _T_1010, _T_1030) @[Mux.scala 68:16]
    node _T_1033 = asUInt(_T_1032) @[Decoder.scala 141:49]
    io.decoder.opr2 <= _T_1033 @[Decoder.scala 141:25]
    io.decoder.mduOp <= mduOperation @[Decoder.scala 142:25]
    io.decoder.lsuOp <= lsuOperation @[Decoder.scala 144:25]
    io.decoder.lsuData <= io.read2.data @[Decoder.scala 145:25]
    io.decoder.regWen <= regWen @[Decoder.scala 147:25]
    io.decoder.regWaddr <= rd @[Decoder.scala 148:25]
    io.decoder.csrOp <= csrOperation @[Decoder.scala 150:25]
    io.decoder.csrAddr <= immI @[Decoder.scala 151:25]
    io.decoder.csrData <= csrData @[Decoder.scala 152:25]
    io.decoder.excType <= exceptType @[Decoder.scala 154:25]
    io.decoder.excValue <= exceptValue @[Decoder.scala 155:25]
    io.decoder.valid <= io.fetch.valid @[Decoder.scala 157:25]
    io.decoder.inst <= inst @[Decoder.scala 158:25]
    io.decoder.currentPc <= io.fetch.pc @[Decoder.scala 159:25]
    
  module MidStage_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip stallPrev : UInt<1>, flip stallNext : UInt<1>, flip prev : {aluOp : UInt<4>, opr1 : UInt<32>, opr2 : UInt<32>, mduOp : UInt<4>, lsuOp : UInt<5>, lsuData : UInt<32>, regWen : UInt<1>, regWaddr : UInt<5>, csrOp : UInt<3>, csrAddr : UInt<12>, csrData : UInt<32>, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}, next : {aluOp : UInt<4>, opr1 : UInt<32>, opr2 : UInt<32>, mduOp : UInt<4>, lsuOp : UInt<5>, lsuData : UInt<32>, regWen : UInt<1>, regWaddr : UInt<5>, csrOp : UInt<3>, csrAddr : UInt<12>, csrData : UInt<32>, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}}
    
    wire _T : {aluOp : UInt<4>, opr1 : UInt<32>, opr2 : UInt<32>, mduOp : UInt<4>, lsuOp : UInt<5>, lsuData : UInt<32>, regWen : UInt<1>, regWaddr : UInt<5>, csrOp : UInt<3>, csrAddr : UInt<12>, csrData : UInt<32>, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>} @[StageIO.scala 18:31]
    _T.currentPc <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.inst <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.valid <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.excValue <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.excType <= UInt<4>("h00") @[StageIO.scala 18:31]
    _T.csrData <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.csrAddr <= UInt<12>("h00") @[StageIO.scala 18:31]
    _T.csrOp <= UInt<3>("h00") @[StageIO.scala 18:31]
    _T.regWaddr <= UInt<5>("h00") @[StageIO.scala 18:31]
    _T.regWen <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.lsuData <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.lsuOp <= UInt<5>("h00") @[StageIO.scala 18:31]
    _T.mduOp <= UInt<4>("h00") @[StageIO.scala 18:31]
    _T.opr2 <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.opr1 <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.aluOp <= UInt<4>("h00") @[StageIO.scala 18:31]
    reg ff : {aluOp : UInt<4>, opr1 : UInt<32>, opr2 : UInt<32>, mduOp : UInt<4>, lsuOp : UInt<5>, lsuData : UInt<32>, regWen : UInt<1>, regWaddr : UInt<5>, csrOp : UInt<3>, csrAddr : UInt<12>, csrData : UInt<32>, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}, clock with : (reset => (reset, _T)) @[MidStage.scala 20:19]
    node _T_1 = eq(io.stallNext, UInt<1>("h00")) @[MidStage.scala 21:38]
    node _T_2 = and(io.stallPrev, _T_1) @[MidStage.scala 21:35]
    node _T_3 = or(io.flush, _T_2) @[MidStage.scala 21:18]
    when _T_3 : @[MidStage.scala 21:54]
      wire _T_4 : {aluOp : UInt<4>, opr1 : UInt<32>, opr2 : UInt<32>, mduOp : UInt<4>, lsuOp : UInt<5>, lsuData : UInt<32>, regWen : UInt<1>, regWaddr : UInt<5>, csrOp : UInt<3>, csrAddr : UInt<12>, csrData : UInt<32>, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>} @[StageIO.scala 18:31]
      _T_4.currentPc <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.inst <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.valid <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.excValue <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.excType <= UInt<4>("h00") @[StageIO.scala 18:31]
      _T_4.csrData <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.csrAddr <= UInt<12>("h00") @[StageIO.scala 18:31]
      _T_4.csrOp <= UInt<3>("h00") @[StageIO.scala 18:31]
      _T_4.regWaddr <= UInt<5>("h00") @[StageIO.scala 18:31]
      _T_4.regWen <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.lsuData <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.lsuOp <= UInt<5>("h00") @[StageIO.scala 18:31]
      _T_4.mduOp <= UInt<4>("h00") @[StageIO.scala 18:31]
      _T_4.opr2 <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.opr1 <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.aluOp <= UInt<4>("h00") @[StageIO.scala 18:31]
      ff.currentPc <= _T_4.currentPc @[MidStage.scala 22:8]
      ff.inst <= _T_4.inst @[MidStage.scala 22:8]
      ff.valid <= _T_4.valid @[MidStage.scala 22:8]
      ff.excValue <= _T_4.excValue @[MidStage.scala 22:8]
      ff.excType <= _T_4.excType @[MidStage.scala 22:8]
      ff.csrData <= _T_4.csrData @[MidStage.scala 22:8]
      ff.csrAddr <= _T_4.csrAddr @[MidStage.scala 22:8]
      ff.csrOp <= _T_4.csrOp @[MidStage.scala 22:8]
      ff.regWaddr <= _T_4.regWaddr @[MidStage.scala 22:8]
      ff.regWen <= _T_4.regWen @[MidStage.scala 22:8]
      ff.lsuData <= _T_4.lsuData @[MidStage.scala 22:8]
      ff.lsuOp <= _T_4.lsuOp @[MidStage.scala 22:8]
      ff.mduOp <= _T_4.mduOp @[MidStage.scala 22:8]
      ff.opr2 <= _T_4.opr2 @[MidStage.scala 22:8]
      ff.opr1 <= _T_4.opr1 @[MidStage.scala 22:8]
      ff.aluOp <= _T_4.aluOp @[MidStage.scala 22:8]
      skip @[MidStage.scala 21:54]
    else : @[MidStage.scala 23:30]
      node _T_5 = eq(io.stallPrev, UInt<1>("h00")) @[MidStage.scala 23:15]
      when _T_5 : @[MidStage.scala 23:30]
        ff.currentPc <= io.prev.currentPc @[MidStage.scala 24:8]
        ff.inst <= io.prev.inst @[MidStage.scala 24:8]
        ff.valid <= io.prev.valid @[MidStage.scala 24:8]
        ff.excValue <= io.prev.excValue @[MidStage.scala 24:8]
        ff.excType <= io.prev.excType @[MidStage.scala 24:8]
        ff.csrData <= io.prev.csrData @[MidStage.scala 24:8]
        ff.csrAddr <= io.prev.csrAddr @[MidStage.scala 24:8]
        ff.csrOp <= io.prev.csrOp @[MidStage.scala 24:8]
        ff.regWaddr <= io.prev.regWaddr @[MidStage.scala 24:8]
        ff.regWen <= io.prev.regWen @[MidStage.scala 24:8]
        ff.lsuData <= io.prev.lsuData @[MidStage.scala 24:8]
        ff.lsuOp <= io.prev.lsuOp @[MidStage.scala 24:8]
        ff.mduOp <= io.prev.mduOp @[MidStage.scala 24:8]
        ff.opr2 <= io.prev.opr2 @[MidStage.scala 24:8]
        ff.opr1 <= io.prev.opr1 @[MidStage.scala 24:8]
        ff.aluOp <= io.prev.aluOp @[MidStage.scala 24:8]
        skip @[MidStage.scala 23:30]
    io.next.currentPc <= ff.currentPc @[MidStage.scala 27:11]
    io.next.inst <= ff.inst @[MidStage.scala 27:11]
    io.next.valid <= ff.valid @[MidStage.scala 27:11]
    io.next.excValue <= ff.excValue @[MidStage.scala 27:11]
    io.next.excType <= ff.excType @[MidStage.scala 27:11]
    io.next.csrData <= ff.csrData @[MidStage.scala 27:11]
    io.next.csrAddr <= ff.csrAddr @[MidStage.scala 27:11]
    io.next.csrOp <= ff.csrOp @[MidStage.scala 27:11]
    io.next.regWaddr <= ff.regWaddr @[MidStage.scala 27:11]
    io.next.regWen <= ff.regWen @[MidStage.scala 27:11]
    io.next.lsuData <= ff.lsuData @[MidStage.scala 27:11]
    io.next.lsuOp <= ff.lsuOp @[MidStage.scala 27:11]
    io.next.mduOp <= ff.mduOp @[MidStage.scala 27:11]
    io.next.opr2 <= ff.opr2 @[MidStage.scala 27:11]
    io.next.opr1 <= ff.opr1 @[MidStage.scala 27:11]
    io.next.aluOp <= ff.aluOp @[MidStage.scala 27:11]
    
  module Multiplier : 
    input clock : Clock
    input reset : Reset
    output io : {flip en : UInt<1>, flip flush : UInt<1>, done : UInt<1>, flip opr1 : UInt<32>, flip opr2 : UInt<32>, result : UInt<64>}
    
    node result = mul(io.opr1, io.opr2) @[Multiplier.scala 23:25]
    node _T = mux(io.flush, UInt<1>("h00"), io.en) @[Multiplier.scala 30:30]
    reg en : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Multiplier.scala 30:26]
    en <= _T @[Multiplier.scala 30:26]
    reg data : UInt<64>, clock @[Reg.scala 15:16]
    when io.en : @[Reg.scala 16:19]
      data <= result @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.done <= en @[Multiplier.scala 38:18]
    io.result <= data @[Multiplier.scala 39:18]
    
  module Divider : 
    input clock : Clock
    input reset : Reset
    output io : {flip en : UInt<1>, flip flush : UInt<1>, divZero : UInt<1>, done : UInt<1>, flip divident : UInt<32>, flip divisor : UInt<32>, quotient : UInt<32>, remainder : UInt<32>}
    
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Divider.scala 27:22]
    reg result : UInt<65>, clock with : (reset => (reset, UInt<65>("h00"))) @[Divider.scala 31:30]
    reg counter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Divider.scala 33:30]
    reg isDiv0 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Divider.scala 35:30]
    reg lastDivident : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Divider.scala 37:30]
    reg lastDivisor : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Divider.scala 38:30]
    reg divisor : UInt<65>, clock with : (reset => (reset, UInt<65>("h00"))) @[Divider.scala 41:28]
    node minDivisor = shr(divisor, 1) @[Divider.scala 43:29]
    node _T = add(divisor, minDivisor) @[Divider.scala 45:29]
    node maxDivisor = tail(_T, 1) @[Divider.scala 45:29]
    node _T_1 = neq(lastDivident, io.divident) @[Divider.scala 47:34]
    node _T_2 = neq(lastDivisor, io.divisor) @[Divider.scala 48:33]
    node startFlag = or(_T_1, _T_2) @[Divider.scala 47:50]
    when io.flush : @[Divider.scala 51:19]
      state <= UInt<2>("h00") @[Divider.scala 52:13]
      result <= UInt<1>("h00") @[Divider.scala 53:13]
      isDiv0 <= UInt<1>("h00") @[Divider.scala 54:13]
      skip @[Divider.scala 51:19]
    else : @[Divider.scala 55:16]
      node _T_3 = eq(UInt<2>("h00"), state) @[Conditional.scala 37:30]
      when _T_3 : @[Conditional.scala 40:58]
        when io.en : @[Divider.scala 58:22]
          when startFlag : @[Divider.scala 59:28]
            lastDivident <= io.divident @[Divider.scala 61:27]
            lastDivisor <= io.divisor @[Divider.scala 62:27]
            node _T_4 = eq(io.divisor, UInt<1>("h00")) @[Divider.scala 64:30]
            when _T_4 : @[Divider.scala 64:39]
              state <= UInt<2>("h02") @[Divider.scala 65:23]
              isDiv0 <= UInt<1>("h01") @[Divider.scala 66:23]
              skip @[Divider.scala 64:39]
            else : @[Divider.scala 67:26]
              state <= UInt<2>("h01") @[Divider.scala 68:23]
              node _T_5 = cat(UInt<32>("h00"), io.divident) @[Cat.scala 30:58]
              node _T_6 = cat(_T_5, UInt<1>("h00")) @[Cat.scala 30:58]
              result <= _T_6 @[Divider.scala 69:23]
              node _T_7 = cat(UInt<1>("h00"), io.divisor) @[Cat.scala 30:58]
              node _T_8 = cat(_T_7, UInt<32>("h00")) @[Cat.scala 30:58]
              divisor <= _T_8 @[Divider.scala 70:23]
              counter <= UInt<1>("h00") @[Divider.scala 71:23]
              isDiv0 <= UInt<1>("h00") @[Divider.scala 72:23]
              skip @[Divider.scala 67:26]
            skip @[Divider.scala 59:28]
          else : @[Divider.scala 74:24]
            state <= UInt<2>("h02") @[Divider.scala 76:19]
            skip @[Divider.scala 74:24]
          skip @[Divider.scala 58:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_9 = eq(UInt<2>("h01"), state) @[Conditional.scala 37:30]
        when _T_9 : @[Conditional.scala 39:67]
          node _T_10 = geq(result, maxDivisor) @[Divider.scala 82:22]
          when _T_10 : @[Divider.scala 82:37]
            node _T_11 = sub(result, maxDivisor) @[Divider.scala 83:30]
            node _T_12 = tail(_T_11, 1) @[Divider.scala 83:30]
            node _T_13 = shl(_T_12, 2) @[Divider.scala 83:44]
            node _T_14 = or(_T_13, UInt<2>("h03")) @[Divider.scala 83:50]
            result <= _T_14 @[Divider.scala 83:18]
            skip @[Divider.scala 82:37]
          else : @[Divider.scala 84:64]
            node _T_15 = lt(result, maxDivisor) @[Divider.scala 84:29]
            node _T_16 = geq(result, divisor) @[Divider.scala 84:52]
            node _T_17 = and(_T_15, _T_16) @[Divider.scala 84:42]
            when _T_17 : @[Divider.scala 84:64]
              node _T_18 = sub(result, divisor) @[Divider.scala 85:30]
              node _T_19 = tail(_T_18, 1) @[Divider.scala 85:30]
              node _T_20 = shl(_T_19, 2) @[Divider.scala 85:41]
              node _T_21 = or(_T_20, UInt<2>("h02")) @[Divider.scala 85:47]
              result <= _T_21 @[Divider.scala 85:18]
              skip @[Divider.scala 84:64]
            else : @[Divider.scala 86:64]
              node _T_22 = lt(result, divisor) @[Divider.scala 86:29]
              node _T_23 = geq(result, minDivisor) @[Divider.scala 86:49]
              node _T_24 = and(_T_22, _T_23) @[Divider.scala 86:39]
              when _T_24 : @[Divider.scala 86:64]
                node _T_25 = sub(result, minDivisor) @[Divider.scala 87:30]
                node _T_26 = tail(_T_25, 1) @[Divider.scala 87:30]
                node _T_27 = shl(_T_26, 2) @[Divider.scala 87:44]
                node _T_28 = or(_T_27, UInt<1>("h01")) @[Divider.scala 87:50]
                result <= _T_28 @[Divider.scala 87:18]
                skip @[Divider.scala 86:64]
              else : @[Divider.scala 88:22]
                node _T_29 = shl(result, 2) @[Divider.scala 89:28]
                result <= _T_29 @[Divider.scala 89:18]
                skip @[Divider.scala 88:22]
          node _T_30 = add(counter, UInt<1>("h01")) @[Divider.scala 92:28]
          node _T_31 = tail(_T_30, 1) @[Divider.scala 92:28]
          counter <= _T_31 @[Divider.scala 92:17]
          node _T_32 = eq(counter, UInt<4>("h0f")) @[Divider.scala 93:23]
          when _T_32 : @[Divider.scala 93:47]
            state <= UInt<2>("h02") @[Divider.scala 93:55]
            skip @[Divider.scala 93:47]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_33 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
          when _T_33 : @[Conditional.scala 39:67]
            state <= UInt<2>("h00") @[Divider.scala 96:15]
            skip @[Conditional.scala 39:67]
      skip @[Divider.scala 55:16]
    io.divZero <= isDiv0 @[Divider.scala 102:17]
    node _T_34 = eq(state, UInt<2>("h02")) @[Divider.scala 103:26]
    io.done <= _T_34 @[Divider.scala 103:17]
    node _T_35 = bits(result, 31, 0) @[Divider.scala 104:26]
    io.quotient <= _T_35 @[Divider.scala 104:17]
    node _T_36 = bits(result, 64, 33) @[Divider.scala 105:26]
    io.remainder <= _T_36 @[Divider.scala 105:17]
    
  module MDU : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip op : UInt<4>, valid : UInt<1>, flip opr1 : UInt<32>, flip opr2 : UInt<32>, result : UInt<32>}
    
    node _T = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<1>("h01"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<2>("h02"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<2>("h03"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<3>("h04"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<3>("h05"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<3>("h06"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<3>("h07"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.op, UInt<4>("h0f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<4>("h08"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = mux(_T_15, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_17 = mux(_T_13, UInt<1>("h00"), _T_16) @[Lookup.scala 33:37]
    node _T_18 = mux(_T_11, UInt<1>("h00"), _T_17) @[Lookup.scala 33:37]
    node _T_19 = mux(_T_9, UInt<1>("h00"), _T_18) @[Lookup.scala 33:37]
    node _T_20 = mux(_T_7, UInt<1>("h01"), _T_19) @[Lookup.scala 33:37]
    node _T_21 = mux(_T_5, UInt<1>("h01"), _T_20) @[Lookup.scala 33:37]
    node _T_22 = mux(_T_3, UInt<1>("h01"), _T_21) @[Lookup.scala 33:37]
    node mulEn = mux(_T_1, UInt<1>("h01"), _T_22) @[Lookup.scala 33:37]
    node _T_23 = mux(_T_15, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_24 = mux(_T_13, UInt<1>("h01"), _T_23) @[Lookup.scala 33:37]
    node _T_25 = mux(_T_11, UInt<1>("h01"), _T_24) @[Lookup.scala 33:37]
    node _T_26 = mux(_T_9, UInt<1>("h01"), _T_25) @[Lookup.scala 33:37]
    node _T_27 = mux(_T_7, UInt<1>("h00"), _T_26) @[Lookup.scala 33:37]
    node _T_28 = mux(_T_5, UInt<1>("h00"), _T_27) @[Lookup.scala 33:37]
    node _T_29 = mux(_T_3, UInt<1>("h00"), _T_28) @[Lookup.scala 33:37]
    node divEn = mux(_T_1, UInt<1>("h00"), _T_29) @[Lookup.scala 33:37]
    node _T_30 = mux(_T_15, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_31 = mux(_T_13, UInt<1>("h01"), _T_30) @[Lookup.scala 33:37]
    node _T_32 = mux(_T_11, UInt<1>("h00"), _T_31) @[Lookup.scala 33:37]
    node _T_33 = mux(_T_9, UInt<1>("h00"), _T_32) @[Lookup.scala 33:37]
    node _T_34 = mux(_T_7, UInt<1>("h01"), _T_33) @[Lookup.scala 33:37]
    node _T_35 = mux(_T_5, UInt<1>("h01"), _T_34) @[Lookup.scala 33:37]
    node _T_36 = mux(_T_3, UInt<1>("h01"), _T_35) @[Lookup.scala 33:37]
    node hiRem = mux(_T_1, UInt<1>("h00"), _T_36) @[Lookup.scala 33:37]
    node _T_37 = mux(_T_15, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_13, UInt<1>("h01"), _T_37) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_11, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_9, UInt<1>("h01"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_7, UInt<1>("h00"), _T_40) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_5, UInt<1>("h01"), _T_41) @[Lookup.scala 33:37]
    node _T_43 = mux(_T_3, UInt<1>("h01"), _T_42) @[Lookup.scala 33:37]
    node lhsSigned = mux(_T_1, UInt<1>("h00"), _T_43) @[Lookup.scala 33:37]
    node _T_44 = mux(_T_15, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_13, UInt<1>("h01"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_11, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_9, UInt<1>("h01"), _T_46) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_7, UInt<1>("h00"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_5, UInt<1>("h00"), _T_48) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_3, UInt<1>("h01"), _T_49) @[Lookup.scala 33:37]
    node rhsSigned = mux(_T_1, UInt<1>("h00"), _T_50) @[Lookup.scala 33:37]
    node _T_51 = bits(io.opr1, 31, 31) @[MDU.scala 26:39]
    node isOpr1Neg = and(lhsSigned, _T_51) @[MDU.scala 26:29]
    node _T_52 = bits(io.opr2, 31, 31) @[MDU.scala 27:39]
    node isOpr2Neg = and(rhsSigned, _T_52) @[MDU.scala 27:29]
    node isAnsNeg = xor(isOpr1Neg, isOpr2Neg) @[MDU.scala 28:29]
    node _T_53 = sub(UInt<1>("h00"), io.opr1) @[MDU.scala 29:34]
    node _T_54 = tail(_T_53, 1) @[MDU.scala 29:34]
    node opr1 = mux(isOpr1Neg, _T_54, io.opr1) @[MDU.scala 29:22]
    node _T_55 = sub(UInt<1>("h00"), io.opr2) @[MDU.scala 30:34]
    node _T_56 = tail(_T_55, 1) @[MDU.scala 30:34]
    node opr2 = mux(isOpr2Neg, _T_56, io.opr2) @[MDU.scala 30:22]
    inst mul of Multiplier @[MDU.scala 33:25]
    mul.clock <= clock
    mul.reset <= reset
    node _T_57 = sub(UInt<1>("h00"), mul.io.result) @[MDU.scala 34:33]
    node _T_58 = tail(_T_57, 1) @[MDU.scala 34:33]
    node mulOut = mux(isAnsNeg, _T_58, mul.io.result) @[MDU.scala 34:22]
    node _T_59 = bits(mulOut, 63, 32) @[MDU.scala 35:36]
    node _T_60 = bits(mulOut, 31, 0) @[MDU.scala 36:36]
    node mulAns = mux(hiRem, _T_59, _T_60) @[MDU.scala 35:22]
    mul.io.en <= mulEn @[MDU.scala 37:16]
    node _T_61 = and(mulEn, mul.io.done) @[MDU.scala 38:38]
    node _T_62 = or(io.flush, _T_61) @[MDU.scala 38:28]
    mul.io.flush <= _T_62 @[MDU.scala 38:16]
    mul.io.opr1 <= opr1 @[MDU.scala 39:16]
    mul.io.opr2 <= opr2 @[MDU.scala 40:16]
    inst div of Divider @[MDU.scala 43:29]
    div.clock <= clock
    div.reset <= reset
    node allOnes = mux(UInt<1>("h01"), UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node oprMin = shl(UInt<1>("h01"), 32) @[MDU.scala 45:27]
    node _T_63 = eq(opr1, oprMin) @[MDU.scala 46:41]
    node _T_64 = and(lhsSigned, _T_63) @[MDU.scala 46:33]
    node _T_65 = eq(opr2, allOnes) @[MDU.scala 46:60]
    node isDivOverflow = and(_T_64, _T_65) @[MDU.scala 46:52]
    node _T_66 = bits(io.opr1, 31, 31) @[MDU.scala 47:44]
    node _T_67 = bits(div.io.remainder, 31, 31) @[MDU.scala 48:53]
    node _T_68 = xor(_T_66, _T_67) @[MDU.scala 47:61]
    node isRemNeg = and(lhsSigned, _T_68) @[MDU.scala 47:33]
    node _T_69 = sub(UInt<1>("h00"), div.io.quotient) @[MDU.scala 49:37]
    node _T_70 = tail(_T_69, 1) @[MDU.scala 49:37]
    node divQuo = mux(isAnsNeg, _T_70, div.io.quotient) @[MDU.scala 49:26]
    node _T_71 = mux(isDivOverflow, oprMin, divQuo) @[MDU.scala 51:26]
    node divAnsQuo = mux(div.io.divZero, allOnes, _T_71) @[MDU.scala 50:26]
    node _T_72 = sub(UInt<1>("h00"), div.io.remainder) @[MDU.scala 52:37]
    node _T_73 = tail(_T_72, 1) @[MDU.scala 52:37]
    node divRem = mux(isRemNeg, _T_73, div.io.remainder) @[MDU.scala 52:26]
    node _T_74 = mux(isDivOverflow, UInt<1>("h00"), divRem) @[MDU.scala 54:26]
    node divAnsRem = mux(div.io.divZero, io.opr1, _T_74) @[MDU.scala 53:26]
    node divAns = mux(hiRem, divAnsRem, divAnsQuo) @[MDU.scala 55:26]
    div.io.en <= divEn @[MDU.scala 56:20]
    div.io.flush <= io.flush @[MDU.scala 57:20]
    div.io.divident <= opr1 @[MDU.scala 58:20]
    div.io.divisor <= opr2 @[MDU.scala 59:20]
    node _T_75 = mux(divEn, div.io.done, UInt<1>("h01")) @[MDU.scala 62:43]
    node _T_76 = mux(mulEn, mul.io.done, _T_75) @[MDU.scala 62:19]
    io.valid <= _T_76 @[MDU.scala 62:13]
    node _T_77 = mux(divEn, divAns, UInt<1>("h00")) @[MDU.scala 63:38]
    node _T_78 = mux(mulEn, mulAns, _T_77) @[MDU.scala 63:19]
    io.result <= _T_78 @[MDU.scala 63:13]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip decoder : {aluOp : UInt<4>, opr1 : UInt<32>, opr2 : UInt<32>, mduOp : UInt<4>, lsuOp : UInt<5>, lsuData : UInt<32>, regWen : UInt<1>, regWaddr : UInt<5>, csrOp : UInt<3>, csrAddr : UInt<12>, csrData : UInt<32>, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}, flip flush : UInt<1>, stallReq : UInt<1>, csrRead : {op : UInt<3>, flip valid : UInt<1>, addr : UInt<12>, flip data : UInt<32>}, alu : {lsuOp : UInt<5>, lsuData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}}
    
    node shamt = bits(io.decoder.opr2, 4, 0) @[ALU.scala 31:19]
    node _T = add(io.decoder.opr1, io.decoder.opr2) @[ALU.scala 35:24]
    node _T_1 = tail(_T, 1) @[ALU.scala 35:24]
    node _T_2 = sub(io.decoder.opr1, io.decoder.opr2) @[ALU.scala 36:24]
    node _T_3 = tail(_T_2, 1) @[ALU.scala 36:24]
    node _T_4 = xor(io.decoder.opr1, io.decoder.opr2) @[ALU.scala 37:24]
    node _T_5 = or(io.decoder.opr1, io.decoder.opr2) @[ALU.scala 38:24]
    node _T_6 = and(io.decoder.opr1, io.decoder.opr2) @[ALU.scala 39:24]
    node _T_7 = asSInt(io.decoder.opr1) @[ALU.scala 40:24]
    node _T_8 = asSInt(io.decoder.opr2) @[ALU.scala 40:38]
    node _T_9 = lt(_T_7, _T_8) @[ALU.scala 40:31]
    node _T_10 = lt(io.decoder.opr1, io.decoder.opr2) @[ALU.scala 41:24]
    node _T_11 = dshl(io.decoder.opr1, shamt) @[ALU.scala 42:24]
    node _T_12 = dshr(io.decoder.opr1, shamt) @[ALU.scala 43:24]
    node _T_13 = asSInt(io.decoder.opr1) @[ALU.scala 44:24]
    node _T_14 = dshr(_T_13, shamt) @[ALU.scala 44:31]
    node _T_15 = asUInt(_T_14) @[ALU.scala 44:41]
    node _T_16 = eq(UInt<4>("h09"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_17 = mux(_T_16, _T_15, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_18 = eq(UInt<4>("h08"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_19 = mux(_T_18, _T_12, _T_17) @[Mux.scala 68:16]
    node _T_20 = eq(UInt<4>("h07"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_21 = mux(_T_20, _T_11, _T_19) @[Mux.scala 68:16]
    node _T_22 = eq(UInt<4>("h06"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_23 = mux(_T_22, _T_10, _T_21) @[Mux.scala 68:16]
    node _T_24 = eq(UInt<4>("h05"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_25 = mux(_T_24, _T_9, _T_23) @[Mux.scala 68:16]
    node _T_26 = eq(UInt<4>("h04"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_27 = mux(_T_26, _T_6, _T_25) @[Mux.scala 68:16]
    node _T_28 = eq(UInt<4>("h03"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_29 = mux(_T_28, _T_5, _T_27) @[Mux.scala 68:16]
    node _T_30 = eq(UInt<4>("h02"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_31 = mux(_T_30, _T_4, _T_29) @[Mux.scala 68:16]
    node _T_32 = eq(UInt<4>("h01"), io.decoder.aluOp) @[Mux.scala 68:19]
    node _T_33 = mux(_T_32, _T_3, _T_31) @[Mux.scala 68:16]
    node _T_34 = eq(UInt<4>("h00"), io.decoder.aluOp) @[Mux.scala 68:19]
    node aluResult = mux(_T_34, _T_1, _T_33) @[Mux.scala 68:16]
    inst mdu of MDU @[ALU.scala 48:25]
    mdu.clock <= clock
    mdu.reset <= reset
    mdu.io.flush <= io.flush @[ALU.scala 49:17]
    mdu.io.op <= io.decoder.mduOp @[ALU.scala 50:17]
    mdu.io.opr1 <= io.decoder.opr1 @[ALU.scala 51:17]
    mdu.io.opr2 <= io.decoder.opr2 @[ALU.scala 52:17]
    node mduResult = mux(mdu.io.valid, mdu.io.result, UInt<1>("h00")) @[ALU.scala 53:22]
    node csrEn = neq(io.decoder.csrOp, UInt<3>("h00")) @[ALU.scala 56:34]
    node retired = neq(io.decoder.inst, UInt<32>("h013")) @[ALU.scala 57:33]
    node _T_35 = eq(io.csrRead.valid, UInt<1>("h00")) @[ALU.scala 58:30]
    node _T_36 = and(csrEn, _T_35) @[ALU.scala 58:27]
    node excType = mux(_T_36, UInt<4>("h05"), io.decoder.excType) @[ALU.scala 58:20]
    node _T_37 = neq(io.decoder.mduOp, UInt<4>("h00")) @[ALU.scala 63:38]
    node _T_38 = mux(_T_37, mduResult, aluResult) @[ALU.scala 63:20]
    node result = mux(csrEn, io.csrRead.data, _T_38) @[ALU.scala 62:20]
    node _T_39 = neq(io.decoder.lsuOp, UInt<5>("h00")) @[ALU.scala 64:34]
    node load = and(_T_39, io.decoder.regWen) @[ALU.scala 64:46]
    node _T_40 = eq(mdu.io.valid, UInt<1>("h00")) @[ALU.scala 67:18]
    io.stallReq <= _T_40 @[ALU.scala 67:15]
    io.csrRead.op <= io.decoder.csrOp @[ALU.scala 70:19]
    io.csrRead.addr <= io.decoder.csrAddr @[ALU.scala 71:19]
    io.alu.lsuOp <= io.decoder.lsuOp @[ALU.scala 75:23]
    io.alu.lsuData <= io.decoder.lsuData @[ALU.scala 76:23]
    io.alu.reg.en <= io.decoder.regWen @[ALU.scala 78:23]
    io.alu.reg.addr <= io.decoder.regWaddr @[ALU.scala 79:23]
    io.alu.reg.data <= result @[ALU.scala 80:23]
    io.alu.reg.load <= load @[ALU.scala 81:23]
    io.alu.csr.op <= io.decoder.csrOp @[ALU.scala 83:23]
    io.alu.csr.addr <= io.decoder.csrAddr @[ALU.scala 84:23]
    io.alu.csr.data <= io.decoder.csrData @[ALU.scala 85:23]
    io.alu.csr.retired <= retired @[ALU.scala 86:23]
    io.alu.excType <= excType @[ALU.scala 88:23]
    io.alu.excValue <= io.decoder.excValue @[ALU.scala 89:23]
    io.alu.valid <= io.decoder.valid @[ALU.scala 91:23]
    io.alu.inst <= io.decoder.inst @[ALU.scala 92:23]
    io.alu.currentPc <= io.decoder.currentPc @[ALU.scala 93:23]
    
  module MidStage_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip stallPrev : UInt<1>, flip stallNext : UInt<1>, flip prev : {lsuOp : UInt<5>, lsuData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}, next : {lsuOp : UInt<5>, lsuData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}}
    
    wire _T : {lsuOp : UInt<5>, lsuData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>} @[StageIO.scala 18:31]
    _T.currentPc <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.inst <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.valid <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.excValue <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.excType <= UInt<4>("h00") @[StageIO.scala 18:31]
    _T.csr.retired <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.csr.data <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.csr.addr <= UInt<12>("h00") @[StageIO.scala 18:31]
    _T.csr.op <= UInt<3>("h00") @[StageIO.scala 18:31]
    _T.reg.load <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.reg.data <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.reg.addr <= UInt<5>("h00") @[StageIO.scala 18:31]
    _T.reg.en <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.lsuData <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.lsuOp <= UInt<5>("h00") @[StageIO.scala 18:31]
    reg ff : {lsuOp : UInt<5>, lsuData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}, clock with : (reset => (reset, _T)) @[MidStage.scala 20:19]
    node _T_1 = eq(io.stallNext, UInt<1>("h00")) @[MidStage.scala 21:38]
    node _T_2 = and(io.stallPrev, _T_1) @[MidStage.scala 21:35]
    node _T_3 = or(io.flush, _T_2) @[MidStage.scala 21:18]
    when _T_3 : @[MidStage.scala 21:54]
      wire _T_4 : {lsuOp : UInt<5>, lsuData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>} @[StageIO.scala 18:31]
      _T_4.currentPc <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.inst <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.valid <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.excValue <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.excType <= UInt<4>("h00") @[StageIO.scala 18:31]
      _T_4.csr.retired <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.csr.data <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.csr.addr <= UInt<12>("h00") @[StageIO.scala 18:31]
      _T_4.csr.op <= UInt<3>("h00") @[StageIO.scala 18:31]
      _T_4.reg.load <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.reg.data <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.reg.addr <= UInt<5>("h00") @[StageIO.scala 18:31]
      _T_4.reg.en <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.lsuData <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.lsuOp <= UInt<5>("h00") @[StageIO.scala 18:31]
      ff.currentPc <= _T_4.currentPc @[MidStage.scala 22:8]
      ff.inst <= _T_4.inst @[MidStage.scala 22:8]
      ff.valid <= _T_4.valid @[MidStage.scala 22:8]
      ff.excValue <= _T_4.excValue @[MidStage.scala 22:8]
      ff.excType <= _T_4.excType @[MidStage.scala 22:8]
      ff.csr.retired <= _T_4.csr.retired @[MidStage.scala 22:8]
      ff.csr.data <= _T_4.csr.data @[MidStage.scala 22:8]
      ff.csr.addr <= _T_4.csr.addr @[MidStage.scala 22:8]
      ff.csr.op <= _T_4.csr.op @[MidStage.scala 22:8]
      ff.reg.load <= _T_4.reg.load @[MidStage.scala 22:8]
      ff.reg.data <= _T_4.reg.data @[MidStage.scala 22:8]
      ff.reg.addr <= _T_4.reg.addr @[MidStage.scala 22:8]
      ff.reg.en <= _T_4.reg.en @[MidStage.scala 22:8]
      ff.lsuData <= _T_4.lsuData @[MidStage.scala 22:8]
      ff.lsuOp <= _T_4.lsuOp @[MidStage.scala 22:8]
      skip @[MidStage.scala 21:54]
    else : @[MidStage.scala 23:30]
      node _T_5 = eq(io.stallPrev, UInt<1>("h00")) @[MidStage.scala 23:15]
      when _T_5 : @[MidStage.scala 23:30]
        ff.currentPc <= io.prev.currentPc @[MidStage.scala 24:8]
        ff.inst <= io.prev.inst @[MidStage.scala 24:8]
        ff.valid <= io.prev.valid @[MidStage.scala 24:8]
        ff.excValue <= io.prev.excValue @[MidStage.scala 24:8]
        ff.excType <= io.prev.excType @[MidStage.scala 24:8]
        ff.csr.retired <= io.prev.csr.retired @[MidStage.scala 24:8]
        ff.csr.data <= io.prev.csr.data @[MidStage.scala 24:8]
        ff.csr.addr <= io.prev.csr.addr @[MidStage.scala 24:8]
        ff.csr.op <= io.prev.csr.op @[MidStage.scala 24:8]
        ff.reg.load <= io.prev.reg.load @[MidStage.scala 24:8]
        ff.reg.data <= io.prev.reg.data @[MidStage.scala 24:8]
        ff.reg.addr <= io.prev.reg.addr @[MidStage.scala 24:8]
        ff.reg.en <= io.prev.reg.en @[MidStage.scala 24:8]
        ff.lsuData <= io.prev.lsuData @[MidStage.scala 24:8]
        ff.lsuOp <= io.prev.lsuOp @[MidStage.scala 24:8]
        skip @[MidStage.scala 23:30]
    io.next.currentPc <= ff.currentPc @[MidStage.scala 27:11]
    io.next.inst <= ff.inst @[MidStage.scala 27:11]
    io.next.valid <= ff.valid @[MidStage.scala 27:11]
    io.next.excValue <= ff.excValue @[MidStage.scala 27:11]
    io.next.excType <= ff.excType @[MidStage.scala 27:11]
    io.next.csr.retired <= ff.csr.retired @[MidStage.scala 27:11]
    io.next.csr.data <= ff.csr.data @[MidStage.scala 27:11]
    io.next.csr.addr <= ff.csr.addr @[MidStage.scala 27:11]
    io.next.csr.op <= ff.csr.op @[MidStage.scala 27:11]
    io.next.reg.load <= ff.reg.load @[MidStage.scala 27:11]
    io.next.reg.data <= ff.reg.data @[MidStage.scala 27:11]
    io.next.reg.addr <= ff.reg.addr @[MidStage.scala 27:11]
    io.next.reg.en <= ff.reg.en @[MidStage.scala 27:11]
    io.next.lsuData <= ff.lsuData @[MidStage.scala 27:11]
    io.next.lsuOp <= ff.lsuOp @[MidStage.scala 27:11]
    
  module AmoExecute : 
    input clock : Clock
    input reset : Reset
    output io : {flip op : UInt<4>, flip flush : UInt<1>, ready : UInt<1>, flip regOpr : UInt<32>, regWdata : UInt<32>, flip ramValid : UInt<1>, ramWen : UInt<1>, flip ramRdata : UInt<32>, ramWdata : UInt<32>}
    
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[AmoExecute.scala 28:22]
    node _T = add(io.ramRdata, io.regOpr) @[AmoExecute.scala 37:26]
    node _T_1 = tail(_T, 1) @[AmoExecute.scala 37:26]
    node _T_2 = xor(io.ramRdata, io.regOpr) @[AmoExecute.scala 38:26]
    node _T_3 = and(io.ramRdata, io.regOpr) @[AmoExecute.scala 39:26]
    node _T_4 = or(io.ramRdata, io.regOpr) @[AmoExecute.scala 40:26]
    node _T_5 = asSInt(io.ramRdata) @[AmoExecute.scala 41:29]
    node _T_6 = asSInt(io.regOpr) @[AmoExecute.scala 41:43]
    node _T_7 = lt(_T_5, _T_6) @[AmoExecute.scala 41:36]
    node _T_8 = mux(_T_7, io.ramRdata, io.regOpr) @[AmoExecute.scala 41:23]
    node _T_9 = asSInt(io.ramRdata) @[AmoExecute.scala 42:29]
    node _T_10 = asSInt(io.regOpr) @[AmoExecute.scala 42:43]
    node _T_11 = gt(_T_9, _T_10) @[AmoExecute.scala 42:36]
    node _T_12 = mux(_T_11, io.ramRdata, io.regOpr) @[AmoExecute.scala 42:23]
    node _T_13 = lt(io.ramRdata, io.regOpr) @[AmoExecute.scala 43:29]
    node _T_14 = mux(_T_13, io.ramRdata, io.regOpr) @[AmoExecute.scala 43:23]
    node _T_15 = gt(io.ramRdata, io.regOpr) @[AmoExecute.scala 44:29]
    node _T_16 = mux(_T_15, io.ramRdata, io.regOpr) @[AmoExecute.scala 44:23]
    node _T_17 = eq(UInt<4>("h09"), io.op) @[Mux.scala 68:19]
    node _T_18 = mux(_T_17, _T_16, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_19 = eq(UInt<4>("h08"), io.op) @[Mux.scala 68:19]
    node _T_20 = mux(_T_19, _T_14, _T_18) @[Mux.scala 68:16]
    node _T_21 = eq(UInt<4>("h07"), io.op) @[Mux.scala 68:19]
    node _T_22 = mux(_T_21, _T_12, _T_20) @[Mux.scala 68:16]
    node _T_23 = eq(UInt<4>("h06"), io.op) @[Mux.scala 68:19]
    node _T_24 = mux(_T_23, _T_8, _T_22) @[Mux.scala 68:16]
    node _T_25 = eq(UInt<4>("h05"), io.op) @[Mux.scala 68:19]
    node _T_26 = mux(_T_25, _T_4, _T_24) @[Mux.scala 68:16]
    node _T_27 = eq(UInt<4>("h04"), io.op) @[Mux.scala 68:19]
    node _T_28 = mux(_T_27, _T_3, _T_26) @[Mux.scala 68:16]
    node _T_29 = eq(UInt<4>("h03"), io.op) @[Mux.scala 68:19]
    node _T_30 = mux(_T_29, _T_2, _T_28) @[Mux.scala 68:16]
    node _T_31 = eq(UInt<4>("h02"), io.op) @[Mux.scala 68:19]
    node _T_32 = mux(_T_31, _T_1, _T_30) @[Mux.scala 68:16]
    node _T_33 = eq(UInt<4>("h01"), io.op) @[Mux.scala 68:19]
    node result = mux(_T_33, io.regOpr, _T_32) @[Mux.scala 68:16]
    when io.flush : @[AmoExecute.scala 48:19]
      state <= UInt<2>("h00") @[AmoExecute.scala 49:11]
      skip @[AmoExecute.scala 48:19]
    else : @[AmoExecute.scala 50:29]
      when io.ramValid : @[AmoExecute.scala 50:29]
        node _T_34 = eq(UInt<2>("h00"), state) @[Conditional.scala 37:30]
        when _T_34 : @[Conditional.scala 40:58]
          node _T_35 = eq(io.op, UInt<4>("h00")) @[AmoExecute.scala 56:21]
          when _T_35 : @[AmoExecute.scala 56:37]
            state <= UInt<2>("h00") @[AmoExecute.scala 57:17]
            skip @[AmoExecute.scala 56:37]
          else : @[AmoExecute.scala 58:22]
            state <= UInt<2>("h01") @[AmoExecute.scala 59:17]
            skip @[AmoExecute.scala 58:22]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_36 = eq(UInt<2>("h01"), state) @[Conditional.scala 37:30]
          when _T_36 : @[Conditional.scala 39:67]
            state <= UInt<2>("h02") @[AmoExecute.scala 65:15]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_37 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
            when _T_37 : @[Conditional.scala 39:67]
              state <= UInt<2>("h00") @[AmoExecute.scala 69:15]
              skip @[Conditional.scala 39:67]
        skip @[AmoExecute.scala 50:29]
    node _T_38 = eq(state, UInt<2>("h02")) @[AmoExecute.scala 75:24]
    io.ready <= _T_38 @[AmoExecute.scala 75:15]
    io.regWdata <= io.ramRdata @[AmoExecute.scala 76:15]
    node _T_39 = eq(state, UInt<2>("h01")) @[AmoExecute.scala 77:24]
    io.ramWen <= _T_39 @[AmoExecute.scala 77:15]
    io.ramWdata <= result @[AmoExecute.scala 78:15]
    
  module Mem : 
    input clock : Clock
    input reset : Reset
    output io : {flip alu : {lsuOp : UInt<5>, lsuData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excType : UInt<4>, excValue : UInt<32>, valid : UInt<1>, inst : UInt<32>, currentPc : UInt<32>}, flip flush : UInt<1>, stallReq : UInt<1>, flushReq : UInt<1>, flushPc : UInt<32>, ram : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flushIc : UInt<1>, flushDc : UInt<1>, flushIt : UInt<1>, flushDt : UInt<1>, flip csrHasInt : UInt<1>, flip csrBusy : UInt<1>, flip csrMode : UInt<2>, excMon : {addr : UInt<32>, flip valid : UInt<1>}, except : {hasTrap : UInt<1>, isSret : UInt<1>, isMret : UInt<1>, excCause : UInt<31>, excPc : UInt<32>, excValue : UInt<32>}, mem : {reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, memSigned : UInt<1>, memSel : UInt<2>, memWidth : UInt<2>, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, currentPc : UInt<32>}}
    
    node _T = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<1>("h01"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<2>("h02"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<2>("h03"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<3>("h04"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<3>("h05"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<3>("h06"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<3>("h07"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<4>("h08"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_17 = eq(UInt<4>("h09"), _T_16) @[Lookup.scala 31:38]
    node _T_18 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_19 = eq(UInt<4>("h0a"), _T_18) @[Lookup.scala 31:38]
    node _T_20 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_21 = eq(UInt<4>("h0b"), _T_20) @[Lookup.scala 31:38]
    node _T_22 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_23 = eq(UInt<4>("h0c"), _T_22) @[Lookup.scala 31:38]
    node _T_24 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_25 = eq(UInt<4>("h0d"), _T_24) @[Lookup.scala 31:38]
    node _T_26 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_27 = eq(UInt<4>("h0e"), _T_26) @[Lookup.scala 31:38]
    node _T_28 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_29 = eq(UInt<4>("h0f"), _T_28) @[Lookup.scala 31:38]
    node _T_30 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_31 = eq(UInt<5>("h010"), _T_30) @[Lookup.scala 31:38]
    node _T_32 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_33 = eq(UInt<5>("h011"), _T_32) @[Lookup.scala 31:38]
    node _T_34 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_35 = eq(UInt<5>("h012"), _T_34) @[Lookup.scala 31:38]
    node _T_36 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_37 = eq(UInt<5>("h013"), _T_36) @[Lookup.scala 31:38]
    node _T_38 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_39 = eq(UInt<5>("h014"), _T_38) @[Lookup.scala 31:38]
    node _T_40 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_41 = eq(UInt<5>("h015"), _T_40) @[Lookup.scala 31:38]
    node _T_42 = and(io.alu.lsuOp, UInt<5>("h01f")) @[Lookup.scala 31:38]
    node _T_43 = eq(UInt<5>("h016"), _T_42) @[Lookup.scala 31:38]
    node _T_44 = mux(_T_43, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_41, UInt<1>("h00"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_39, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_37, UInt<1>("h01"), _T_46) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_35, UInt<1>("h01"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_33, UInt<1>("h01"), _T_48) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_31, UInt<1>("h01"), _T_49) @[Lookup.scala 33:37]
    node _T_51 = mux(_T_29, UInt<1>("h01"), _T_50) @[Lookup.scala 33:37]
    node _T_52 = mux(_T_27, UInt<1>("h01"), _T_51) @[Lookup.scala 33:37]
    node _T_53 = mux(_T_25, UInt<1>("h01"), _T_52) @[Lookup.scala 33:37]
    node _T_54 = mux(_T_23, UInt<1>("h01"), _T_53) @[Lookup.scala 33:37]
    node _T_55 = mux(_T_21, UInt<1>("h01"), _T_54) @[Lookup.scala 33:37]
    node _T_56 = mux(_T_19, UInt<1>("h01"), _T_55) @[Lookup.scala 33:37]
    node _T_57 = mux(_T_17, UInt<1>("h01"), _T_56) @[Lookup.scala 33:37]
    node _T_58 = mux(_T_15, UInt<1>("h01"), _T_57) @[Lookup.scala 33:37]
    node _T_59 = mux(_T_13, UInt<1>("h01"), _T_58) @[Lookup.scala 33:37]
    node _T_60 = mux(_T_11, UInt<1>("h01"), _T_59) @[Lookup.scala 33:37]
    node _T_61 = mux(_T_9, UInt<1>("h01"), _T_60) @[Lookup.scala 33:37]
    node _T_62 = mux(_T_7, UInt<1>("h01"), _T_61) @[Lookup.scala 33:37]
    node _T_63 = mux(_T_5, UInt<1>("h01"), _T_62) @[Lookup.scala 33:37]
    node _T_64 = mux(_T_3, UInt<1>("h01"), _T_63) @[Lookup.scala 33:37]
    node en = mux(_T_1, UInt<1>("h01"), _T_64) @[Lookup.scala 33:37]
    node _T_65 = mux(_T_43, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_66 = mux(_T_41, UInt<1>("h00"), _T_65) @[Lookup.scala 33:37]
    node _T_67 = mux(_T_39, UInt<1>("h00"), _T_66) @[Lookup.scala 33:37]
    node _T_68 = mux(_T_37, UInt<1>("h00"), _T_67) @[Lookup.scala 33:37]
    node _T_69 = mux(_T_35, UInt<1>("h00"), _T_68) @[Lookup.scala 33:37]
    node _T_70 = mux(_T_33, UInt<1>("h00"), _T_69) @[Lookup.scala 33:37]
    node _T_71 = mux(_T_31, UInt<1>("h00"), _T_70) @[Lookup.scala 33:37]
    node _T_72 = mux(_T_29, UInt<1>("h00"), _T_71) @[Lookup.scala 33:37]
    node _T_73 = mux(_T_27, UInt<1>("h00"), _T_72) @[Lookup.scala 33:37]
    node _T_74 = mux(_T_25, UInt<1>("h00"), _T_73) @[Lookup.scala 33:37]
    node _T_75 = mux(_T_23, UInt<1>("h00"), _T_74) @[Lookup.scala 33:37]
    node _T_76 = mux(_T_21, UInt<1>("h00"), _T_75) @[Lookup.scala 33:37]
    node _T_77 = mux(_T_19, UInt<1>("h00"), _T_76) @[Lookup.scala 33:37]
    node _T_78 = mux(_T_17, UInt<1>("h00"), _T_77) @[Lookup.scala 33:37]
    node _T_79 = mux(_T_15, UInt<1>("h01"), _T_78) @[Lookup.scala 33:37]
    node _T_80 = mux(_T_13, UInt<1>("h01"), _T_79) @[Lookup.scala 33:37]
    node _T_81 = mux(_T_11, UInt<1>("h01"), _T_80) @[Lookup.scala 33:37]
    node _T_82 = mux(_T_9, UInt<1>("h00"), _T_81) @[Lookup.scala 33:37]
    node _T_83 = mux(_T_7, UInt<1>("h00"), _T_82) @[Lookup.scala 33:37]
    node _T_84 = mux(_T_5, UInt<1>("h00"), _T_83) @[Lookup.scala 33:37]
    node _T_85 = mux(_T_3, UInt<1>("h00"), _T_84) @[Lookup.scala 33:37]
    node wen = mux(_T_1, UInt<1>("h00"), _T_85) @[Lookup.scala 33:37]
    node _T_86 = mux(_T_43, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_87 = mux(_T_41, UInt<1>("h00"), _T_86) @[Lookup.scala 33:37]
    node _T_88 = mux(_T_39, UInt<1>("h00"), _T_87) @[Lookup.scala 33:37]
    node _T_89 = mux(_T_37, UInt<1>("h00"), _T_88) @[Lookup.scala 33:37]
    node _T_90 = mux(_T_35, UInt<1>("h00"), _T_89) @[Lookup.scala 33:37]
    node _T_91 = mux(_T_33, UInt<1>("h00"), _T_90) @[Lookup.scala 33:37]
    node _T_92 = mux(_T_31, UInt<1>("h00"), _T_91) @[Lookup.scala 33:37]
    node _T_93 = mux(_T_29, UInt<1>("h00"), _T_92) @[Lookup.scala 33:37]
    node _T_94 = mux(_T_27, UInt<1>("h00"), _T_93) @[Lookup.scala 33:37]
    node _T_95 = mux(_T_25, UInt<1>("h00"), _T_94) @[Lookup.scala 33:37]
    node _T_96 = mux(_T_23, UInt<1>("h00"), _T_95) @[Lookup.scala 33:37]
    node _T_97 = mux(_T_21, UInt<1>("h00"), _T_96) @[Lookup.scala 33:37]
    node _T_98 = mux(_T_19, UInt<1>("h00"), _T_97) @[Lookup.scala 33:37]
    node _T_99 = mux(_T_17, UInt<1>("h01"), _T_98) @[Lookup.scala 33:37]
    node _T_100 = mux(_T_15, UInt<1>("h00"), _T_99) @[Lookup.scala 33:37]
    node _T_101 = mux(_T_13, UInt<1>("h00"), _T_100) @[Lookup.scala 33:37]
    node _T_102 = mux(_T_11, UInt<1>("h00"), _T_101) @[Lookup.scala 33:37]
    node _T_103 = mux(_T_9, UInt<1>("h01"), _T_102) @[Lookup.scala 33:37]
    node _T_104 = mux(_T_7, UInt<1>("h01"), _T_103) @[Lookup.scala 33:37]
    node _T_105 = mux(_T_5, UInt<1>("h01"), _T_104) @[Lookup.scala 33:37]
    node _T_106 = mux(_T_3, UInt<1>("h01"), _T_105) @[Lookup.scala 33:37]
    node load = mux(_T_1, UInt<1>("h01"), _T_106) @[Lookup.scala 33:37]
    node _T_107 = mux(_T_43, UInt<2>("h00"), UInt<2>("h00")) @[Lookup.scala 33:37]
    node _T_108 = mux(_T_41, UInt<2>("h00"), _T_107) @[Lookup.scala 33:37]
    node _T_109 = mux(_T_39, UInt<2>("h00"), _T_108) @[Lookup.scala 33:37]
    node _T_110 = mux(_T_37, UInt<2>("h02"), _T_109) @[Lookup.scala 33:37]
    node _T_111 = mux(_T_35, UInt<2>("h02"), _T_110) @[Lookup.scala 33:37]
    node _T_112 = mux(_T_33, UInt<2>("h02"), _T_111) @[Lookup.scala 33:37]
    node _T_113 = mux(_T_31, UInt<2>("h02"), _T_112) @[Lookup.scala 33:37]
    node _T_114 = mux(_T_29, UInt<2>("h02"), _T_113) @[Lookup.scala 33:37]
    node _T_115 = mux(_T_27, UInt<2>("h02"), _T_114) @[Lookup.scala 33:37]
    node _T_116 = mux(_T_25, UInt<2>("h02"), _T_115) @[Lookup.scala 33:37]
    node _T_117 = mux(_T_23, UInt<2>("h02"), _T_116) @[Lookup.scala 33:37]
    node _T_118 = mux(_T_21, UInt<2>("h02"), _T_117) @[Lookup.scala 33:37]
    node _T_119 = mux(_T_19, UInt<2>("h02"), _T_118) @[Lookup.scala 33:37]
    node _T_120 = mux(_T_17, UInt<2>("h02"), _T_119) @[Lookup.scala 33:37]
    node _T_121 = mux(_T_15, UInt<2>("h02"), _T_120) @[Lookup.scala 33:37]
    node _T_122 = mux(_T_13, UInt<2>("h01"), _T_121) @[Lookup.scala 33:37]
    node _T_123 = mux(_T_11, UInt<2>("h00"), _T_122) @[Lookup.scala 33:37]
    node _T_124 = mux(_T_9, UInt<2>("h01"), _T_123) @[Lookup.scala 33:37]
    node _T_125 = mux(_T_7, UInt<2>("h00"), _T_124) @[Lookup.scala 33:37]
    node _T_126 = mux(_T_5, UInt<2>("h02"), _T_125) @[Lookup.scala 33:37]
    node _T_127 = mux(_T_3, UInt<2>("h01"), _T_126) @[Lookup.scala 33:37]
    node width = mux(_T_1, UInt<2>("h00"), _T_127) @[Lookup.scala 33:37]
    node _T_128 = mux(_T_43, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_129 = mux(_T_41, UInt<1>("h00"), _T_128) @[Lookup.scala 33:37]
    node _T_130 = mux(_T_39, UInt<1>("h00"), _T_129) @[Lookup.scala 33:37]
    node _T_131 = mux(_T_37, UInt<1>("h00"), _T_130) @[Lookup.scala 33:37]
    node _T_132 = mux(_T_35, UInt<1>("h00"), _T_131) @[Lookup.scala 33:37]
    node _T_133 = mux(_T_33, UInt<1>("h00"), _T_132) @[Lookup.scala 33:37]
    node _T_134 = mux(_T_31, UInt<1>("h00"), _T_133) @[Lookup.scala 33:37]
    node _T_135 = mux(_T_29, UInt<1>("h00"), _T_134) @[Lookup.scala 33:37]
    node _T_136 = mux(_T_27, UInt<1>("h00"), _T_135) @[Lookup.scala 33:37]
    node _T_137 = mux(_T_25, UInt<1>("h00"), _T_136) @[Lookup.scala 33:37]
    node _T_138 = mux(_T_23, UInt<1>("h00"), _T_137) @[Lookup.scala 33:37]
    node _T_139 = mux(_T_21, UInt<1>("h00"), _T_138) @[Lookup.scala 33:37]
    node _T_140 = mux(_T_19, UInt<1>("h00"), _T_139) @[Lookup.scala 33:37]
    node _T_141 = mux(_T_17, UInt<1>("h00"), _T_140) @[Lookup.scala 33:37]
    node _T_142 = mux(_T_15, UInt<1>("h00"), _T_141) @[Lookup.scala 33:37]
    node _T_143 = mux(_T_13, UInt<1>("h00"), _T_142) @[Lookup.scala 33:37]
    node _T_144 = mux(_T_11, UInt<1>("h00"), _T_143) @[Lookup.scala 33:37]
    node _T_145 = mux(_T_9, UInt<1>("h00"), _T_144) @[Lookup.scala 33:37]
    node _T_146 = mux(_T_7, UInt<1>("h00"), _T_145) @[Lookup.scala 33:37]
    node _T_147 = mux(_T_5, UInt<1>("h00"), _T_146) @[Lookup.scala 33:37]
    node _T_148 = mux(_T_3, UInt<1>("h01"), _T_147) @[Lookup.scala 33:37]
    node signed = mux(_T_1, UInt<1>("h01"), _T_148) @[Lookup.scala 33:37]
    node _T_149 = mux(_T_43, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_150 = mux(_T_41, UInt<1>("h00"), _T_149) @[Lookup.scala 33:37]
    node _T_151 = mux(_T_39, UInt<1>("h00"), _T_150) @[Lookup.scala 33:37]
    node _T_152 = mux(_T_37, UInt<1>("h00"), _T_151) @[Lookup.scala 33:37]
    node _T_153 = mux(_T_35, UInt<1>("h00"), _T_152) @[Lookup.scala 33:37]
    node _T_154 = mux(_T_33, UInt<1>("h00"), _T_153) @[Lookup.scala 33:37]
    node _T_155 = mux(_T_31, UInt<1>("h00"), _T_154) @[Lookup.scala 33:37]
    node _T_156 = mux(_T_29, UInt<1>("h00"), _T_155) @[Lookup.scala 33:37]
    node _T_157 = mux(_T_27, UInt<1>("h00"), _T_156) @[Lookup.scala 33:37]
    node _T_158 = mux(_T_25, UInt<1>("h00"), _T_157) @[Lookup.scala 33:37]
    node _T_159 = mux(_T_23, UInt<1>("h00"), _T_158) @[Lookup.scala 33:37]
    node _T_160 = mux(_T_21, UInt<1>("h00"), _T_159) @[Lookup.scala 33:37]
    node _T_161 = mux(_T_19, UInt<1>("h00"), _T_160) @[Lookup.scala 33:37]
    node _T_162 = mux(_T_17, UInt<1>("h01"), _T_161) @[Lookup.scala 33:37]
    node _T_163 = mux(_T_15, UInt<1>("h00"), _T_162) @[Lookup.scala 33:37]
    node _T_164 = mux(_T_13, UInt<1>("h00"), _T_163) @[Lookup.scala 33:37]
    node _T_165 = mux(_T_11, UInt<1>("h00"), _T_164) @[Lookup.scala 33:37]
    node _T_166 = mux(_T_9, UInt<1>("h00"), _T_165) @[Lookup.scala 33:37]
    node _T_167 = mux(_T_7, UInt<1>("h00"), _T_166) @[Lookup.scala 33:37]
    node _T_168 = mux(_T_5, UInt<1>("h00"), _T_167) @[Lookup.scala 33:37]
    node _T_169 = mux(_T_3, UInt<1>("h00"), _T_168) @[Lookup.scala 33:37]
    node setExcMon = mux(_T_1, UInt<1>("h00"), _T_169) @[Lookup.scala 33:37]
    node _T_170 = mux(_T_43, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_171 = mux(_T_41, UInt<1>("h00"), _T_170) @[Lookup.scala 33:37]
    node _T_172 = mux(_T_39, UInt<1>("h00"), _T_171) @[Lookup.scala 33:37]
    node _T_173 = mux(_T_37, UInt<1>("h00"), _T_172) @[Lookup.scala 33:37]
    node _T_174 = mux(_T_35, UInt<1>("h00"), _T_173) @[Lookup.scala 33:37]
    node _T_175 = mux(_T_33, UInt<1>("h00"), _T_174) @[Lookup.scala 33:37]
    node _T_176 = mux(_T_31, UInt<1>("h00"), _T_175) @[Lookup.scala 33:37]
    node _T_177 = mux(_T_29, UInt<1>("h00"), _T_176) @[Lookup.scala 33:37]
    node _T_178 = mux(_T_27, UInt<1>("h00"), _T_177) @[Lookup.scala 33:37]
    node _T_179 = mux(_T_25, UInt<1>("h00"), _T_178) @[Lookup.scala 33:37]
    node _T_180 = mux(_T_23, UInt<1>("h00"), _T_179) @[Lookup.scala 33:37]
    node _T_181 = mux(_T_21, UInt<1>("h00"), _T_180) @[Lookup.scala 33:37]
    node _T_182 = mux(_T_19, UInt<1>("h01"), _T_181) @[Lookup.scala 33:37]
    node _T_183 = mux(_T_17, UInt<1>("h00"), _T_182) @[Lookup.scala 33:37]
    node _T_184 = mux(_T_15, UInt<1>("h00"), _T_183) @[Lookup.scala 33:37]
    node _T_185 = mux(_T_13, UInt<1>("h00"), _T_184) @[Lookup.scala 33:37]
    node _T_186 = mux(_T_11, UInt<1>("h00"), _T_185) @[Lookup.scala 33:37]
    node _T_187 = mux(_T_9, UInt<1>("h00"), _T_186) @[Lookup.scala 33:37]
    node _T_188 = mux(_T_7, UInt<1>("h00"), _T_187) @[Lookup.scala 33:37]
    node _T_189 = mux(_T_5, UInt<1>("h00"), _T_188) @[Lookup.scala 33:37]
    node _T_190 = mux(_T_3, UInt<1>("h00"), _T_189) @[Lookup.scala 33:37]
    node checkExcMon = mux(_T_1, UInt<1>("h00"), _T_190) @[Lookup.scala 33:37]
    node _T_191 = mux(_T_43, UInt<4>("h00"), UInt<4>("h00")) @[Lookup.scala 33:37]
    node _T_192 = mux(_T_41, UInt<4>("h00"), _T_191) @[Lookup.scala 33:37]
    node _T_193 = mux(_T_39, UInt<4>("h00"), _T_192) @[Lookup.scala 33:37]
    node _T_194 = mux(_T_37, UInt<4>("h09"), _T_193) @[Lookup.scala 33:37]
    node _T_195 = mux(_T_35, UInt<4>("h08"), _T_194) @[Lookup.scala 33:37]
    node _T_196 = mux(_T_33, UInt<4>("h07"), _T_195) @[Lookup.scala 33:37]
    node _T_197 = mux(_T_31, UInt<4>("h06"), _T_196) @[Lookup.scala 33:37]
    node _T_198 = mux(_T_29, UInt<4>("h05"), _T_197) @[Lookup.scala 33:37]
    node _T_199 = mux(_T_27, UInt<4>("h04"), _T_198) @[Lookup.scala 33:37]
    node _T_200 = mux(_T_25, UInt<4>("h03"), _T_199) @[Lookup.scala 33:37]
    node _T_201 = mux(_T_23, UInt<4>("h02"), _T_200) @[Lookup.scala 33:37]
    node _T_202 = mux(_T_21, UInt<4>("h01"), _T_201) @[Lookup.scala 33:37]
    node _T_203 = mux(_T_19, UInt<4>("h00"), _T_202) @[Lookup.scala 33:37]
    node _T_204 = mux(_T_17, UInt<4>("h00"), _T_203) @[Lookup.scala 33:37]
    node _T_205 = mux(_T_15, UInt<4>("h00"), _T_204) @[Lookup.scala 33:37]
    node _T_206 = mux(_T_13, UInt<4>("h00"), _T_205) @[Lookup.scala 33:37]
    node _T_207 = mux(_T_11, UInt<4>("h00"), _T_206) @[Lookup.scala 33:37]
    node _T_208 = mux(_T_9, UInt<4>("h00"), _T_207) @[Lookup.scala 33:37]
    node _T_209 = mux(_T_7, UInt<4>("h00"), _T_208) @[Lookup.scala 33:37]
    node _T_210 = mux(_T_5, UInt<4>("h00"), _T_209) @[Lookup.scala 33:37]
    node _T_211 = mux(_T_3, UInt<4>("h00"), _T_210) @[Lookup.scala 33:37]
    node amoOp = mux(_T_1, UInt<4>("h00"), _T_211) @[Lookup.scala 33:37]
    node _T_212 = mux(_T_43, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_213 = mux(_T_41, UInt<1>("h01"), _T_212) @[Lookup.scala 33:37]
    node _T_214 = mux(_T_39, UInt<1>("h00"), _T_213) @[Lookup.scala 33:37]
    node _T_215 = mux(_T_37, UInt<1>("h00"), _T_214) @[Lookup.scala 33:37]
    node _T_216 = mux(_T_35, UInt<1>("h00"), _T_215) @[Lookup.scala 33:37]
    node _T_217 = mux(_T_33, UInt<1>("h00"), _T_216) @[Lookup.scala 33:37]
    node _T_218 = mux(_T_31, UInt<1>("h00"), _T_217) @[Lookup.scala 33:37]
    node _T_219 = mux(_T_29, UInt<1>("h00"), _T_218) @[Lookup.scala 33:37]
    node _T_220 = mux(_T_27, UInt<1>("h00"), _T_219) @[Lookup.scala 33:37]
    node _T_221 = mux(_T_25, UInt<1>("h00"), _T_220) @[Lookup.scala 33:37]
    node _T_222 = mux(_T_23, UInt<1>("h00"), _T_221) @[Lookup.scala 33:37]
    node _T_223 = mux(_T_21, UInt<1>("h00"), _T_222) @[Lookup.scala 33:37]
    node _T_224 = mux(_T_19, UInt<1>("h00"), _T_223) @[Lookup.scala 33:37]
    node _T_225 = mux(_T_17, UInt<1>("h00"), _T_224) @[Lookup.scala 33:37]
    node _T_226 = mux(_T_15, UInt<1>("h00"), _T_225) @[Lookup.scala 33:37]
    node _T_227 = mux(_T_13, UInt<1>("h00"), _T_226) @[Lookup.scala 33:37]
    node _T_228 = mux(_T_11, UInt<1>("h00"), _T_227) @[Lookup.scala 33:37]
    node _T_229 = mux(_T_9, UInt<1>("h00"), _T_228) @[Lookup.scala 33:37]
    node _T_230 = mux(_T_7, UInt<1>("h00"), _T_229) @[Lookup.scala 33:37]
    node _T_231 = mux(_T_5, UInt<1>("h00"), _T_230) @[Lookup.scala 33:37]
    node _T_232 = mux(_T_3, UInt<1>("h00"), _T_231) @[Lookup.scala 33:37]
    node flushIc = mux(_T_1, UInt<1>("h00"), _T_232) @[Lookup.scala 33:37]
    node _T_233 = mux(_T_43, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_234 = mux(_T_41, UInt<1>("h01"), _T_233) @[Lookup.scala 33:37]
    node _T_235 = mux(_T_39, UInt<1>("h00"), _T_234) @[Lookup.scala 33:37]
    node _T_236 = mux(_T_37, UInt<1>("h00"), _T_235) @[Lookup.scala 33:37]
    node _T_237 = mux(_T_35, UInt<1>("h00"), _T_236) @[Lookup.scala 33:37]
    node _T_238 = mux(_T_33, UInt<1>("h00"), _T_237) @[Lookup.scala 33:37]
    node _T_239 = mux(_T_31, UInt<1>("h00"), _T_238) @[Lookup.scala 33:37]
    node _T_240 = mux(_T_29, UInt<1>("h00"), _T_239) @[Lookup.scala 33:37]
    node _T_241 = mux(_T_27, UInt<1>("h00"), _T_240) @[Lookup.scala 33:37]
    node _T_242 = mux(_T_25, UInt<1>("h00"), _T_241) @[Lookup.scala 33:37]
    node _T_243 = mux(_T_23, UInt<1>("h00"), _T_242) @[Lookup.scala 33:37]
    node _T_244 = mux(_T_21, UInt<1>("h00"), _T_243) @[Lookup.scala 33:37]
    node _T_245 = mux(_T_19, UInt<1>("h00"), _T_244) @[Lookup.scala 33:37]
    node _T_246 = mux(_T_17, UInt<1>("h00"), _T_245) @[Lookup.scala 33:37]
    node _T_247 = mux(_T_15, UInt<1>("h00"), _T_246) @[Lookup.scala 33:37]
    node _T_248 = mux(_T_13, UInt<1>("h00"), _T_247) @[Lookup.scala 33:37]
    node _T_249 = mux(_T_11, UInt<1>("h00"), _T_248) @[Lookup.scala 33:37]
    node _T_250 = mux(_T_9, UInt<1>("h00"), _T_249) @[Lookup.scala 33:37]
    node _T_251 = mux(_T_7, UInt<1>("h00"), _T_250) @[Lookup.scala 33:37]
    node _T_252 = mux(_T_5, UInt<1>("h00"), _T_251) @[Lookup.scala 33:37]
    node _T_253 = mux(_T_3, UInt<1>("h00"), _T_252) @[Lookup.scala 33:37]
    node flushDc = mux(_T_1, UInt<1>("h00"), _T_253) @[Lookup.scala 33:37]
    node _T_254 = mux(_T_43, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_255 = mux(_T_41, UInt<1>("h00"), _T_254) @[Lookup.scala 33:37]
    node _T_256 = mux(_T_39, UInt<1>("h00"), _T_255) @[Lookup.scala 33:37]
    node _T_257 = mux(_T_37, UInt<1>("h00"), _T_256) @[Lookup.scala 33:37]
    node _T_258 = mux(_T_35, UInt<1>("h00"), _T_257) @[Lookup.scala 33:37]
    node _T_259 = mux(_T_33, UInt<1>("h00"), _T_258) @[Lookup.scala 33:37]
    node _T_260 = mux(_T_31, UInt<1>("h00"), _T_259) @[Lookup.scala 33:37]
    node _T_261 = mux(_T_29, UInt<1>("h00"), _T_260) @[Lookup.scala 33:37]
    node _T_262 = mux(_T_27, UInt<1>("h00"), _T_261) @[Lookup.scala 33:37]
    node _T_263 = mux(_T_25, UInt<1>("h00"), _T_262) @[Lookup.scala 33:37]
    node _T_264 = mux(_T_23, UInt<1>("h00"), _T_263) @[Lookup.scala 33:37]
    node _T_265 = mux(_T_21, UInt<1>("h00"), _T_264) @[Lookup.scala 33:37]
    node _T_266 = mux(_T_19, UInt<1>("h00"), _T_265) @[Lookup.scala 33:37]
    node _T_267 = mux(_T_17, UInt<1>("h00"), _T_266) @[Lookup.scala 33:37]
    node _T_268 = mux(_T_15, UInt<1>("h00"), _T_267) @[Lookup.scala 33:37]
    node _T_269 = mux(_T_13, UInt<1>("h00"), _T_268) @[Lookup.scala 33:37]
    node _T_270 = mux(_T_11, UInt<1>("h00"), _T_269) @[Lookup.scala 33:37]
    node _T_271 = mux(_T_9, UInt<1>("h00"), _T_270) @[Lookup.scala 33:37]
    node _T_272 = mux(_T_7, UInt<1>("h00"), _T_271) @[Lookup.scala 33:37]
    node _T_273 = mux(_T_5, UInt<1>("h00"), _T_272) @[Lookup.scala 33:37]
    node _T_274 = mux(_T_3, UInt<1>("h00"), _T_273) @[Lookup.scala 33:37]
    node flushIt = mux(_T_1, UInt<1>("h00"), _T_274) @[Lookup.scala 33:37]
    node _T_275 = mux(_T_43, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_276 = mux(_T_41, UInt<1>("h00"), _T_275) @[Lookup.scala 33:37]
    node _T_277 = mux(_T_39, UInt<1>("h00"), _T_276) @[Lookup.scala 33:37]
    node _T_278 = mux(_T_37, UInt<1>("h00"), _T_277) @[Lookup.scala 33:37]
    node _T_279 = mux(_T_35, UInt<1>("h00"), _T_278) @[Lookup.scala 33:37]
    node _T_280 = mux(_T_33, UInt<1>("h00"), _T_279) @[Lookup.scala 33:37]
    node _T_281 = mux(_T_31, UInt<1>("h00"), _T_280) @[Lookup.scala 33:37]
    node _T_282 = mux(_T_29, UInt<1>("h00"), _T_281) @[Lookup.scala 33:37]
    node _T_283 = mux(_T_27, UInt<1>("h00"), _T_282) @[Lookup.scala 33:37]
    node _T_284 = mux(_T_25, UInt<1>("h00"), _T_283) @[Lookup.scala 33:37]
    node _T_285 = mux(_T_23, UInt<1>("h00"), _T_284) @[Lookup.scala 33:37]
    node _T_286 = mux(_T_21, UInt<1>("h00"), _T_285) @[Lookup.scala 33:37]
    node _T_287 = mux(_T_19, UInt<1>("h00"), _T_286) @[Lookup.scala 33:37]
    node _T_288 = mux(_T_17, UInt<1>("h00"), _T_287) @[Lookup.scala 33:37]
    node _T_289 = mux(_T_15, UInt<1>("h00"), _T_288) @[Lookup.scala 33:37]
    node _T_290 = mux(_T_13, UInt<1>("h00"), _T_289) @[Lookup.scala 33:37]
    node _T_291 = mux(_T_11, UInt<1>("h00"), _T_290) @[Lookup.scala 33:37]
    node _T_292 = mux(_T_9, UInt<1>("h00"), _T_291) @[Lookup.scala 33:37]
    node _T_293 = mux(_T_7, UInt<1>("h00"), _T_292) @[Lookup.scala 33:37]
    node _T_294 = mux(_T_5, UInt<1>("h00"), _T_293) @[Lookup.scala 33:37]
    node _T_295 = mux(_T_3, UInt<1>("h00"), _T_294) @[Lookup.scala 33:37]
    node flushDt = mux(_T_1, UInt<1>("h00"), _T_295) @[Lookup.scala 33:37]
    node _T_296 = bits(io.alu.reg.data, 31, 2) @[Mem.scala 50:34]
    node addr = cat(_T_296, UInt<2>("h00")) @[Cat.scala 30:58]
    node sel = bits(io.alu.reg.data, 1, 0) @[Mem.scala 52:30]
    inst amo of AmoExecute @[Mem.scala 55:19]
    amo.clock <= clock
    amo.reset <= reset
    amo.io.op <= amoOp @[Mem.scala 56:19]
    amo.io.flush <= io.flush @[Mem.scala 57:19]
    amo.io.regOpr <= io.alu.lsuData @[Mem.scala 58:19]
    amo.io.ramValid <= io.ram.valid @[Mem.scala 59:19]
    amo.io.ramRdata <= io.ram.rdata @[Mem.scala 60:19]
    node _T_297 = dshl(UInt<4>("h01"), sel) @[Mem.scala 65:49]
    node _T_298 = dshl(UInt<4>("h03"), sel) @[Mem.scala 66:50]
    node _T_299 = eq(UInt<2>("h02"), width) @[Mux.scala 68:19]
    node _T_300 = mux(_T_299, UInt<4>("h0f"), UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_301 = eq(UInt<2>("h01"), width) @[Mux.scala 68:19]
    node _T_302 = mux(_T_301, _T_298, _T_300) @[Mux.scala 68:16]
    node _T_303 = eq(UInt<2>("h00"), width) @[Mux.scala 68:19]
    node writeEn = mux(_T_303, _T_297, _T_302) @[Mux.scala 68:16]
    node scWen = mux(io.excMon.valid, UInt<4>("h0f"), UInt<1>("h00")) @[Mem.scala 69:20]
    node amoWen = mux(amo.io.ramWen, UInt<4>("h0f"), UInt<1>("h00")) @[Mem.scala 70:20]
    node _T_304 = mux(checkExcMon, scWen, amoWen) @[Mem.scala 71:38]
    node ramWen = mux(wen, writeEn, _T_304) @[Mem.scala 71:20]
    node _T_305 = shl(io.alu.lsuData, 0) @[Mem.scala 75:40]
    node _T_306 = shl(io.alu.lsuData, 8) @[Mem.scala 75:40]
    node _T_307 = shl(io.alu.lsuData, 16) @[Mem.scala 75:40]
    node _T_308 = shl(io.alu.lsuData, 24) @[Mem.scala 75:40]
    node _T_309 = shl(io.alu.lsuData, 0) @[Mem.scala 75:40]
    node _T_310 = shl(io.alu.lsuData, 16) @[Mem.scala 75:40]
    node _T_311 = shl(io.alu.lsuData, 0) @[Mem.scala 75:40]
    node _T_312 = eq(UInt<2>("h03"), sel) @[Mux.scala 68:19]
    node _T_313 = mux(_T_312, _T_308, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_314 = eq(UInt<2>("h02"), sel) @[Mux.scala 68:19]
    node _T_315 = mux(_T_314, _T_307, _T_313) @[Mux.scala 68:16]
    node _T_316 = eq(UInt<1>("h01"), sel) @[Mux.scala 68:19]
    node _T_317 = mux(_T_316, _T_306, _T_315) @[Mux.scala 68:16]
    node _T_318 = eq(UInt<1>("h00"), sel) @[Mux.scala 68:19]
    node _T_319 = mux(_T_318, _T_305, _T_317) @[Mux.scala 68:16]
    node _T_320 = eq(UInt<2>("h02"), sel) @[Mux.scala 68:19]
    node _T_321 = mux(_T_320, _T_310, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_322 = eq(UInt<1>("h00"), sel) @[Mux.scala 68:19]
    node _T_323 = mux(_T_322, _T_309, _T_321) @[Mux.scala 68:16]
    node _T_324 = eq(UInt<1>("h00"), sel) @[Mux.scala 68:19]
    node _T_325 = mux(_T_324, _T_311, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_326 = eq(UInt<2>("h02"), width) @[Mux.scala 68:19]
    node _T_327 = mux(_T_326, _T_325, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_328 = eq(UInt<2>("h01"), width) @[Mux.scala 68:19]
    node _T_329 = mux(_T_328, _T_323, _T_327) @[Mux.scala 68:16]
    node _T_330 = eq(UInt<2>("h00"), width) @[Mux.scala 68:19]
    node lsuData = mux(_T_330, _T_319, _T_329) @[Mux.scala 68:16]
    node _T_331 = or(wen, checkExcMon) @[Mem.scala 84:25]
    node wdata = mux(_T_331, lsuData, amo.io.ramWdata) @[Mem.scala 84:20]
    node _T_332 = neq(amoOp, UInt<4>("h00")) @[Mem.scala 87:29]
    node _T_333 = eq(amo.io.ready, UInt<1>("h00")) @[Mem.scala 87:45]
    node _T_334 = eq(io.ram.valid, UInt<1>("h00")) @[Mem.scala 88:29]
    node _T_335 = and(en, _T_334) @[Mem.scala 88:26]
    node memStall = mux(_T_332, _T_333, _T_335) @[Mem.scala 87:22]
    node _T_336 = eq(io.ram.valid, UInt<1>("h00")) @[Mem.scala 89:30]
    node fencStall = and(flushDc, _T_336) @[Mem.scala 89:27]
    node _T_337 = or(memStall, fencStall) @[Mem.scala 90:28]
    node stallReq = or(_T_337, io.csrBusy) @[Mem.scala 90:41]
    node _T_338 = mux(io.excMon.valid, UInt<1>("h00"), UInt<1>("h01")) @[Mem.scala 93:34]
    node _T_339 = neq(amoOp, UInt<4>("h00")) @[Mem.scala 94:24]
    node _T_340 = mux(_T_339, amo.io.regWdata, io.alu.reg.data) @[Mem.scala 94:17]
    node data = mux(checkExcMon, _T_338, _T_340) @[Mem.scala 93:17]
    node _T_341 = or(wen, checkExcMon) @[Mem.scala 97:21]
    node _T_342 = neq(amoOp, UInt<4>("h00")) @[Mem.scala 97:45]
    node clearEm = or(_T_341, _T_342) @[Mem.scala 97:36]
    node _T_343 = bits(sel, 0, 0) @[Mem.scala 103:26]
    node _T_344 = neq(_T_343, UInt<1>("h00")) @[Mem.scala 103:30]
    node _T_345 = bits(sel, 1, 0) @[Mem.scala 104:26]
    node _T_346 = neq(_T_345, UInt<1>("h00")) @[Mem.scala 104:33]
    node _T_347 = eq(UInt<2>("h02"), width) @[Mux.scala 68:19]
    node _T_348 = mux(_T_347, _T_346, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_349 = eq(UInt<2>("h01"), width) @[Mux.scala 68:19]
    node _T_350 = mux(_T_349, _T_344, _T_348) @[Mux.scala 68:16]
    node _T_351 = eq(UInt<2>("h00"), width) @[Mux.scala 68:19]
    node memAddr = mux(_T_351, UInt<1>("h00"), _T_350) @[Mux.scala 68:16]
    node memExcept = or(memAddr, io.ram.fault) @[Mem.scala 106:27]
    node _T_352 = eq(io.alu.excType, UInt<4>("h03")) @[Mem.scala 108:34]
    node _T_353 = eq(io.csrMode, UInt<2>("h00")) @[Mem.scala 108:61]
    node illgSret = and(_T_352, _T_353) @[Mem.scala 108:47]
    node _T_354 = eq(io.alu.excType, UInt<4>("h04")) @[Mem.scala 109:34]
    node _T_355 = neq(io.csrMode, UInt<2>("h03")) @[Mem.scala 109:61]
    node illgMret = and(_T_354, _T_355) @[Mem.scala 109:47]
    node _T_356 = eq(io.alu.excType, UInt<4>("h0a")) @[Mem.scala 110:34]
    node _T_357 = eq(io.csrMode, UInt<2>("h00")) @[Mem.scala 110:62]
    node illgSpriv = and(_T_356, _T_357) @[Mem.scala 110:48]
    node instAddr = eq(io.alu.excType, UInt<4>("h07")) @[Mem.scala 111:34]
    node instPage = eq(io.alu.excType, UInt<4>("h06")) @[Mem.scala 112:34]
    node _T_358 = eq(io.alu.excType, UInt<4>("h05")) @[Mem.scala 113:34]
    node _T_359 = or(_T_358, illgSret) @[Mem.scala 113:48]
    node _T_360 = or(_T_359, illgMret) @[Mem.scala 114:28]
    node instIllg = or(_T_360, illgSpriv) @[Mem.scala 114:40]
    node _T_361 = eq(io.alu.excType, UInt<4>("h08")) @[Mem.scala 116:34]
    node _T_362 = eq(io.alu.excType, UInt<4>("h09")) @[Mem.scala 117:34]
    node excMem = or(_T_361, _T_362) @[Mem.scala 116:47]
    node _T_363 = eq(io.alu.excType, UInt<4>("h01")) @[Mem.scala 118:34]
    node _T_364 = eq(io.alu.excType, UInt<4>("h02")) @[Mem.scala 119:34]
    node _T_365 = or(_T_363, _T_364) @[Mem.scala 118:48]
    node _T_366 = eq(io.alu.excType, UInt<4>("h03")) @[Mem.scala 120:34]
    node _T_367 = or(_T_365, _T_366) @[Mem.scala 119:47]
    node _T_368 = eq(io.alu.excType, UInt<4>("h04")) @[Mem.scala 121:34]
    node excOther = or(_T_367, _T_368) @[Mem.scala 120:47]
    node _T_369 = or(instAddr, instIllg) @[Mem.scala 122:28]
    node _T_370 = or(_T_369, instPage) @[Mem.scala 122:40]
    node _T_371 = and(excMem, memExcept) @[Mem.scala 123:27]
    node _T_372 = or(_T_370, _T_371) @[Mem.scala 122:52]
    node _T_373 = or(_T_372, excOther) @[Mem.scala 123:41]
    node hasTrap = or(_T_373, io.csrHasInt) @[Mem.scala 123:53]
    node _T_374 = eq(io.alu.excType, UInt<4>("h03")) @[Mem.scala 125:34]
    node _T_375 = eq(instIllg, UInt<1>("h00")) @[Mem.scala 125:50]
    node isSret = and(_T_374, _T_375) @[Mem.scala 125:47]
    node _T_376 = eq(io.alu.excType, UInt<4>("h04")) @[Mem.scala 126:34]
    node _T_377 = eq(instIllg, UInt<1>("h00")) @[Mem.scala 126:50]
    node isMret = and(_T_376, _T_377) @[Mem.scala 126:47]
    node _T_378 = eq(io.csrMode, UInt<2>("h00")) @[Mem.scala 130:33]
    node _T_379 = eq(io.csrMode, UInt<2>("h01")) @[Mem.scala 131:33]
    node _T_380 = mux(_T_379, UInt<31>("h09"), UInt<31>("h0b")) @[Mem.scala 131:21]
    node _T_381 = mux(_T_378, UInt<31>("h08"), _T_380) @[Mem.scala 130:21]
    node _T_382 = mux(memAddr, UInt<31>("h04"), UInt<31>("h0d")) @[Mem.scala 133:21]
    node _T_383 = mux(memAddr, UInt<31>("h06"), UInt<31>("h0f")) @[Mem.scala 134:21]
    node _T_384 = eq(UInt<4>("h09"), io.alu.excType) @[Mux.scala 68:19]
    node _T_385 = mux(_T_384, _T_383, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_386 = eq(UInt<4>("h08"), io.alu.excType) @[Mux.scala 68:19]
    node _T_387 = mux(_T_386, _T_382, _T_385) @[Mux.scala 68:16]
    node _T_388 = eq(UInt<4>("h02"), io.alu.excType) @[Mux.scala 68:19]
    node _T_389 = mux(_T_388, UInt<31>("h03"), _T_387) @[Mux.scala 68:16]
    node _T_390 = eq(UInt<4>("h01"), io.alu.excType) @[Mux.scala 68:19]
    node cause = mux(_T_390, _T_381, _T_389) @[Mux.scala 68:16]
    node _T_391 = mux(instAddr, UInt<31>("h00"), cause) @[Mem.scala 138:22]
    node _T_392 = mux(instIllg, UInt<31>("h02"), _T_391) @[Mem.scala 137:22]
    node excCause = mux(instPage, UInt<31>("h0c"), _T_392) @[Mem.scala 136:22]
    node _T_393 = mux(memExcept, io.alu.reg.data, io.alu.excValue) @[Mem.scala 143:22]
    node _T_394 = mux(instPage, io.alu.currentPc, _T_393) @[Mem.scala 142:22]
    node excValue = mux(instIllg, io.alu.inst, _T_394) @[Mem.scala 141:22]
    io.stallReq <= stallReq @[Mem.scala 146:15]
    node _T_395 = eq(stallReq, UInt<1>("h00")) @[Mem.scala 147:18]
    node _T_396 = or(flushIc, flushIt) @[Mem.scala 147:40]
    node _T_397 = and(_T_395, _T_396) @[Mem.scala 147:28]
    io.flushReq <= _T_397 @[Mem.scala 147:15]
    node _T_398 = add(io.alu.currentPc, UInt<3>("h04")) @[Mem.scala 148:35]
    node _T_399 = tail(_T_398, 1) @[Mem.scala 148:35]
    io.flushPc <= _T_399 @[Mem.scala 148:15]
    node _T_400 = mux(hasTrap, UInt<1>("h00"), en) @[Mem.scala 151:23]
    io.ram.en <= _T_400 @[Mem.scala 151:17]
    io.ram.wen <= ramWen @[Mem.scala 152:17]
    io.ram.addr <= addr @[Mem.scala 153:17]
    io.ram.wdata <= wdata @[Mem.scala 154:17]
    node _T_401 = mux(hasTrap, UInt<1>("h00"), flushIc) @[Mem.scala 157:21]
    io.flushIc <= _T_401 @[Mem.scala 157:15]
    node _T_402 = mux(hasTrap, UInt<1>("h00"), flushDc) @[Mem.scala 158:21]
    io.flushDc <= _T_402 @[Mem.scala 158:15]
    node _T_403 = mux(hasTrap, UInt<1>("h00"), flushIt) @[Mem.scala 159:21]
    io.flushIt <= _T_403 @[Mem.scala 159:15]
    node _T_404 = mux(hasTrap, UInt<1>("h00"), flushDt) @[Mem.scala 160:21]
    io.flushDt <= _T_404 @[Mem.scala 160:15]
    io.excMon.addr <= addr @[Mem.scala 163:19]
    node _T_405 = eq(io.csrBusy, UInt<1>("h00")) @[Mem.scala 166:26]
    node _T_406 = and(_T_405, io.alu.valid) @[Mem.scala 166:38]
    node _T_407 = and(_T_406, hasTrap) @[Mem.scala 166:54]
    io.except.hasTrap <= _T_407 @[Mem.scala 166:23]
    io.except.isSret <= isSret @[Mem.scala 167:23]
    io.except.isMret <= isMret @[Mem.scala 168:23]
    io.except.excCause <= excCause @[Mem.scala 169:23]
    io.except.excPc <= io.alu.currentPc @[Mem.scala 170:23]
    io.except.excValue <= excValue @[Mem.scala 171:23]
    io.mem.reg.en <= io.alu.reg.en @[Mem.scala 174:23]
    io.mem.reg.addr <= io.alu.reg.addr @[Mem.scala 175:23]
    io.mem.reg.data <= data @[Mem.scala 176:23]
    io.mem.reg.load <= load @[Mem.scala 177:23]
    io.mem.memSigned <= signed @[Mem.scala 178:23]
    io.mem.memSel <= sel @[Mem.scala 179:23]
    io.mem.memWidth <= width @[Mem.scala 180:23]
    io.mem.csr.retired <= io.alu.csr.retired @[Mem.scala 181:23]
    io.mem.csr.data <= io.alu.csr.data @[Mem.scala 181:23]
    io.mem.csr.addr <= io.alu.csr.addr @[Mem.scala 181:23]
    io.mem.csr.op <= io.alu.csr.op @[Mem.scala 181:23]
    io.mem.excMon.addr <= addr @[Mem.scala 182:23]
    io.mem.excMon.set <= setExcMon @[Mem.scala 183:23]
    io.mem.excMon.clear <= clearEm @[Mem.scala 184:23]
    io.mem.currentPc <= io.alu.currentPc @[Mem.scala 185:23]
    
  module MidStage_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip stallPrev : UInt<1>, flip stallNext : UInt<1>, flip prev : {reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, memSigned : UInt<1>, memSel : UInt<2>, memWidth : UInt<2>, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, currentPc : UInt<32>}, next : {reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, memSigned : UInt<1>, memSel : UInt<2>, memWidth : UInt<2>, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, currentPc : UInt<32>}}
    
    wire _T : {reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, memSigned : UInt<1>, memSel : UInt<2>, memWidth : UInt<2>, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, currentPc : UInt<32>} @[StageIO.scala 18:31]
    _T.currentPc <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.excMon.clear <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.excMon.set <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.excMon.addr <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.csr.retired <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.csr.data <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.csr.addr <= UInt<12>("h00") @[StageIO.scala 18:31]
    _T.csr.op <= UInt<3>("h00") @[StageIO.scala 18:31]
    _T.memWidth <= UInt<2>("h00") @[StageIO.scala 18:31]
    _T.memSel <= UInt<2>("h00") @[StageIO.scala 18:31]
    _T.memSigned <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.reg.load <= UInt<1>("h00") @[StageIO.scala 18:31]
    _T.reg.data <= UInt<32>("h00") @[StageIO.scala 18:31]
    _T.reg.addr <= UInt<5>("h00") @[StageIO.scala 18:31]
    _T.reg.en <= UInt<1>("h00") @[StageIO.scala 18:31]
    reg ff : {reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, memSigned : UInt<1>, memSel : UInt<2>, memWidth : UInt<2>, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, currentPc : UInt<32>}, clock with : (reset => (reset, _T)) @[MidStage.scala 20:19]
    node _T_1 = eq(io.stallNext, UInt<1>("h00")) @[MidStage.scala 21:38]
    node _T_2 = and(io.stallPrev, _T_1) @[MidStage.scala 21:35]
    node _T_3 = or(io.flush, _T_2) @[MidStage.scala 21:18]
    when _T_3 : @[MidStage.scala 21:54]
      wire _T_4 : {reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, memSigned : UInt<1>, memSel : UInt<2>, memWidth : UInt<2>, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, currentPc : UInt<32>} @[StageIO.scala 18:31]
      _T_4.currentPc <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.excMon.clear <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.excMon.set <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.excMon.addr <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.csr.retired <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.csr.data <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.csr.addr <= UInt<12>("h00") @[StageIO.scala 18:31]
      _T_4.csr.op <= UInt<3>("h00") @[StageIO.scala 18:31]
      _T_4.memWidth <= UInt<2>("h00") @[StageIO.scala 18:31]
      _T_4.memSel <= UInt<2>("h00") @[StageIO.scala 18:31]
      _T_4.memSigned <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.reg.load <= UInt<1>("h00") @[StageIO.scala 18:31]
      _T_4.reg.data <= UInt<32>("h00") @[StageIO.scala 18:31]
      _T_4.reg.addr <= UInt<5>("h00") @[StageIO.scala 18:31]
      _T_4.reg.en <= UInt<1>("h00") @[StageIO.scala 18:31]
      ff.currentPc <= _T_4.currentPc @[MidStage.scala 22:8]
      ff.excMon.clear <= _T_4.excMon.clear @[MidStage.scala 22:8]
      ff.excMon.set <= _T_4.excMon.set @[MidStage.scala 22:8]
      ff.excMon.addr <= _T_4.excMon.addr @[MidStage.scala 22:8]
      ff.csr.retired <= _T_4.csr.retired @[MidStage.scala 22:8]
      ff.csr.data <= _T_4.csr.data @[MidStage.scala 22:8]
      ff.csr.addr <= _T_4.csr.addr @[MidStage.scala 22:8]
      ff.csr.op <= _T_4.csr.op @[MidStage.scala 22:8]
      ff.memWidth <= _T_4.memWidth @[MidStage.scala 22:8]
      ff.memSel <= _T_4.memSel @[MidStage.scala 22:8]
      ff.memSigned <= _T_4.memSigned @[MidStage.scala 22:8]
      ff.reg.load <= _T_4.reg.load @[MidStage.scala 22:8]
      ff.reg.data <= _T_4.reg.data @[MidStage.scala 22:8]
      ff.reg.addr <= _T_4.reg.addr @[MidStage.scala 22:8]
      ff.reg.en <= _T_4.reg.en @[MidStage.scala 22:8]
      skip @[MidStage.scala 21:54]
    else : @[MidStage.scala 23:30]
      node _T_5 = eq(io.stallPrev, UInt<1>("h00")) @[MidStage.scala 23:15]
      when _T_5 : @[MidStage.scala 23:30]
        ff.currentPc <= io.prev.currentPc @[MidStage.scala 24:8]
        ff.excMon.clear <= io.prev.excMon.clear @[MidStage.scala 24:8]
        ff.excMon.set <= io.prev.excMon.set @[MidStage.scala 24:8]
        ff.excMon.addr <= io.prev.excMon.addr @[MidStage.scala 24:8]
        ff.csr.retired <= io.prev.csr.retired @[MidStage.scala 24:8]
        ff.csr.data <= io.prev.csr.data @[MidStage.scala 24:8]
        ff.csr.addr <= io.prev.csr.addr @[MidStage.scala 24:8]
        ff.csr.op <= io.prev.csr.op @[MidStage.scala 24:8]
        ff.memWidth <= io.prev.memWidth @[MidStage.scala 24:8]
        ff.memSel <= io.prev.memSel @[MidStage.scala 24:8]
        ff.memSigned <= io.prev.memSigned @[MidStage.scala 24:8]
        ff.reg.load <= io.prev.reg.load @[MidStage.scala 24:8]
        ff.reg.data <= io.prev.reg.data @[MidStage.scala 24:8]
        ff.reg.addr <= io.prev.reg.addr @[MidStage.scala 24:8]
        ff.reg.en <= io.prev.reg.en @[MidStage.scala 24:8]
        skip @[MidStage.scala 23:30]
    io.next.currentPc <= ff.currentPc @[MidStage.scala 27:11]
    io.next.excMon.clear <= ff.excMon.clear @[MidStage.scala 27:11]
    io.next.excMon.set <= ff.excMon.set @[MidStage.scala 27:11]
    io.next.excMon.addr <= ff.excMon.addr @[MidStage.scala 27:11]
    io.next.csr.retired <= ff.csr.retired @[MidStage.scala 27:11]
    io.next.csr.data <= ff.csr.data @[MidStage.scala 27:11]
    io.next.csr.addr <= ff.csr.addr @[MidStage.scala 27:11]
    io.next.csr.op <= ff.csr.op @[MidStage.scala 27:11]
    io.next.memWidth <= ff.memWidth @[MidStage.scala 27:11]
    io.next.memSel <= ff.memSel @[MidStage.scala 27:11]
    io.next.memSigned <= ff.memSigned @[MidStage.scala 27:11]
    io.next.reg.load <= ff.reg.load @[MidStage.scala 27:11]
    io.next.reg.data <= ff.reg.data @[MidStage.scala 27:11]
    io.next.reg.addr <= ff.reg.addr @[MidStage.scala 27:11]
    io.next.reg.en <= ff.reg.en @[MidStage.scala 27:11]
    
  module WriteBack : 
    input clock : Clock
    input reset : Reset
    output io : {flip mem : {reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, memSigned : UInt<1>, memSel : UInt<2>, memWidth : UInt<2>, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, currentPc : UInt<32>}, flip ramData : UInt<32>, reg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, csr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, excMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, debug : {regWen : UInt<1>, regWaddr : UInt<5>, regWdata : UInt<32>, pc : UInt<32>}}
    
    node _T = bits(io.ramData, 7, 0) @[WriteBack.scala 27:23]
    wire _T_1 : SInt<32> @[WriteBack.scala 28:20]
    node _T_2 = asSInt(_T) @[WriteBack.scala 29:15]
    _T_1 <= _T_2 @[WriteBack.scala 29:10]
    node _T_3 = asUInt(_T_1) @[WriteBack.scala 30:49]
    node _T_4 = mux(io.mem.memSigned, _T_3, _T) @[WriteBack.scala 30:25]
    node _T_5 = bits(io.ramData, 15, 8) @[WriteBack.scala 27:23]
    wire _T_6 : SInt<32> @[WriteBack.scala 28:20]
    node _T_7 = asSInt(_T_5) @[WriteBack.scala 29:15]
    _T_6 <= _T_7 @[WriteBack.scala 29:10]
    node _T_8 = asUInt(_T_6) @[WriteBack.scala 30:49]
    node _T_9 = mux(io.mem.memSigned, _T_8, _T_5) @[WriteBack.scala 30:25]
    node _T_10 = bits(io.ramData, 23, 16) @[WriteBack.scala 27:23]
    wire _T_11 : SInt<32> @[WriteBack.scala 28:20]
    node _T_12 = asSInt(_T_10) @[WriteBack.scala 29:15]
    _T_11 <= _T_12 @[WriteBack.scala 29:10]
    node _T_13 = asUInt(_T_11) @[WriteBack.scala 30:49]
    node _T_14 = mux(io.mem.memSigned, _T_13, _T_10) @[WriteBack.scala 30:25]
    node _T_15 = bits(io.ramData, 31, 24) @[WriteBack.scala 27:23]
    wire _T_16 : SInt<32> @[WriteBack.scala 28:20]
    node _T_17 = asSInt(_T_15) @[WriteBack.scala 29:15]
    _T_16 <= _T_17 @[WriteBack.scala 29:10]
    node _T_18 = asUInt(_T_16) @[WriteBack.scala 30:49]
    node _T_19 = mux(io.mem.memSigned, _T_18, _T_15) @[WriteBack.scala 30:25]
    node _T_20 = bits(io.ramData, 15, 0) @[WriteBack.scala 27:23]
    wire _T_21 : SInt<32> @[WriteBack.scala 28:20]
    node _T_22 = asSInt(_T_20) @[WriteBack.scala 29:15]
    _T_21 <= _T_22 @[WriteBack.scala 29:10]
    node _T_23 = asUInt(_T_21) @[WriteBack.scala 30:49]
    node _T_24 = mux(io.mem.memSigned, _T_23, _T_20) @[WriteBack.scala 30:25]
    node _T_25 = bits(io.ramData, 31, 16) @[WriteBack.scala 27:23]
    wire _T_26 : SInt<32> @[WriteBack.scala 28:20]
    node _T_27 = asSInt(_T_25) @[WriteBack.scala 29:15]
    _T_26 <= _T_27 @[WriteBack.scala 29:10]
    node _T_28 = asUInt(_T_26) @[WriteBack.scala 30:49]
    node _T_29 = mux(io.mem.memSigned, _T_28, _T_25) @[WriteBack.scala 30:25]
    node _T_30 = bits(io.ramData, 31, 0) @[WriteBack.scala 27:23]
    wire _T_31 : SInt<32> @[WriteBack.scala 28:20]
    node _T_32 = asSInt(_T_30) @[WriteBack.scala 29:15]
    _T_31 <= _T_32 @[WriteBack.scala 29:10]
    node _T_33 = asUInt(_T_31) @[WriteBack.scala 30:49]
    node _T_34 = mux(io.mem.memSigned, _T_33, _T_30) @[WriteBack.scala 30:25]
    node _T_35 = eq(UInt<2>("h03"), io.mem.memSel) @[Mux.scala 68:19]
    node _T_36 = mux(_T_35, _T_19, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_37 = eq(UInt<2>("h02"), io.mem.memSel) @[Mux.scala 68:19]
    node _T_38 = mux(_T_37, _T_14, _T_36) @[Mux.scala 68:16]
    node _T_39 = eq(UInt<1>("h01"), io.mem.memSel) @[Mux.scala 68:19]
    node _T_40 = mux(_T_39, _T_9, _T_38) @[Mux.scala 68:16]
    node _T_41 = eq(UInt<1>("h00"), io.mem.memSel) @[Mux.scala 68:19]
    node _T_42 = mux(_T_41, _T_4, _T_40) @[Mux.scala 68:16]
    node _T_43 = eq(UInt<2>("h02"), io.mem.memSel) @[Mux.scala 68:19]
    node _T_44 = mux(_T_43, _T_29, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_45 = eq(UInt<1>("h00"), io.mem.memSel) @[Mux.scala 68:19]
    node _T_46 = mux(_T_45, _T_24, _T_44) @[Mux.scala 68:16]
    node _T_47 = eq(UInt<1>("h00"), io.mem.memSel) @[Mux.scala 68:19]
    node _T_48 = mux(_T_47, _T_34, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_49 = eq(UInt<2>("h02"), io.mem.memWidth) @[Mux.scala 68:19]
    node _T_50 = mux(_T_49, _T_48, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_51 = eq(UInt<2>("h01"), io.mem.memWidth) @[Mux.scala 68:19]
    node _T_52 = mux(_T_51, _T_46, _T_50) @[Mux.scala 68:16]
    node _T_53 = eq(UInt<2>("h00"), io.mem.memWidth) @[Mux.scala 68:19]
    node loadData = mux(_T_53, _T_42, _T_52) @[Mux.scala 68:16]
    node regData = mux(io.mem.reg.load, loadData, io.mem.reg.data) @[WriteBack.scala 44:20]
    io.reg.en <= io.mem.reg.en @[WriteBack.scala 47:15]
    io.reg.addr <= io.mem.reg.addr @[WriteBack.scala 48:15]
    io.reg.data <= regData @[WriteBack.scala 49:15]
    io.reg.load <= UInt<1>("h00") @[WriteBack.scala 50:15]
    io.csr.retired <= io.mem.csr.retired @[WriteBack.scala 51:15]
    io.csr.data <= io.mem.csr.data @[WriteBack.scala 51:15]
    io.csr.addr <= io.mem.csr.addr @[WriteBack.scala 51:15]
    io.csr.op <= io.mem.csr.op @[WriteBack.scala 51:15]
    io.excMon.clear <= io.mem.excMon.clear @[WriteBack.scala 52:15]
    io.excMon.set <= io.mem.excMon.set @[WriteBack.scala 52:15]
    io.excMon.addr <= io.mem.excMon.addr @[WriteBack.scala 52:15]
    io.debug.regWen <= io.mem.reg.en @[WriteBack.scala 55:21]
    io.debug.regWaddr <= io.mem.reg.addr @[WriteBack.scala 56:21]
    io.debug.regWdata <= regData @[WriteBack.scala 57:21]
    io.debug.pc <= io.mem.currentPc @[WriteBack.scala 58:21]
    
  module RegFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip read1 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, flip read2 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, flip write : {en : UInt<1>, addr : UInt<5>, data : UInt<32>}}
    
    wire _T : UInt<32>[32] @[RegFile.scala 17:32]
    _T[0] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[1] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[2] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[3] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[4] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[5] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[6] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[7] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[8] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[9] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[10] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[11] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[12] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[13] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[14] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[15] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[16] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[17] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[18] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[19] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[20] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[21] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[22] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[23] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[24] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[25] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[26] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[27] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[28] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[29] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[30] <= UInt<32>("h00") @[RegFile.scala 17:32]
    _T[31] <= UInt<32>("h00") @[RegFile.scala 17:32]
    reg regfile : UInt<32>[32], clock with : (reset => (reset, _T)) @[RegFile.scala 17:24]
    node _T_1 = mux(io.read1.en, regfile[io.read1.addr], UInt<1>("h00")) @[RegFile.scala 20:23]
    io.read1.data <= _T_1 @[RegFile.scala 20:17]
    node _T_2 = mux(io.read2.en, regfile[io.read2.addr], UInt<1>("h00")) @[RegFile.scala 21:23]
    io.read2.data <= _T_2 @[RegFile.scala 21:17]
    node _T_3 = neq(io.write.addr, UInt<1>("h00")) @[RegFile.scala 24:38]
    node _T_4 = and(io.write.en, _T_3) @[RegFile.scala 24:21]
    when _T_4 : @[RegFile.scala 24:47]
      regfile[io.write.addr] <= io.write.data @[RegFile.scala 25:28]
      skip @[RegFile.scala 24:47]
    
  module CsrFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip read : {op : UInt<3>, flip valid : UInt<1>, addr : UInt<12>, flip data : UInt<32>}, flip write : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, irq : {flip timer : UInt<1>, flip soft : UInt<1>, flip extern : UInt<1>}, flip except : {hasTrap : UInt<1>, isSret : UInt<1>, isMret : UInt<1>, excCause : UInt<31>, excPc : UInt<32>, excValue : UInt<32>}, hasInt : UInt<1>, busy : UInt<1>, mode : UInt<2>, sepc : UInt<32>, mepc : UInt<32>, trapVec : UInt<32>, pageEn : UInt<1>, basePpn : UInt<22>, sum : UInt<1>}
    
    reg mode : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[CsrFile.scala 39:26]
    wire _T : {sd : UInt<1>, wpri0 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri1 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri2 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri3 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[CSR.scala 27:34]
    _T.uie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.sie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.wpri3 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.mie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.upie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.spie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.wpri2 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.mpie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.spp <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.wpri1 <= UInt<2>("h00") @[CSR.scala 27:34]
    _T.mpp <= UInt<2>("h00") @[CSR.scala 27:34]
    _T.fs <= UInt<2>("h00") @[CSR.scala 27:34]
    _T.xs <= UInt<2>("h00") @[CSR.scala 27:34]
    _T.mprv <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.sum <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.mxr <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.tvm <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.tw <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.tsr <= UInt<1>("h00") @[CSR.scala 27:34]
    _T.wpri0 <= UInt<8>("h00") @[CSR.scala 27:34]
    _T.sd <= UInt<1>("h00") @[CSR.scala 27:34]
    reg mstatus : {sd : UInt<1>, wpri0 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri1 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri2 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri3 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, _T)) @[CsrFile.scala 42:26]
    wire misa : {mxl : UInt<2>, wlrl : UInt<4>, ext : UInt<26>} @[CSR.scala 245:50]
    misa.ext <= UInt<26>("h0141101") @[CSR.scala 245:50]
    misa.wlrl <= UInt<4>("h00") @[CSR.scala 245:50]
    misa.mxl <= UInt<2>("h01") @[CSR.scala 245:50]
    wire _T_1 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_1.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg medeleg : {data : UInt<32>}, clock with : (reset => (reset, _T_1)) @[CsrFile.scala 44:26]
    wire _T_2 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_2.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg mideleg : {data : UInt<32>}, clock with : (reset => (reset, _T_2)) @[CsrFile.scala 45:26]
    wire _T_3 : {wpri0 : UInt<20>, meie : UInt<1>, wpri1 : UInt<1>, seie : UInt<1>, ueie : UInt<1>, mtie : UInt<1>, wpri2 : UInt<1>, stie : UInt<1>, utie : UInt<1>, msie : UInt<1>, wpri3 : UInt<1>, ssie : UInt<1>, usie : UInt<1>} @[CSR.scala 27:34]
    _T_3.usie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.ssie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.wpri3 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.msie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.utie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.stie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.wpri2 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.mtie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.ueie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.seie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.wpri1 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.meie <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_3.wpri0 <= UInt<20>("h00") @[CSR.scala 27:34]
    reg mie : {wpri0 : UInt<20>, meie : UInt<1>, wpri1 : UInt<1>, seie : UInt<1>, ueie : UInt<1>, mtie : UInt<1>, wpri2 : UInt<1>, stie : UInt<1>, utie : UInt<1>, msie : UInt<1>, wpri3 : UInt<1>, ssie : UInt<1>, usie : UInt<1>}, clock with : (reset => (reset, _T_3)) @[CsrFile.scala 46:26]
    wire _T_4 : {base : UInt<30>, mode : UInt<2>} @[CSR.scala 27:34]
    _T_4.mode <= UInt<2>("h00") @[CSR.scala 27:34]
    _T_4.base <= UInt<30>("h00") @[CSR.scala 27:34]
    reg mtvec : {base : UInt<30>, mode : UInt<2>}, clock with : (reset => (reset, _T_4)) @[CsrFile.scala 47:26]
    wire _T_5 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_5.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg mscratch : {data : UInt<32>}, clock with : (reset => (reset, _T_5)) @[CsrFile.scala 48:26]
    wire _T_6 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_6.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg mepc : {data : UInt<32>}, clock with : (reset => (reset, _T_6)) @[CsrFile.scala 49:26]
    wire _T_7 : {int : UInt<1>, code : UInt<31>} @[CSR.scala 27:34]
    _T_7.code <= UInt<31>("h00") @[CSR.scala 27:34]
    _T_7.int <= UInt<1>("h00") @[CSR.scala 27:34]
    reg mcause : {int : UInt<1>, code : UInt<31>}, clock with : (reset => (reset, _T_7)) @[CsrFile.scala 50:26]
    wire _T_8 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_8.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg mtval : {data : UInt<32>}, clock with : (reset => (reset, _T_8)) @[CsrFile.scala 51:26]
    wire _T_9 : {wpri0 : UInt<20>, meip : UInt<1>, wpri1 : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, wpri2 : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, wpri3 : UInt<1>, ssip : UInt<1>, usip : UInt<1>} @[CSR.scala 27:34]
    _T_9.usip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.ssip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.wpri3 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.msip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.utip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.stip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.wpri2 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.mtip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.ueip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.seip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.wpri1 <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.meip <= UInt<1>("h00") @[CSR.scala 27:34]
    _T_9.wpri0 <= UInt<20>("h00") @[CSR.scala 27:34]
    reg mipReal : {wpri0 : UInt<20>, meip : UInt<1>, wpri1 : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, wpri2 : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, wpri3 : UInt<1>, ssip : UInt<1>, usip : UInt<1>}, clock with : (reset => (reset, _T_9)) @[CsrFile.scala 52:26]
    wire mip : {wpri0 : UInt<20>, meip : UInt<1>, wpri1 : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, wpri2 : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, wpri3 : UInt<1>, ssip : UInt<1>, usip : UInt<1>} @[CSR.scala 27:34]
    mip.usip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.ssip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.wpri3 <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.msip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.utip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.stip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.wpri2 <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.mtip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.ueip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.seip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.wpri1 <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.meip <= UInt<1>("h00") @[CSR.scala 27:34]
    mip.wpri0 <= UInt<20>("h00") @[CSR.scala 27:34]
    wire _T_10 : {data : UInt<64>} @[CSR.scala 27:34]
    _T_10.data <= UInt<64>("h00") @[CSR.scala 27:34]
    reg mcycle : {data : UInt<64>}, clock with : (reset => (reset, _T_10)) @[CsrFile.scala 54:26]
    wire _T_11 : {data : UInt<64>} @[CSR.scala 27:34]
    _T_11.data <= UInt<64>("h00") @[CSR.scala 27:34]
    reg minstret : {data : UInt<64>}, clock with : (reset => (reset, _T_11)) @[CsrFile.scala 55:26]
    wire sstatus : {sd : UInt<1>, wpri0 : UInt<11>, mxr : UInt<1>, sum : UInt<1>, wpri1 : UInt<1>, xs : UInt<2>, fs : UInt<2>, wpri2 : UInt<4>, spp : UInt<1>, wpri3 : UInt<2>, spie : UInt<1>, upie : UInt<1>, wpri4 : UInt<2>, sie : UInt<1>, uie : UInt<1>} @[CSR.scala 27:34]
    sstatus.uie <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.sie <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.wpri4 <= UInt<2>("h00") @[CSR.scala 27:34]
    sstatus.upie <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.spie <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.wpri3 <= UInt<2>("h00") @[CSR.scala 27:34]
    sstatus.spp <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.wpri2 <= UInt<4>("h00") @[CSR.scala 27:34]
    sstatus.fs <= UInt<2>("h00") @[CSR.scala 27:34]
    sstatus.xs <= UInt<2>("h00") @[CSR.scala 27:34]
    sstatus.wpri1 <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.sum <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.mxr <= UInt<1>("h00") @[CSR.scala 27:34]
    sstatus.wpri0 <= UInt<11>("h00") @[CSR.scala 27:34]
    sstatus.sd <= UInt<1>("h00") @[CSR.scala 27:34]
    node _T_12 = cat(mstatus.sie, mstatus.uie) @[CSR.scala 31:18]
    node _T_13 = cat(mstatus.upie, mstatus.mie) @[CSR.scala 31:18]
    node _T_14 = cat(_T_13, mstatus.wpri3) @[CSR.scala 31:18]
    node _T_15 = cat(_T_14, _T_12) @[CSR.scala 31:18]
    node _T_16 = cat(mstatus.wpri2, mstatus.spie) @[CSR.scala 31:18]
    node _T_17 = cat(mstatus.wpri1, mstatus.spp) @[CSR.scala 31:18]
    node _T_18 = cat(_T_17, mstatus.mpie) @[CSR.scala 31:18]
    node _T_19 = cat(_T_18, _T_16) @[CSR.scala 31:18]
    node _T_20 = cat(_T_19, _T_15) @[CSR.scala 31:18]
    node _T_21 = cat(mstatus.fs, mstatus.mpp) @[CSR.scala 31:18]
    node _T_22 = cat(mstatus.sum, mstatus.mprv) @[CSR.scala 31:18]
    node _T_23 = cat(_T_22, mstatus.xs) @[CSR.scala 31:18]
    node _T_24 = cat(_T_23, _T_21) @[CSR.scala 31:18]
    node _T_25 = cat(mstatus.tw, mstatus.tvm) @[CSR.scala 31:18]
    node _T_26 = cat(_T_25, mstatus.mxr) @[CSR.scala 31:18]
    node _T_27 = cat(mstatus.sd, mstatus.wpri0) @[CSR.scala 31:18]
    node _T_28 = cat(_T_27, mstatus.tsr) @[CSR.scala 31:18]
    node _T_29 = cat(_T_28, _T_26) @[CSR.scala 31:18]
    node _T_30 = cat(_T_29, _T_24) @[CSR.scala 31:18]
    node _T_31 = cat(_T_30, _T_20) @[CSR.scala 31:18]
    node _T_32 = bits(_T_31, 18, 18) @[CSR.scala 56:18]
    sstatus.sum <= _T_32 @[CSR.scala 56:11]
    node _T_33 = bits(_T_31, 8, 8) @[CSR.scala 57:18]
    sstatus.spp <= _T_33 @[CSR.scala 57:11]
    node _T_34 = bits(_T_31, 5, 5) @[CSR.scala 58:18]
    sstatus.spie <= _T_34 @[CSR.scala 58:11]
    node _T_35 = bits(_T_31, 1, 1) @[CSR.scala 59:18]
    sstatus.sie <= _T_35 @[CSR.scala 59:11]
    wire sie : {wpri0 : UInt<22>, seie : UInt<1>, ueie : UInt<1>, wpri1 : UInt<2>, stie : UInt<1>, utie : UInt<1>, wpri2 : UInt<2>, ssie : UInt<1>, usie : UInt<1>} @[CSR.scala 27:34]
    sie.usie <= UInt<1>("h00") @[CSR.scala 27:34]
    sie.ssie <= UInt<1>("h00") @[CSR.scala 27:34]
    sie.wpri2 <= UInt<2>("h00") @[CSR.scala 27:34]
    sie.utie <= UInt<1>("h00") @[CSR.scala 27:34]
    sie.stie <= UInt<1>("h00") @[CSR.scala 27:34]
    sie.wpri1 <= UInt<2>("h00") @[CSR.scala 27:34]
    sie.ueie <= UInt<1>("h00") @[CSR.scala 27:34]
    sie.seie <= UInt<1>("h00") @[CSR.scala 27:34]
    sie.wpri0 <= UInt<22>("h00") @[CSR.scala 27:34]
    node _T_36 = cat(mie.wpri3, mie.ssie) @[CSR.scala 31:18]
    node _T_37 = cat(_T_36, mie.usie) @[CSR.scala 31:18]
    node _T_38 = cat(mie.stie, mie.utie) @[CSR.scala 31:18]
    node _T_39 = cat(_T_38, mie.msie) @[CSR.scala 31:18]
    node _T_40 = cat(_T_39, _T_37) @[CSR.scala 31:18]
    node _T_41 = cat(mie.ueie, mie.mtie) @[CSR.scala 31:18]
    node _T_42 = cat(_T_41, mie.wpri2) @[CSR.scala 31:18]
    node _T_43 = cat(mie.wpri1, mie.seie) @[CSR.scala 31:18]
    node _T_44 = cat(mie.wpri0, mie.meie) @[CSR.scala 31:18]
    node _T_45 = cat(_T_44, _T_43) @[CSR.scala 31:18]
    node _T_46 = cat(_T_45, _T_42) @[CSR.scala 31:18]
    node _T_47 = cat(_T_46, _T_40) @[CSR.scala 31:18]
    node _T_48 = bits(_T_47, 9, 9) @[CSR.scala 81:18]
    sie.seie <= _T_48 @[CSR.scala 81:11]
    node _T_49 = bits(_T_47, 5, 5) @[CSR.scala 82:18]
    sie.stie <= _T_49 @[CSR.scala 82:11]
    node _T_50 = bits(_T_47, 1, 1) @[CSR.scala 83:18]
    sie.ssie <= _T_50 @[CSR.scala 83:11]
    wire sip : {wpri0 : UInt<22>, seip : UInt<1>, ueip : UInt<1>, wpri1 : UInt<2>, stip : UInt<1>, utip : UInt<1>, wpri2 : UInt<2>, ssip : UInt<1>, usip : UInt<1>} @[CSR.scala 27:34]
    sip.usip <= UInt<1>("h00") @[CSR.scala 27:34]
    sip.ssip <= UInt<1>("h00") @[CSR.scala 27:34]
    sip.wpri2 <= UInt<2>("h00") @[CSR.scala 27:34]
    sip.utip <= UInt<1>("h00") @[CSR.scala 27:34]
    sip.stip <= UInt<1>("h00") @[CSR.scala 27:34]
    sip.wpri1 <= UInt<2>("h00") @[CSR.scala 27:34]
    sip.ueip <= UInt<1>("h00") @[CSR.scala 27:34]
    sip.seip <= UInt<1>("h00") @[CSR.scala 27:34]
    sip.wpri0 <= UInt<22>("h00") @[CSR.scala 27:34]
    wire _T_51 : {base : UInt<30>, mode : UInt<2>} @[CSR.scala 27:34]
    _T_51.mode <= UInt<2>("h00") @[CSR.scala 27:34]
    _T_51.base <= UInt<30>("h00") @[CSR.scala 27:34]
    reg stvec : {base : UInt<30>, mode : UInt<2>}, clock with : (reset => (reset, _T_51)) @[CsrFile.scala 59:26]
    wire _T_52 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_52.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg sscratch : {data : UInt<32>}, clock with : (reset => (reset, _T_52)) @[CsrFile.scala 60:26]
    wire _T_53 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_53.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg sepc : {data : UInt<32>}, clock with : (reset => (reset, _T_53)) @[CsrFile.scala 61:26]
    wire _T_54 : {int : UInt<1>, code : UInt<31>} @[CSR.scala 27:34]
    _T_54.code <= UInt<31>("h00") @[CSR.scala 27:34]
    _T_54.int <= UInt<1>("h00") @[CSR.scala 27:34]
    reg scause : {int : UInt<1>, code : UInt<31>}, clock with : (reset => (reset, _T_54)) @[CsrFile.scala 62:26]
    wire _T_55 : {data : UInt<32>} @[CSR.scala 27:34]
    _T_55.data <= UInt<32>("h00") @[CSR.scala 27:34]
    reg stval : {data : UInt<32>}, clock with : (reset => (reset, _T_55)) @[CsrFile.scala 63:26]
    wire _T_56 : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>} @[CSR.scala 27:34]
    _T_56.ppn <= UInt<22>("h00") @[CSR.scala 27:34]
    _T_56.asid <= UInt<9>("h00") @[CSR.scala 27:34]
    _T_56.mode <= UInt<1>("h00") @[CSR.scala 27:34]
    reg satp : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, clock with : (reset => (reset, _T_56)) @[CsrFile.scala 64:26]
    node _T_57 = bits(mcycle.data, 31, 0) @[CsrFile.scala 75:45]
    node _T_58 = bits(minstret.data, 31, 0) @[CsrFile.scala 76:47]
    node _T_59 = bits(mcycle.data, 63, 32) @[CsrFile.scala 77:45]
    node _T_60 = bits(minstret.data, 63, 32) @[CsrFile.scala 78:47]
    node _T_61 = cat(sstatus.wpri4, sstatus.sie) @[CsrFile.scala 79:48]
    node _T_62 = cat(_T_61, sstatus.uie) @[CsrFile.scala 79:48]
    node _T_63 = cat(sstatus.spie, sstatus.upie) @[CsrFile.scala 79:48]
    node _T_64 = cat(sstatus.spp, sstatus.wpri3) @[CsrFile.scala 79:48]
    node _T_65 = cat(_T_64, _T_63) @[CsrFile.scala 79:48]
    node _T_66 = cat(_T_65, _T_62) @[CsrFile.scala 79:48]
    node _T_67 = cat(sstatus.fs, sstatus.wpri2) @[CsrFile.scala 79:48]
    node _T_68 = cat(sstatus.wpri1, sstatus.xs) @[CsrFile.scala 79:48]
    node _T_69 = cat(_T_68, _T_67) @[CsrFile.scala 79:48]
    node _T_70 = cat(sstatus.mxr, sstatus.sum) @[CsrFile.scala 79:48]
    node _T_71 = cat(sstatus.sd, sstatus.wpri0) @[CsrFile.scala 79:48]
    node _T_72 = cat(_T_71, _T_70) @[CsrFile.scala 79:48]
    node _T_73 = cat(_T_72, _T_69) @[CsrFile.scala 79:48]
    node _T_74 = cat(_T_73, _T_66) @[CsrFile.scala 79:48]
    node _T_75 = cat(sie.ssie, sie.usie) @[CsrFile.scala 80:44]
    node _T_76 = cat(sie.utie, sie.wpri2) @[CsrFile.scala 80:44]
    node _T_77 = cat(_T_76, _T_75) @[CsrFile.scala 80:44]
    node _T_78 = cat(sie.wpri1, sie.stie) @[CsrFile.scala 80:44]
    node _T_79 = cat(sie.wpri0, sie.seie) @[CsrFile.scala 80:44]
    node _T_80 = cat(_T_79, sie.ueie) @[CsrFile.scala 80:44]
    node _T_81 = cat(_T_80, _T_78) @[CsrFile.scala 80:44]
    node _T_82 = cat(_T_81, _T_77) @[CsrFile.scala 80:44]
    node _T_83 = cat(stvec.base, stvec.mode) @[CsrFile.scala 81:46]
    node _T_84 = cat(scause.int, scause.code) @[CsrFile.scala 85:47]
    node _T_85 = cat(sip.ssip, sip.usip) @[CsrFile.scala 87:44]
    node _T_86 = cat(sip.utip, sip.wpri2) @[CsrFile.scala 87:44]
    node _T_87 = cat(_T_86, _T_85) @[CsrFile.scala 87:44]
    node _T_88 = cat(sip.wpri1, sip.stip) @[CsrFile.scala 87:44]
    node _T_89 = cat(sip.wpri0, sip.seip) @[CsrFile.scala 87:44]
    node _T_90 = cat(_T_89, sip.ueip) @[CsrFile.scala 87:44]
    node _T_91 = cat(_T_90, _T_88) @[CsrFile.scala 87:44]
    node _T_92 = cat(_T_91, _T_87) @[CsrFile.scala 87:44]
    node _T_93 = cat(satp.mode, satp.asid) @[CsrFile.scala 88:45]
    node _T_94 = cat(_T_93, satp.ppn) @[CsrFile.scala 88:45]
    node _T_95 = cat(mstatus.sie, mstatus.uie) @[CsrFile.scala 93:48]
    node _T_96 = cat(mstatus.upie, mstatus.mie) @[CsrFile.scala 93:48]
    node _T_97 = cat(_T_96, mstatus.wpri3) @[CsrFile.scala 93:48]
    node _T_98 = cat(_T_97, _T_95) @[CsrFile.scala 93:48]
    node _T_99 = cat(mstatus.wpri2, mstatus.spie) @[CsrFile.scala 93:48]
    node _T_100 = cat(mstatus.wpri1, mstatus.spp) @[CsrFile.scala 93:48]
    node _T_101 = cat(_T_100, mstatus.mpie) @[CsrFile.scala 93:48]
    node _T_102 = cat(_T_101, _T_99) @[CsrFile.scala 93:48]
    node _T_103 = cat(_T_102, _T_98) @[CsrFile.scala 93:48]
    node _T_104 = cat(mstatus.fs, mstatus.mpp) @[CsrFile.scala 93:48]
    node _T_105 = cat(mstatus.sum, mstatus.mprv) @[CsrFile.scala 93:48]
    node _T_106 = cat(_T_105, mstatus.xs) @[CsrFile.scala 93:48]
    node _T_107 = cat(_T_106, _T_104) @[CsrFile.scala 93:48]
    node _T_108 = cat(mstatus.tw, mstatus.tvm) @[CsrFile.scala 93:48]
    node _T_109 = cat(_T_108, mstatus.mxr) @[CsrFile.scala 93:48]
    node _T_110 = cat(mstatus.sd, mstatus.wpri0) @[CsrFile.scala 93:48]
    node _T_111 = cat(_T_110, mstatus.tsr) @[CsrFile.scala 93:48]
    node _T_112 = cat(_T_111, _T_109) @[CsrFile.scala 93:48]
    node _T_113 = cat(_T_112, _T_107) @[CsrFile.scala 93:48]
    node _T_114 = cat(_T_113, _T_103) @[CsrFile.scala 93:48]
    node _T_115 = cat(misa.mxl, misa.wlrl) @[CsrFile.scala 94:45]
    node _T_116 = cat(_T_115, misa.ext) @[CsrFile.scala 94:45]
    node _T_117 = cat(mie.wpri3, mie.ssie) @[CsrFile.scala 97:44]
    node _T_118 = cat(_T_117, mie.usie) @[CsrFile.scala 97:44]
    node _T_119 = cat(mie.stie, mie.utie) @[CsrFile.scala 97:44]
    node _T_120 = cat(_T_119, mie.msie) @[CsrFile.scala 97:44]
    node _T_121 = cat(_T_120, _T_118) @[CsrFile.scala 97:44]
    node _T_122 = cat(mie.ueie, mie.mtie) @[CsrFile.scala 97:44]
    node _T_123 = cat(_T_122, mie.wpri2) @[CsrFile.scala 97:44]
    node _T_124 = cat(mie.wpri1, mie.seie) @[CsrFile.scala 97:44]
    node _T_125 = cat(mie.wpri0, mie.meie) @[CsrFile.scala 97:44]
    node _T_126 = cat(_T_125, _T_124) @[CsrFile.scala 97:44]
    node _T_127 = cat(_T_126, _T_123) @[CsrFile.scala 97:44]
    node _T_128 = cat(_T_127, _T_121) @[CsrFile.scala 97:44]
    node _T_129 = cat(mtvec.base, mtvec.mode) @[CsrFile.scala 98:46]
    node _T_130 = cat(mcause.int, mcause.code) @[CsrFile.scala 102:47]
    node _T_131 = cat(mip.wpri3, mip.ssip) @[CsrFile.scala 104:44]
    node _T_132 = cat(_T_131, mip.usip) @[CsrFile.scala 104:44]
    node _T_133 = cat(mip.stip, mip.utip) @[CsrFile.scala 104:44]
    node _T_134 = cat(_T_133, mip.msip) @[CsrFile.scala 104:44]
    node _T_135 = cat(_T_134, _T_132) @[CsrFile.scala 104:44]
    node _T_136 = cat(mip.ueip, mip.mtip) @[CsrFile.scala 104:44]
    node _T_137 = cat(_T_136, mip.wpri2) @[CsrFile.scala 104:44]
    node _T_138 = cat(mip.wpri1, mip.seip) @[CsrFile.scala 104:44]
    node _T_139 = cat(mip.wpri0, mip.meip) @[CsrFile.scala 104:44]
    node _T_140 = cat(_T_139, _T_138) @[CsrFile.scala 104:44]
    node _T_141 = cat(_T_140, _T_137) @[CsrFile.scala 104:44]
    node _T_142 = cat(_T_141, _T_135) @[CsrFile.scala 104:44]
    node _T_143 = bits(mcycle.data, 31, 0) @[CsrFile.scala 125:45]
    node _T_144 = bits(minstret.data, 31, 0) @[CsrFile.scala 126:47]
    node _T_145 = bits(mcycle.data, 63, 32) @[CsrFile.scala 127:45]
    node _T_146 = bits(minstret.data, 63, 32) @[CsrFile.scala 128:47]
    node _T_147 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_148 = eq(UInt<12>("h0c00"), _T_147) @[Lookup.scala 31:38]
    node _T_149 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_150 = eq(UInt<12>("h0c02"), _T_149) @[Lookup.scala 31:38]
    node _T_151 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_152 = eq(UInt<12>("h0c80"), _T_151) @[Lookup.scala 31:38]
    node _T_153 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_154 = eq(UInt<12>("h0c82"), _T_153) @[Lookup.scala 31:38]
    node _T_155 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_156 = eq(UInt<9>("h0100"), _T_155) @[Lookup.scala 31:38]
    node _T_157 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_158 = eq(UInt<9>("h0104"), _T_157) @[Lookup.scala 31:38]
    node _T_159 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_160 = eq(UInt<9>("h0105"), _T_159) @[Lookup.scala 31:38]
    node _T_161 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_162 = eq(UInt<9>("h0106"), _T_161) @[Lookup.scala 31:38]
    node _T_163 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_164 = eq(UInt<9>("h0140"), _T_163) @[Lookup.scala 31:38]
    node _T_165 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_166 = eq(UInt<9>("h0141"), _T_165) @[Lookup.scala 31:38]
    node _T_167 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_168 = eq(UInt<9>("h0142"), _T_167) @[Lookup.scala 31:38]
    node _T_169 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_170 = eq(UInt<9>("h0143"), _T_169) @[Lookup.scala 31:38]
    node _T_171 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_172 = eq(UInt<9>("h0144"), _T_171) @[Lookup.scala 31:38]
    node _T_173 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_174 = eq(UInt<9>("h0180"), _T_173) @[Lookup.scala 31:38]
    node _T_175 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_176 = eq(UInt<12>("h0f11"), _T_175) @[Lookup.scala 31:38]
    node _T_177 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_178 = eq(UInt<12>("h0f12"), _T_177) @[Lookup.scala 31:38]
    node _T_179 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_180 = eq(UInt<12>("h0f13"), _T_179) @[Lookup.scala 31:38]
    node _T_181 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_182 = eq(UInt<12>("h0f14"), _T_181) @[Lookup.scala 31:38]
    node _T_183 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_184 = eq(UInt<10>("h0300"), _T_183) @[Lookup.scala 31:38]
    node _T_185 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_186 = eq(UInt<10>("h0301"), _T_185) @[Lookup.scala 31:38]
    node _T_187 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_188 = eq(UInt<10>("h0302"), _T_187) @[Lookup.scala 31:38]
    node _T_189 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_190 = eq(UInt<10>("h0303"), _T_189) @[Lookup.scala 31:38]
    node _T_191 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_192 = eq(UInt<10>("h0304"), _T_191) @[Lookup.scala 31:38]
    node _T_193 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_194 = eq(UInt<10>("h0305"), _T_193) @[Lookup.scala 31:38]
    node _T_195 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_196 = eq(UInt<10>("h0306"), _T_195) @[Lookup.scala 31:38]
    node _T_197 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_198 = eq(UInt<10>("h0340"), _T_197) @[Lookup.scala 31:38]
    node _T_199 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_200 = eq(UInt<10>("h0341"), _T_199) @[Lookup.scala 31:38]
    node _T_201 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_202 = eq(UInt<10>("h0342"), _T_201) @[Lookup.scala 31:38]
    node _T_203 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_204 = eq(UInt<10>("h0343"), _T_203) @[Lookup.scala 31:38]
    node _T_205 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_206 = eq(UInt<10>("h0344"), _T_205) @[Lookup.scala 31:38]
    node _T_207 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_208 = eq(UInt<10>("h03a0"), _T_207) @[Lookup.scala 31:38]
    node _T_209 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_210 = eq(UInt<10>("h03a1"), _T_209) @[Lookup.scala 31:38]
    node _T_211 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_212 = eq(UInt<10>("h03a2"), _T_211) @[Lookup.scala 31:38]
    node _T_213 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_214 = eq(UInt<10>("h03a3"), _T_213) @[Lookup.scala 31:38]
    node _T_215 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_216 = eq(UInt<10>("h03b0"), _T_215) @[Lookup.scala 31:38]
    node _T_217 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_218 = eq(UInt<10>("h03b1"), _T_217) @[Lookup.scala 31:38]
    node _T_219 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_220 = eq(UInt<10>("h03b2"), _T_219) @[Lookup.scala 31:38]
    node _T_221 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_222 = eq(UInt<10>("h03b3"), _T_221) @[Lookup.scala 31:38]
    node _T_223 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_224 = eq(UInt<10>("h03b4"), _T_223) @[Lookup.scala 31:38]
    node _T_225 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_226 = eq(UInt<10>("h03b5"), _T_225) @[Lookup.scala 31:38]
    node _T_227 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_228 = eq(UInt<10>("h03b6"), _T_227) @[Lookup.scala 31:38]
    node _T_229 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_230 = eq(UInt<10>("h03b7"), _T_229) @[Lookup.scala 31:38]
    node _T_231 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_232 = eq(UInt<10>("h03b8"), _T_231) @[Lookup.scala 31:38]
    node _T_233 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_234 = eq(UInt<10>("h03b9"), _T_233) @[Lookup.scala 31:38]
    node _T_235 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_236 = eq(UInt<10>("h03ba"), _T_235) @[Lookup.scala 31:38]
    node _T_237 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_238 = eq(UInt<10>("h03bb"), _T_237) @[Lookup.scala 31:38]
    node _T_239 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_240 = eq(UInt<10>("h03bc"), _T_239) @[Lookup.scala 31:38]
    node _T_241 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_242 = eq(UInt<10>("h03bd"), _T_241) @[Lookup.scala 31:38]
    node _T_243 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_244 = eq(UInt<10>("h03be"), _T_243) @[Lookup.scala 31:38]
    node _T_245 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_246 = eq(UInt<10>("h03bf"), _T_245) @[Lookup.scala 31:38]
    node _T_247 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_248 = eq(UInt<12>("h0b00"), _T_247) @[Lookup.scala 31:38]
    node _T_249 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_250 = eq(UInt<12>("h0b02"), _T_249) @[Lookup.scala 31:38]
    node _T_251 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_252 = eq(UInt<12>("h0b80"), _T_251) @[Lookup.scala 31:38]
    node _T_253 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_254 = eq(UInt<12>("h0b82"), _T_253) @[Lookup.scala 31:38]
    node _T_255 = and(io.read.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_256 = eq(UInt<10>("h0320"), _T_255) @[Lookup.scala 31:38]
    node _T_257 = mux(_T_256, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_258 = mux(_T_254, _T_146, _T_257) @[Lookup.scala 33:37]
    node _T_259 = mux(_T_252, _T_145, _T_258) @[Lookup.scala 33:37]
    node _T_260 = mux(_T_250, _T_144, _T_259) @[Lookup.scala 33:37]
    node _T_261 = mux(_T_248, _T_143, _T_260) @[Lookup.scala 33:37]
    node _T_262 = mux(_T_246, UInt<1>("h00"), _T_261) @[Lookup.scala 33:37]
    node _T_263 = mux(_T_244, UInt<1>("h00"), _T_262) @[Lookup.scala 33:37]
    node _T_264 = mux(_T_242, UInt<1>("h00"), _T_263) @[Lookup.scala 33:37]
    node _T_265 = mux(_T_240, UInt<1>("h00"), _T_264) @[Lookup.scala 33:37]
    node _T_266 = mux(_T_238, UInt<1>("h00"), _T_265) @[Lookup.scala 33:37]
    node _T_267 = mux(_T_236, UInt<1>("h00"), _T_266) @[Lookup.scala 33:37]
    node _T_268 = mux(_T_234, UInt<1>("h00"), _T_267) @[Lookup.scala 33:37]
    node _T_269 = mux(_T_232, UInt<1>("h00"), _T_268) @[Lookup.scala 33:37]
    node _T_270 = mux(_T_230, UInt<1>("h00"), _T_269) @[Lookup.scala 33:37]
    node _T_271 = mux(_T_228, UInt<1>("h00"), _T_270) @[Lookup.scala 33:37]
    node _T_272 = mux(_T_226, UInt<1>("h00"), _T_271) @[Lookup.scala 33:37]
    node _T_273 = mux(_T_224, UInt<1>("h00"), _T_272) @[Lookup.scala 33:37]
    node _T_274 = mux(_T_222, UInt<1>("h00"), _T_273) @[Lookup.scala 33:37]
    node _T_275 = mux(_T_220, UInt<1>("h00"), _T_274) @[Lookup.scala 33:37]
    node _T_276 = mux(_T_218, UInt<1>("h00"), _T_275) @[Lookup.scala 33:37]
    node _T_277 = mux(_T_216, UInt<1>("h00"), _T_276) @[Lookup.scala 33:37]
    node _T_278 = mux(_T_214, UInt<1>("h00"), _T_277) @[Lookup.scala 33:37]
    node _T_279 = mux(_T_212, UInt<1>("h00"), _T_278) @[Lookup.scala 33:37]
    node _T_280 = mux(_T_210, UInt<1>("h00"), _T_279) @[Lookup.scala 33:37]
    node _T_281 = mux(_T_208, UInt<1>("h00"), _T_280) @[Lookup.scala 33:37]
    node _T_282 = mux(_T_206, _T_142, _T_281) @[Lookup.scala 33:37]
    node _T_283 = mux(_T_204, mtval.data, _T_282) @[Lookup.scala 33:37]
    node _T_284 = mux(_T_202, _T_130, _T_283) @[Lookup.scala 33:37]
    node _T_285 = mux(_T_200, mepc.data, _T_284) @[Lookup.scala 33:37]
    node _T_286 = mux(_T_198, mscratch.data, _T_285) @[Lookup.scala 33:37]
    node _T_287 = mux(_T_196, UInt<1>("h00"), _T_286) @[Lookup.scala 33:37]
    node _T_288 = mux(_T_194, _T_129, _T_287) @[Lookup.scala 33:37]
    node _T_289 = mux(_T_192, _T_128, _T_288) @[Lookup.scala 33:37]
    node _T_290 = mux(_T_190, mideleg.data, _T_289) @[Lookup.scala 33:37]
    node _T_291 = mux(_T_188, medeleg.data, _T_290) @[Lookup.scala 33:37]
    node _T_292 = mux(_T_186, _T_116, _T_291) @[Lookup.scala 33:37]
    node _T_293 = mux(_T_184, _T_114, _T_292) @[Lookup.scala 33:37]
    node _T_294 = mux(_T_182, UInt<1>("h00"), _T_293) @[Lookup.scala 33:37]
    node _T_295 = mux(_T_180, UInt<1>("h00"), _T_294) @[Lookup.scala 33:37]
    node _T_296 = mux(_T_178, UInt<1>("h00"), _T_295) @[Lookup.scala 33:37]
    node _T_297 = mux(_T_176, UInt<1>("h00"), _T_296) @[Lookup.scala 33:37]
    node _T_298 = mux(_T_174, _T_94, _T_297) @[Lookup.scala 33:37]
    node _T_299 = mux(_T_172, _T_92, _T_298) @[Lookup.scala 33:37]
    node _T_300 = mux(_T_170, stval.data, _T_299) @[Lookup.scala 33:37]
    node _T_301 = mux(_T_168, _T_84, _T_300) @[Lookup.scala 33:37]
    node _T_302 = mux(_T_166, sepc.data, _T_301) @[Lookup.scala 33:37]
    node _T_303 = mux(_T_164, sscratch.data, _T_302) @[Lookup.scala 33:37]
    node _T_304 = mux(_T_162, UInt<1>("h00"), _T_303) @[Lookup.scala 33:37]
    node _T_305 = mux(_T_160, _T_83, _T_304) @[Lookup.scala 33:37]
    node _T_306 = mux(_T_158, _T_82, _T_305) @[Lookup.scala 33:37]
    node _T_307 = mux(_T_156, _T_74, _T_306) @[Lookup.scala 33:37]
    node _T_308 = mux(_T_154, _T_60, _T_307) @[Lookup.scala 33:37]
    node _T_309 = mux(_T_152, _T_59, _T_308) @[Lookup.scala 33:37]
    node _T_310 = mux(_T_150, _T_58, _T_309) @[Lookup.scala 33:37]
    node readData = mux(_T_148, _T_57, _T_310) @[Lookup.scala 33:37]
    node _T_311 = mux(_T_256, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_312 = mux(_T_254, UInt<1>("h01"), _T_311) @[Lookup.scala 33:37]
    node _T_313 = mux(_T_252, UInt<1>("h01"), _T_312) @[Lookup.scala 33:37]
    node _T_314 = mux(_T_250, UInt<1>("h01"), _T_313) @[Lookup.scala 33:37]
    node _T_315 = mux(_T_248, UInt<1>("h01"), _T_314) @[Lookup.scala 33:37]
    node _T_316 = mux(_T_246, UInt<1>("h01"), _T_315) @[Lookup.scala 33:37]
    node _T_317 = mux(_T_244, UInt<1>("h01"), _T_316) @[Lookup.scala 33:37]
    node _T_318 = mux(_T_242, UInt<1>("h01"), _T_317) @[Lookup.scala 33:37]
    node _T_319 = mux(_T_240, UInt<1>("h01"), _T_318) @[Lookup.scala 33:37]
    node _T_320 = mux(_T_238, UInt<1>("h01"), _T_319) @[Lookup.scala 33:37]
    node _T_321 = mux(_T_236, UInt<1>("h01"), _T_320) @[Lookup.scala 33:37]
    node _T_322 = mux(_T_234, UInt<1>("h01"), _T_321) @[Lookup.scala 33:37]
    node _T_323 = mux(_T_232, UInt<1>("h01"), _T_322) @[Lookup.scala 33:37]
    node _T_324 = mux(_T_230, UInt<1>("h01"), _T_323) @[Lookup.scala 33:37]
    node _T_325 = mux(_T_228, UInt<1>("h01"), _T_324) @[Lookup.scala 33:37]
    node _T_326 = mux(_T_226, UInt<1>("h01"), _T_325) @[Lookup.scala 33:37]
    node _T_327 = mux(_T_224, UInt<1>("h01"), _T_326) @[Lookup.scala 33:37]
    node _T_328 = mux(_T_222, UInt<1>("h01"), _T_327) @[Lookup.scala 33:37]
    node _T_329 = mux(_T_220, UInt<1>("h01"), _T_328) @[Lookup.scala 33:37]
    node _T_330 = mux(_T_218, UInt<1>("h01"), _T_329) @[Lookup.scala 33:37]
    node _T_331 = mux(_T_216, UInt<1>("h01"), _T_330) @[Lookup.scala 33:37]
    node _T_332 = mux(_T_214, UInt<1>("h01"), _T_331) @[Lookup.scala 33:37]
    node _T_333 = mux(_T_212, UInt<1>("h01"), _T_332) @[Lookup.scala 33:37]
    node _T_334 = mux(_T_210, UInt<1>("h01"), _T_333) @[Lookup.scala 33:37]
    node _T_335 = mux(_T_208, UInt<1>("h01"), _T_334) @[Lookup.scala 33:37]
    node _T_336 = mux(_T_206, UInt<1>("h01"), _T_335) @[Lookup.scala 33:37]
    node _T_337 = mux(_T_204, UInt<1>("h01"), _T_336) @[Lookup.scala 33:37]
    node _T_338 = mux(_T_202, UInt<1>("h01"), _T_337) @[Lookup.scala 33:37]
    node _T_339 = mux(_T_200, UInt<1>("h01"), _T_338) @[Lookup.scala 33:37]
    node _T_340 = mux(_T_198, UInt<1>("h01"), _T_339) @[Lookup.scala 33:37]
    node _T_341 = mux(_T_196, UInt<1>("h01"), _T_340) @[Lookup.scala 33:37]
    node _T_342 = mux(_T_194, UInt<1>("h01"), _T_341) @[Lookup.scala 33:37]
    node _T_343 = mux(_T_192, UInt<1>("h01"), _T_342) @[Lookup.scala 33:37]
    node _T_344 = mux(_T_190, UInt<1>("h01"), _T_343) @[Lookup.scala 33:37]
    node _T_345 = mux(_T_188, UInt<1>("h01"), _T_344) @[Lookup.scala 33:37]
    node _T_346 = mux(_T_186, UInt<1>("h01"), _T_345) @[Lookup.scala 33:37]
    node _T_347 = mux(_T_184, UInt<1>("h01"), _T_346) @[Lookup.scala 33:37]
    node _T_348 = mux(_T_182, UInt<1>("h01"), _T_347) @[Lookup.scala 33:37]
    node _T_349 = mux(_T_180, UInt<1>("h01"), _T_348) @[Lookup.scala 33:37]
    node _T_350 = mux(_T_178, UInt<1>("h01"), _T_349) @[Lookup.scala 33:37]
    node _T_351 = mux(_T_176, UInt<1>("h01"), _T_350) @[Lookup.scala 33:37]
    node _T_352 = mux(_T_174, UInt<1>("h01"), _T_351) @[Lookup.scala 33:37]
    node _T_353 = mux(_T_172, UInt<1>("h01"), _T_352) @[Lookup.scala 33:37]
    node _T_354 = mux(_T_170, UInt<1>("h01"), _T_353) @[Lookup.scala 33:37]
    node _T_355 = mux(_T_168, UInt<1>("h01"), _T_354) @[Lookup.scala 33:37]
    node _T_356 = mux(_T_166, UInt<1>("h01"), _T_355) @[Lookup.scala 33:37]
    node _T_357 = mux(_T_164, UInt<1>("h01"), _T_356) @[Lookup.scala 33:37]
    node _T_358 = mux(_T_162, UInt<1>("h01"), _T_357) @[Lookup.scala 33:37]
    node _T_359 = mux(_T_160, UInt<1>("h01"), _T_358) @[Lookup.scala 33:37]
    node _T_360 = mux(_T_158, UInt<1>("h01"), _T_359) @[Lookup.scala 33:37]
    node _T_361 = mux(_T_156, UInt<1>("h01"), _T_360) @[Lookup.scala 33:37]
    node _T_362 = mux(_T_154, UInt<1>("h01"), _T_361) @[Lookup.scala 33:37]
    node _T_363 = mux(_T_152, UInt<1>("h01"), _T_362) @[Lookup.scala 33:37]
    node _T_364 = mux(_T_150, UInt<1>("h01"), _T_363) @[Lookup.scala 33:37]
    node readable = mux(_T_148, UInt<1>("h01"), _T_364) @[Lookup.scala 33:37]
    node _T_365 = mux(_T_256, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_366 = mux(_T_254, UInt<1>("h01"), _T_365) @[Lookup.scala 33:37]
    node _T_367 = mux(_T_252, UInt<1>("h01"), _T_366) @[Lookup.scala 33:37]
    node _T_368 = mux(_T_250, UInt<1>("h01"), _T_367) @[Lookup.scala 33:37]
    node _T_369 = mux(_T_248, UInt<1>("h01"), _T_368) @[Lookup.scala 33:37]
    node _T_370 = mux(_T_246, UInt<1>("h01"), _T_369) @[Lookup.scala 33:37]
    node _T_371 = mux(_T_244, UInt<1>("h01"), _T_370) @[Lookup.scala 33:37]
    node _T_372 = mux(_T_242, UInt<1>("h01"), _T_371) @[Lookup.scala 33:37]
    node _T_373 = mux(_T_240, UInt<1>("h01"), _T_372) @[Lookup.scala 33:37]
    node _T_374 = mux(_T_238, UInt<1>("h01"), _T_373) @[Lookup.scala 33:37]
    node _T_375 = mux(_T_236, UInt<1>("h01"), _T_374) @[Lookup.scala 33:37]
    node _T_376 = mux(_T_234, UInt<1>("h01"), _T_375) @[Lookup.scala 33:37]
    node _T_377 = mux(_T_232, UInt<1>("h01"), _T_376) @[Lookup.scala 33:37]
    node _T_378 = mux(_T_230, UInt<1>("h01"), _T_377) @[Lookup.scala 33:37]
    node _T_379 = mux(_T_228, UInt<1>("h01"), _T_378) @[Lookup.scala 33:37]
    node _T_380 = mux(_T_226, UInt<1>("h01"), _T_379) @[Lookup.scala 33:37]
    node _T_381 = mux(_T_224, UInt<1>("h01"), _T_380) @[Lookup.scala 33:37]
    node _T_382 = mux(_T_222, UInt<1>("h01"), _T_381) @[Lookup.scala 33:37]
    node _T_383 = mux(_T_220, UInt<1>("h01"), _T_382) @[Lookup.scala 33:37]
    node _T_384 = mux(_T_218, UInt<1>("h01"), _T_383) @[Lookup.scala 33:37]
    node _T_385 = mux(_T_216, UInt<1>("h01"), _T_384) @[Lookup.scala 33:37]
    node _T_386 = mux(_T_214, UInt<1>("h01"), _T_385) @[Lookup.scala 33:37]
    node _T_387 = mux(_T_212, UInt<1>("h01"), _T_386) @[Lookup.scala 33:37]
    node _T_388 = mux(_T_210, UInt<1>("h01"), _T_387) @[Lookup.scala 33:37]
    node _T_389 = mux(_T_208, UInt<1>("h01"), _T_388) @[Lookup.scala 33:37]
    node _T_390 = mux(_T_206, UInt<1>("h01"), _T_389) @[Lookup.scala 33:37]
    node _T_391 = mux(_T_204, UInt<1>("h01"), _T_390) @[Lookup.scala 33:37]
    node _T_392 = mux(_T_202, UInt<1>("h01"), _T_391) @[Lookup.scala 33:37]
    node _T_393 = mux(_T_200, UInt<1>("h01"), _T_392) @[Lookup.scala 33:37]
    node _T_394 = mux(_T_198, UInt<1>("h01"), _T_393) @[Lookup.scala 33:37]
    node _T_395 = mux(_T_196, UInt<1>("h01"), _T_394) @[Lookup.scala 33:37]
    node _T_396 = mux(_T_194, UInt<1>("h01"), _T_395) @[Lookup.scala 33:37]
    node _T_397 = mux(_T_192, UInt<1>("h01"), _T_396) @[Lookup.scala 33:37]
    node _T_398 = mux(_T_190, UInt<1>("h01"), _T_397) @[Lookup.scala 33:37]
    node _T_399 = mux(_T_188, UInt<1>("h01"), _T_398) @[Lookup.scala 33:37]
    node _T_400 = mux(_T_186, UInt<1>("h01"), _T_399) @[Lookup.scala 33:37]
    node _T_401 = mux(_T_184, UInt<1>("h01"), _T_400) @[Lookup.scala 33:37]
    node _T_402 = mux(_T_182, UInt<1>("h00"), _T_401) @[Lookup.scala 33:37]
    node _T_403 = mux(_T_180, UInt<1>("h00"), _T_402) @[Lookup.scala 33:37]
    node _T_404 = mux(_T_178, UInt<1>("h00"), _T_403) @[Lookup.scala 33:37]
    node _T_405 = mux(_T_176, UInt<1>("h00"), _T_404) @[Lookup.scala 33:37]
    node _T_406 = mux(_T_174, UInt<1>("h01"), _T_405) @[Lookup.scala 33:37]
    node _T_407 = mux(_T_172, UInt<1>("h01"), _T_406) @[Lookup.scala 33:37]
    node _T_408 = mux(_T_170, UInt<1>("h01"), _T_407) @[Lookup.scala 33:37]
    node _T_409 = mux(_T_168, UInt<1>("h01"), _T_408) @[Lookup.scala 33:37]
    node _T_410 = mux(_T_166, UInt<1>("h01"), _T_409) @[Lookup.scala 33:37]
    node _T_411 = mux(_T_164, UInt<1>("h01"), _T_410) @[Lookup.scala 33:37]
    node _T_412 = mux(_T_162, UInt<1>("h01"), _T_411) @[Lookup.scala 33:37]
    node _T_413 = mux(_T_160, UInt<1>("h01"), _T_412) @[Lookup.scala 33:37]
    node _T_414 = mux(_T_158, UInt<1>("h01"), _T_413) @[Lookup.scala 33:37]
    node _T_415 = mux(_T_156, UInt<1>("h01"), _T_414) @[Lookup.scala 33:37]
    node _T_416 = mux(_T_154, UInt<1>("h00"), _T_415) @[Lookup.scala 33:37]
    node _T_417 = mux(_T_152, UInt<1>("h00"), _T_416) @[Lookup.scala 33:37]
    node _T_418 = mux(_T_150, UInt<1>("h00"), _T_417) @[Lookup.scala 33:37]
    node writable = mux(_T_148, UInt<1>("h00"), _T_418) @[Lookup.scala 33:37]
    node _T_419 = and(readable, writable) @[CsrFile.scala 138:26]
    node _T_420 = and(readable, writable) @[CsrFile.scala 139:26]
    node _T_421 = and(readable, writable) @[CsrFile.scala 140:26]
    node _T_422 = eq(UInt<3>("h05"), io.read.op) @[Mux.scala 68:19]
    node _T_423 = mux(_T_422, _T_421, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_424 = eq(UInt<3>("h04"), io.read.op) @[Mux.scala 68:19]
    node _T_425 = mux(_T_424, _T_420, _T_423) @[Mux.scala 68:16]
    node _T_426 = eq(UInt<3>("h03"), io.read.op) @[Mux.scala 68:19]
    node _T_427 = mux(_T_426, _T_419, _T_425) @[Mux.scala 68:16]
    node _T_428 = eq(UInt<3>("h02"), io.read.op) @[Mux.scala 68:19]
    node _T_429 = mux(_T_428, writable, _T_427) @[Mux.scala 68:16]
    node _T_430 = eq(UInt<3>("h01"), io.read.op) @[Mux.scala 68:19]
    node readValid = mux(_T_430, readable, _T_429) @[Mux.scala 68:16]
    node _T_431 = bits(io.read.addr, 9, 8) @[CsrFile.scala 142:31]
    node modeValid = leq(_T_431, mode) @[CsrFile.scala 142:38]
    node valid = and(readValid, modeValid) @[CsrFile.scala 143:29]
    node _T_432 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_433 = eq(UInt<12>("h0c00"), _T_432) @[Lookup.scala 31:38]
    node _T_434 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_435 = eq(UInt<12>("h0c02"), _T_434) @[Lookup.scala 31:38]
    node _T_436 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_437 = eq(UInt<12>("h0c80"), _T_436) @[Lookup.scala 31:38]
    node _T_438 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_439 = eq(UInt<12>("h0c82"), _T_438) @[Lookup.scala 31:38]
    node _T_440 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_441 = eq(UInt<9>("h0100"), _T_440) @[Lookup.scala 31:38]
    node _T_442 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_443 = eq(UInt<9>("h0104"), _T_442) @[Lookup.scala 31:38]
    node _T_444 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_445 = eq(UInt<9>("h0105"), _T_444) @[Lookup.scala 31:38]
    node _T_446 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_447 = eq(UInt<9>("h0106"), _T_446) @[Lookup.scala 31:38]
    node _T_448 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_449 = eq(UInt<9>("h0140"), _T_448) @[Lookup.scala 31:38]
    node _T_450 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_451 = eq(UInt<9>("h0141"), _T_450) @[Lookup.scala 31:38]
    node _T_452 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_453 = eq(UInt<9>("h0142"), _T_452) @[Lookup.scala 31:38]
    node _T_454 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_455 = eq(UInt<9>("h0143"), _T_454) @[Lookup.scala 31:38]
    node _T_456 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_457 = eq(UInt<9>("h0144"), _T_456) @[Lookup.scala 31:38]
    node _T_458 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_459 = eq(UInt<9>("h0180"), _T_458) @[Lookup.scala 31:38]
    node _T_460 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_461 = eq(UInt<12>("h0f11"), _T_460) @[Lookup.scala 31:38]
    node _T_462 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_463 = eq(UInt<12>("h0f12"), _T_462) @[Lookup.scala 31:38]
    node _T_464 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_465 = eq(UInt<12>("h0f13"), _T_464) @[Lookup.scala 31:38]
    node _T_466 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_467 = eq(UInt<12>("h0f14"), _T_466) @[Lookup.scala 31:38]
    node _T_468 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_469 = eq(UInt<10>("h0300"), _T_468) @[Lookup.scala 31:38]
    node _T_470 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_471 = eq(UInt<10>("h0301"), _T_470) @[Lookup.scala 31:38]
    node _T_472 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_473 = eq(UInt<10>("h0302"), _T_472) @[Lookup.scala 31:38]
    node _T_474 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_475 = eq(UInt<10>("h0303"), _T_474) @[Lookup.scala 31:38]
    node _T_476 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_477 = eq(UInt<10>("h0304"), _T_476) @[Lookup.scala 31:38]
    node _T_478 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_479 = eq(UInt<10>("h0305"), _T_478) @[Lookup.scala 31:38]
    node _T_480 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_481 = eq(UInt<10>("h0306"), _T_480) @[Lookup.scala 31:38]
    node _T_482 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_483 = eq(UInt<10>("h0340"), _T_482) @[Lookup.scala 31:38]
    node _T_484 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_485 = eq(UInt<10>("h0341"), _T_484) @[Lookup.scala 31:38]
    node _T_486 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_487 = eq(UInt<10>("h0342"), _T_486) @[Lookup.scala 31:38]
    node _T_488 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_489 = eq(UInt<10>("h0343"), _T_488) @[Lookup.scala 31:38]
    node _T_490 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_491 = eq(UInt<10>("h0344"), _T_490) @[Lookup.scala 31:38]
    node _T_492 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_493 = eq(UInt<10>("h03a0"), _T_492) @[Lookup.scala 31:38]
    node _T_494 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_495 = eq(UInt<10>("h03a1"), _T_494) @[Lookup.scala 31:38]
    node _T_496 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_497 = eq(UInt<10>("h03a2"), _T_496) @[Lookup.scala 31:38]
    node _T_498 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_499 = eq(UInt<10>("h03a3"), _T_498) @[Lookup.scala 31:38]
    node _T_500 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_501 = eq(UInt<10>("h03b0"), _T_500) @[Lookup.scala 31:38]
    node _T_502 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_503 = eq(UInt<10>("h03b1"), _T_502) @[Lookup.scala 31:38]
    node _T_504 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_505 = eq(UInt<10>("h03b2"), _T_504) @[Lookup.scala 31:38]
    node _T_506 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_507 = eq(UInt<10>("h03b3"), _T_506) @[Lookup.scala 31:38]
    node _T_508 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_509 = eq(UInt<10>("h03b4"), _T_508) @[Lookup.scala 31:38]
    node _T_510 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_511 = eq(UInt<10>("h03b5"), _T_510) @[Lookup.scala 31:38]
    node _T_512 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_513 = eq(UInt<10>("h03b6"), _T_512) @[Lookup.scala 31:38]
    node _T_514 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_515 = eq(UInt<10>("h03b7"), _T_514) @[Lookup.scala 31:38]
    node _T_516 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_517 = eq(UInt<10>("h03b8"), _T_516) @[Lookup.scala 31:38]
    node _T_518 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_519 = eq(UInt<10>("h03b9"), _T_518) @[Lookup.scala 31:38]
    node _T_520 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_521 = eq(UInt<10>("h03ba"), _T_520) @[Lookup.scala 31:38]
    node _T_522 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_523 = eq(UInt<10>("h03bb"), _T_522) @[Lookup.scala 31:38]
    node _T_524 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_525 = eq(UInt<10>("h03bc"), _T_524) @[Lookup.scala 31:38]
    node _T_526 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_527 = eq(UInt<10>("h03bd"), _T_526) @[Lookup.scala 31:38]
    node _T_528 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_529 = eq(UInt<10>("h03be"), _T_528) @[Lookup.scala 31:38]
    node _T_530 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_531 = eq(UInt<10>("h03bf"), _T_530) @[Lookup.scala 31:38]
    node _T_532 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_533 = eq(UInt<12>("h0b00"), _T_532) @[Lookup.scala 31:38]
    node _T_534 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_535 = eq(UInt<12>("h0b02"), _T_534) @[Lookup.scala 31:38]
    node _T_536 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_537 = eq(UInt<12>("h0b80"), _T_536) @[Lookup.scala 31:38]
    node _T_538 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_539 = eq(UInt<12>("h0b82"), _T_538) @[Lookup.scala 31:38]
    node _T_540 = and(io.write.addr, UInt<12>("h0fff")) @[Lookup.scala 31:38]
    node _T_541 = eq(UInt<10>("h0320"), _T_540) @[Lookup.scala 31:38]
    node _T_542 = mux(_T_541, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_543 = mux(_T_539, _T_146, _T_542) @[Lookup.scala 33:37]
    node _T_544 = mux(_T_537, _T_145, _T_543) @[Lookup.scala 33:37]
    node _T_545 = mux(_T_535, _T_144, _T_544) @[Lookup.scala 33:37]
    node _T_546 = mux(_T_533, _T_143, _T_545) @[Lookup.scala 33:37]
    node _T_547 = mux(_T_531, UInt<1>("h00"), _T_546) @[Lookup.scala 33:37]
    node _T_548 = mux(_T_529, UInt<1>("h00"), _T_547) @[Lookup.scala 33:37]
    node _T_549 = mux(_T_527, UInt<1>("h00"), _T_548) @[Lookup.scala 33:37]
    node _T_550 = mux(_T_525, UInt<1>("h00"), _T_549) @[Lookup.scala 33:37]
    node _T_551 = mux(_T_523, UInt<1>("h00"), _T_550) @[Lookup.scala 33:37]
    node _T_552 = mux(_T_521, UInt<1>("h00"), _T_551) @[Lookup.scala 33:37]
    node _T_553 = mux(_T_519, UInt<1>("h00"), _T_552) @[Lookup.scala 33:37]
    node _T_554 = mux(_T_517, UInt<1>("h00"), _T_553) @[Lookup.scala 33:37]
    node _T_555 = mux(_T_515, UInt<1>("h00"), _T_554) @[Lookup.scala 33:37]
    node _T_556 = mux(_T_513, UInt<1>("h00"), _T_555) @[Lookup.scala 33:37]
    node _T_557 = mux(_T_511, UInt<1>("h00"), _T_556) @[Lookup.scala 33:37]
    node _T_558 = mux(_T_509, UInt<1>("h00"), _T_557) @[Lookup.scala 33:37]
    node _T_559 = mux(_T_507, UInt<1>("h00"), _T_558) @[Lookup.scala 33:37]
    node _T_560 = mux(_T_505, UInt<1>("h00"), _T_559) @[Lookup.scala 33:37]
    node _T_561 = mux(_T_503, UInt<1>("h00"), _T_560) @[Lookup.scala 33:37]
    node _T_562 = mux(_T_501, UInt<1>("h00"), _T_561) @[Lookup.scala 33:37]
    node _T_563 = mux(_T_499, UInt<1>("h00"), _T_562) @[Lookup.scala 33:37]
    node _T_564 = mux(_T_497, UInt<1>("h00"), _T_563) @[Lookup.scala 33:37]
    node _T_565 = mux(_T_495, UInt<1>("h00"), _T_564) @[Lookup.scala 33:37]
    node _T_566 = mux(_T_493, UInt<1>("h00"), _T_565) @[Lookup.scala 33:37]
    node _T_567 = mux(_T_491, _T_142, _T_566) @[Lookup.scala 33:37]
    node _T_568 = mux(_T_489, mtval.data, _T_567) @[Lookup.scala 33:37]
    node _T_569 = mux(_T_487, _T_130, _T_568) @[Lookup.scala 33:37]
    node _T_570 = mux(_T_485, mepc.data, _T_569) @[Lookup.scala 33:37]
    node _T_571 = mux(_T_483, mscratch.data, _T_570) @[Lookup.scala 33:37]
    node _T_572 = mux(_T_481, UInt<1>("h00"), _T_571) @[Lookup.scala 33:37]
    node _T_573 = mux(_T_479, _T_129, _T_572) @[Lookup.scala 33:37]
    node _T_574 = mux(_T_477, _T_128, _T_573) @[Lookup.scala 33:37]
    node _T_575 = mux(_T_475, mideleg.data, _T_574) @[Lookup.scala 33:37]
    node _T_576 = mux(_T_473, medeleg.data, _T_575) @[Lookup.scala 33:37]
    node _T_577 = mux(_T_471, _T_116, _T_576) @[Lookup.scala 33:37]
    node _T_578 = mux(_T_469, _T_114, _T_577) @[Lookup.scala 33:37]
    node _T_579 = mux(_T_467, UInt<1>("h00"), _T_578) @[Lookup.scala 33:37]
    node _T_580 = mux(_T_465, UInt<1>("h00"), _T_579) @[Lookup.scala 33:37]
    node _T_581 = mux(_T_463, UInt<1>("h00"), _T_580) @[Lookup.scala 33:37]
    node _T_582 = mux(_T_461, UInt<1>("h00"), _T_581) @[Lookup.scala 33:37]
    node _T_583 = mux(_T_459, _T_94, _T_582) @[Lookup.scala 33:37]
    node _T_584 = mux(_T_457, _T_92, _T_583) @[Lookup.scala 33:37]
    node _T_585 = mux(_T_455, stval.data, _T_584) @[Lookup.scala 33:37]
    node _T_586 = mux(_T_453, _T_84, _T_585) @[Lookup.scala 33:37]
    node _T_587 = mux(_T_451, sepc.data, _T_586) @[Lookup.scala 33:37]
    node _T_588 = mux(_T_449, sscratch.data, _T_587) @[Lookup.scala 33:37]
    node _T_589 = mux(_T_447, UInt<1>("h00"), _T_588) @[Lookup.scala 33:37]
    node _T_590 = mux(_T_445, _T_83, _T_589) @[Lookup.scala 33:37]
    node _T_591 = mux(_T_443, _T_82, _T_590) @[Lookup.scala 33:37]
    node _T_592 = mux(_T_441, _T_74, _T_591) @[Lookup.scala 33:37]
    node _T_593 = mux(_T_439, _T_60, _T_592) @[Lookup.scala 33:37]
    node _T_594 = mux(_T_437, _T_59, _T_593) @[Lookup.scala 33:37]
    node _T_595 = mux(_T_435, _T_58, _T_594) @[Lookup.scala 33:37]
    node csrData = mux(_T_433, _T_57, _T_595) @[Lookup.scala 33:37]
    node _T_596 = mux(_T_541, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_597 = mux(_T_539, UInt<1>("h01"), _T_596) @[Lookup.scala 33:37]
    node _T_598 = mux(_T_537, UInt<1>("h01"), _T_597) @[Lookup.scala 33:37]
    node _T_599 = mux(_T_535, UInt<1>("h01"), _T_598) @[Lookup.scala 33:37]
    node _T_600 = mux(_T_533, UInt<1>("h01"), _T_599) @[Lookup.scala 33:37]
    node _T_601 = mux(_T_531, UInt<1>("h01"), _T_600) @[Lookup.scala 33:37]
    node _T_602 = mux(_T_529, UInt<1>("h01"), _T_601) @[Lookup.scala 33:37]
    node _T_603 = mux(_T_527, UInt<1>("h01"), _T_602) @[Lookup.scala 33:37]
    node _T_604 = mux(_T_525, UInt<1>("h01"), _T_603) @[Lookup.scala 33:37]
    node _T_605 = mux(_T_523, UInt<1>("h01"), _T_604) @[Lookup.scala 33:37]
    node _T_606 = mux(_T_521, UInt<1>("h01"), _T_605) @[Lookup.scala 33:37]
    node _T_607 = mux(_T_519, UInt<1>("h01"), _T_606) @[Lookup.scala 33:37]
    node _T_608 = mux(_T_517, UInt<1>("h01"), _T_607) @[Lookup.scala 33:37]
    node _T_609 = mux(_T_515, UInt<1>("h01"), _T_608) @[Lookup.scala 33:37]
    node _T_610 = mux(_T_513, UInt<1>("h01"), _T_609) @[Lookup.scala 33:37]
    node _T_611 = mux(_T_511, UInt<1>("h01"), _T_610) @[Lookup.scala 33:37]
    node _T_612 = mux(_T_509, UInt<1>("h01"), _T_611) @[Lookup.scala 33:37]
    node _T_613 = mux(_T_507, UInt<1>("h01"), _T_612) @[Lookup.scala 33:37]
    node _T_614 = mux(_T_505, UInt<1>("h01"), _T_613) @[Lookup.scala 33:37]
    node _T_615 = mux(_T_503, UInt<1>("h01"), _T_614) @[Lookup.scala 33:37]
    node _T_616 = mux(_T_501, UInt<1>("h01"), _T_615) @[Lookup.scala 33:37]
    node _T_617 = mux(_T_499, UInt<1>("h01"), _T_616) @[Lookup.scala 33:37]
    node _T_618 = mux(_T_497, UInt<1>("h01"), _T_617) @[Lookup.scala 33:37]
    node _T_619 = mux(_T_495, UInt<1>("h01"), _T_618) @[Lookup.scala 33:37]
    node _T_620 = mux(_T_493, UInt<1>("h01"), _T_619) @[Lookup.scala 33:37]
    node _T_621 = mux(_T_491, UInt<1>("h01"), _T_620) @[Lookup.scala 33:37]
    node _T_622 = mux(_T_489, UInt<1>("h01"), _T_621) @[Lookup.scala 33:37]
    node _T_623 = mux(_T_487, UInt<1>("h01"), _T_622) @[Lookup.scala 33:37]
    node _T_624 = mux(_T_485, UInt<1>("h01"), _T_623) @[Lookup.scala 33:37]
    node _T_625 = mux(_T_483, UInt<1>("h01"), _T_624) @[Lookup.scala 33:37]
    node _T_626 = mux(_T_481, UInt<1>("h01"), _T_625) @[Lookup.scala 33:37]
    node _T_627 = mux(_T_479, UInt<1>("h01"), _T_626) @[Lookup.scala 33:37]
    node _T_628 = mux(_T_477, UInt<1>("h01"), _T_627) @[Lookup.scala 33:37]
    node _T_629 = mux(_T_475, UInt<1>("h01"), _T_628) @[Lookup.scala 33:37]
    node _T_630 = mux(_T_473, UInt<1>("h01"), _T_629) @[Lookup.scala 33:37]
    node _T_631 = mux(_T_471, UInt<1>("h01"), _T_630) @[Lookup.scala 33:37]
    node _T_632 = mux(_T_469, UInt<1>("h01"), _T_631) @[Lookup.scala 33:37]
    node _T_633 = mux(_T_467, UInt<1>("h01"), _T_632) @[Lookup.scala 33:37]
    node _T_634 = mux(_T_465, UInt<1>("h01"), _T_633) @[Lookup.scala 33:37]
    node _T_635 = mux(_T_463, UInt<1>("h01"), _T_634) @[Lookup.scala 33:37]
    node _T_636 = mux(_T_461, UInt<1>("h01"), _T_635) @[Lookup.scala 33:37]
    node _T_637 = mux(_T_459, UInt<1>("h01"), _T_636) @[Lookup.scala 33:37]
    node _T_638 = mux(_T_457, UInt<1>("h01"), _T_637) @[Lookup.scala 33:37]
    node _T_639 = mux(_T_455, UInt<1>("h01"), _T_638) @[Lookup.scala 33:37]
    node _T_640 = mux(_T_453, UInt<1>("h01"), _T_639) @[Lookup.scala 33:37]
    node _T_641 = mux(_T_451, UInt<1>("h01"), _T_640) @[Lookup.scala 33:37]
    node _T_642 = mux(_T_449, UInt<1>("h01"), _T_641) @[Lookup.scala 33:37]
    node _T_643 = mux(_T_447, UInt<1>("h01"), _T_642) @[Lookup.scala 33:37]
    node _T_644 = mux(_T_445, UInt<1>("h01"), _T_643) @[Lookup.scala 33:37]
    node _T_645 = mux(_T_443, UInt<1>("h01"), _T_644) @[Lookup.scala 33:37]
    node _T_646 = mux(_T_441, UInt<1>("h01"), _T_645) @[Lookup.scala 33:37]
    node _T_647 = mux(_T_439, UInt<1>("h01"), _T_646) @[Lookup.scala 33:37]
    node _T_648 = mux(_T_437, UInt<1>("h01"), _T_647) @[Lookup.scala 33:37]
    node _T_649 = mux(_T_435, UInt<1>("h01"), _T_648) @[Lookup.scala 33:37]
    node _T_650 = mux(_T_433, UInt<1>("h01"), _T_649) @[Lookup.scala 33:37]
    node _T_651 = mux(_T_541, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_652 = mux(_T_539, UInt<1>("h01"), _T_651) @[Lookup.scala 33:37]
    node _T_653 = mux(_T_537, UInt<1>("h01"), _T_652) @[Lookup.scala 33:37]
    node _T_654 = mux(_T_535, UInt<1>("h01"), _T_653) @[Lookup.scala 33:37]
    node _T_655 = mux(_T_533, UInt<1>("h01"), _T_654) @[Lookup.scala 33:37]
    node _T_656 = mux(_T_531, UInt<1>("h01"), _T_655) @[Lookup.scala 33:37]
    node _T_657 = mux(_T_529, UInt<1>("h01"), _T_656) @[Lookup.scala 33:37]
    node _T_658 = mux(_T_527, UInt<1>("h01"), _T_657) @[Lookup.scala 33:37]
    node _T_659 = mux(_T_525, UInt<1>("h01"), _T_658) @[Lookup.scala 33:37]
    node _T_660 = mux(_T_523, UInt<1>("h01"), _T_659) @[Lookup.scala 33:37]
    node _T_661 = mux(_T_521, UInt<1>("h01"), _T_660) @[Lookup.scala 33:37]
    node _T_662 = mux(_T_519, UInt<1>("h01"), _T_661) @[Lookup.scala 33:37]
    node _T_663 = mux(_T_517, UInt<1>("h01"), _T_662) @[Lookup.scala 33:37]
    node _T_664 = mux(_T_515, UInt<1>("h01"), _T_663) @[Lookup.scala 33:37]
    node _T_665 = mux(_T_513, UInt<1>("h01"), _T_664) @[Lookup.scala 33:37]
    node _T_666 = mux(_T_511, UInt<1>("h01"), _T_665) @[Lookup.scala 33:37]
    node _T_667 = mux(_T_509, UInt<1>("h01"), _T_666) @[Lookup.scala 33:37]
    node _T_668 = mux(_T_507, UInt<1>("h01"), _T_667) @[Lookup.scala 33:37]
    node _T_669 = mux(_T_505, UInt<1>("h01"), _T_668) @[Lookup.scala 33:37]
    node _T_670 = mux(_T_503, UInt<1>("h01"), _T_669) @[Lookup.scala 33:37]
    node _T_671 = mux(_T_501, UInt<1>("h01"), _T_670) @[Lookup.scala 33:37]
    node _T_672 = mux(_T_499, UInt<1>("h01"), _T_671) @[Lookup.scala 33:37]
    node _T_673 = mux(_T_497, UInt<1>("h01"), _T_672) @[Lookup.scala 33:37]
    node _T_674 = mux(_T_495, UInt<1>("h01"), _T_673) @[Lookup.scala 33:37]
    node _T_675 = mux(_T_493, UInt<1>("h01"), _T_674) @[Lookup.scala 33:37]
    node _T_676 = mux(_T_491, UInt<1>("h01"), _T_675) @[Lookup.scala 33:37]
    node _T_677 = mux(_T_489, UInt<1>("h01"), _T_676) @[Lookup.scala 33:37]
    node _T_678 = mux(_T_487, UInt<1>("h01"), _T_677) @[Lookup.scala 33:37]
    node _T_679 = mux(_T_485, UInt<1>("h01"), _T_678) @[Lookup.scala 33:37]
    node _T_680 = mux(_T_483, UInt<1>("h01"), _T_679) @[Lookup.scala 33:37]
    node _T_681 = mux(_T_481, UInt<1>("h01"), _T_680) @[Lookup.scala 33:37]
    node _T_682 = mux(_T_479, UInt<1>("h01"), _T_681) @[Lookup.scala 33:37]
    node _T_683 = mux(_T_477, UInt<1>("h01"), _T_682) @[Lookup.scala 33:37]
    node _T_684 = mux(_T_475, UInt<1>("h01"), _T_683) @[Lookup.scala 33:37]
    node _T_685 = mux(_T_473, UInt<1>("h01"), _T_684) @[Lookup.scala 33:37]
    node _T_686 = mux(_T_471, UInt<1>("h01"), _T_685) @[Lookup.scala 33:37]
    node _T_687 = mux(_T_469, UInt<1>("h01"), _T_686) @[Lookup.scala 33:37]
    node _T_688 = mux(_T_467, UInt<1>("h00"), _T_687) @[Lookup.scala 33:37]
    node _T_689 = mux(_T_465, UInt<1>("h00"), _T_688) @[Lookup.scala 33:37]
    node _T_690 = mux(_T_463, UInt<1>("h00"), _T_689) @[Lookup.scala 33:37]
    node _T_691 = mux(_T_461, UInt<1>("h00"), _T_690) @[Lookup.scala 33:37]
    node _T_692 = mux(_T_459, UInt<1>("h01"), _T_691) @[Lookup.scala 33:37]
    node _T_693 = mux(_T_457, UInt<1>("h01"), _T_692) @[Lookup.scala 33:37]
    node _T_694 = mux(_T_455, UInt<1>("h01"), _T_693) @[Lookup.scala 33:37]
    node _T_695 = mux(_T_453, UInt<1>("h01"), _T_694) @[Lookup.scala 33:37]
    node _T_696 = mux(_T_451, UInt<1>("h01"), _T_695) @[Lookup.scala 33:37]
    node _T_697 = mux(_T_449, UInt<1>("h01"), _T_696) @[Lookup.scala 33:37]
    node _T_698 = mux(_T_447, UInt<1>("h01"), _T_697) @[Lookup.scala 33:37]
    node _T_699 = mux(_T_445, UInt<1>("h01"), _T_698) @[Lookup.scala 33:37]
    node _T_700 = mux(_T_443, UInt<1>("h01"), _T_699) @[Lookup.scala 33:37]
    node _T_701 = mux(_T_441, UInt<1>("h01"), _T_700) @[Lookup.scala 33:37]
    node _T_702 = mux(_T_439, UInt<1>("h00"), _T_701) @[Lookup.scala 33:37]
    node _T_703 = mux(_T_437, UInt<1>("h00"), _T_702) @[Lookup.scala 33:37]
    node _T_704 = mux(_T_435, UInt<1>("h00"), _T_703) @[Lookup.scala 33:37]
    node _T_705 = mux(_T_433, UInt<1>("h00"), _T_704) @[Lookup.scala 33:37]
    node _T_706 = neq(io.write.op, UInt<3>("h00")) @[CsrFile.scala 148:31]
    node _T_707 = neq(io.write.op, UInt<3>("h01")) @[CsrFile.scala 148:58]
    node writeEn = and(_T_706, _T_707) @[CsrFile.scala 148:43]
    node _T_708 = or(csrData, io.write.data) @[CsrFile.scala 152:25]
    node _T_709 = not(io.write.data) @[CsrFile.scala 153:27]
    node _T_710 = and(csrData, _T_709) @[CsrFile.scala 153:25]
    node _T_711 = eq(UInt<3>("h05"), io.write.op) @[Mux.scala 68:19]
    node _T_712 = mux(_T_711, _T_710, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_713 = eq(UInt<3>("h04"), io.write.op) @[Mux.scala 68:19]
    node _T_714 = mux(_T_713, _T_708, _T_712) @[Mux.scala 68:16]
    node _T_715 = eq(UInt<3>("h03"), io.write.op) @[Mux.scala 68:19]
    node _T_716 = mux(_T_715, io.write.data, _T_714) @[Mux.scala 68:16]
    node _T_717 = eq(UInt<3>("h02"), io.write.op) @[Mux.scala 68:19]
    node writeData = mux(_T_717, io.write.data, _T_716) @[Mux.scala 68:16]
    node _T_718 = cat(sip.ssip, sip.usip) @[CsrFile.scala 157:23]
    node _T_719 = cat(sip.utip, sip.wpri2) @[CsrFile.scala 157:23]
    node _T_720 = cat(_T_719, _T_718) @[CsrFile.scala 157:23]
    node _T_721 = cat(sip.wpri1, sip.stip) @[CsrFile.scala 157:23]
    node _T_722 = cat(sip.wpri0, sip.seip) @[CsrFile.scala 157:23]
    node _T_723 = cat(_T_722, sip.ueip) @[CsrFile.scala 157:23]
    node _T_724 = cat(_T_723, _T_721) @[CsrFile.scala 157:23]
    node _T_725 = cat(_T_724, _T_720) @[CsrFile.scala 157:23]
    node _T_726 = cat(sie.ssie, sie.usie) @[CsrFile.scala 157:36]
    node _T_727 = cat(sie.utie, sie.wpri2) @[CsrFile.scala 157:36]
    node _T_728 = cat(_T_727, _T_726) @[CsrFile.scala 157:36]
    node _T_729 = cat(sie.wpri1, sie.stie) @[CsrFile.scala 157:36]
    node _T_730 = cat(sie.wpri0, sie.seie) @[CsrFile.scala 157:36]
    node _T_731 = cat(_T_730, sie.ueie) @[CsrFile.scala 157:36]
    node _T_732 = cat(_T_731, _T_729) @[CsrFile.scala 157:36]
    node _T_733 = cat(_T_732, _T_728) @[CsrFile.scala 157:36]
    node flagIntS = and(_T_725, _T_733) @[CsrFile.scala 157:30]
    node _T_734 = cat(mip.wpri3, mip.ssip) @[CsrFile.scala 158:23]
    node _T_735 = cat(_T_734, mip.usip) @[CsrFile.scala 158:23]
    node _T_736 = cat(mip.stip, mip.utip) @[CsrFile.scala 158:23]
    node _T_737 = cat(_T_736, mip.msip) @[CsrFile.scala 158:23]
    node _T_738 = cat(_T_737, _T_735) @[CsrFile.scala 158:23]
    node _T_739 = cat(mip.ueip, mip.mtip) @[CsrFile.scala 158:23]
    node _T_740 = cat(_T_739, mip.wpri2) @[CsrFile.scala 158:23]
    node _T_741 = cat(mip.wpri1, mip.seip) @[CsrFile.scala 158:23]
    node _T_742 = cat(mip.wpri0, mip.meip) @[CsrFile.scala 158:23]
    node _T_743 = cat(_T_742, _T_741) @[CsrFile.scala 158:23]
    node _T_744 = cat(_T_743, _T_740) @[CsrFile.scala 158:23]
    node _T_745 = cat(_T_744, _T_738) @[CsrFile.scala 158:23]
    node _T_746 = cat(mie.wpri3, mie.ssie) @[CsrFile.scala 158:36]
    node _T_747 = cat(_T_746, mie.usie) @[CsrFile.scala 158:36]
    node _T_748 = cat(mie.stie, mie.utie) @[CsrFile.scala 158:36]
    node _T_749 = cat(_T_748, mie.msie) @[CsrFile.scala 158:36]
    node _T_750 = cat(_T_749, _T_747) @[CsrFile.scala 158:36]
    node _T_751 = cat(mie.ueie, mie.mtie) @[CsrFile.scala 158:36]
    node _T_752 = cat(_T_751, mie.wpri2) @[CsrFile.scala 158:36]
    node _T_753 = cat(mie.wpri1, mie.seie) @[CsrFile.scala 158:36]
    node _T_754 = cat(mie.wpri0, mie.meie) @[CsrFile.scala 158:36]
    node _T_755 = cat(_T_754, _T_753) @[CsrFile.scala 158:36]
    node _T_756 = cat(_T_755, _T_752) @[CsrFile.scala 158:36]
    node _T_757 = cat(_T_756, _T_750) @[CsrFile.scala 158:36]
    node flagIntM = and(_T_745, _T_757) @[CsrFile.scala 158:30]
    node _T_758 = lt(mode, UInt<2>("h01")) @[CsrFile.scala 159:28]
    node _T_759 = eq(mode, UInt<2>("h01")) @[CsrFile.scala 160:33]
    node _T_760 = and(_T_759, mstatus.sie) @[CsrFile.scala 160:48]
    node _T_761 = or(_T_758, _T_760) @[CsrFile.scala 159:41]
    node _T_762 = and(flagIntS, mideleg.data) @[CsrFile.scala 161:33]
    node _T_763 = neq(_T_762, UInt<1>("h00")) @[CsrFile.scala 161:51]
    node hasIntS = mux(_T_761, _T_763, UInt<1>("h00")) @[CsrFile.scala 159:22]
    node _T_764 = leq(mode, UInt<2>("h01")) @[CsrFile.scala 162:28]
    node _T_765 = or(_T_764, mstatus.mie) @[CsrFile.scala 162:42]
    node _T_766 = not(mideleg.data) @[CsrFile.scala 163:35]
    node _T_767 = and(flagIntM, _T_766) @[CsrFile.scala 163:33]
    node _T_768 = neq(_T_767, UInt<1>("h00")) @[CsrFile.scala 163:52]
    node hasIntM = mux(_T_765, _T_768, UInt<1>("h00")) @[CsrFile.scala 162:22]
    node hasInt = or(hasIntM, hasIntS) @[CsrFile.scala 164:27]
    node _T_769 = eq(hasIntM, UInt<1>("h00")) @[CsrFile.scala 165:29]
    node handIntS = and(hasInt, _T_769) @[CsrFile.scala 165:26]
    node _T_770 = eq(hasInt, UInt<1>("h00")) @[CsrFile.scala 166:40]
    node hasExc = and(io.except.hasTrap, _T_770) @[CsrFile.scala 166:37]
    node _T_771 = bits(io.except.excCause, 4, 0) @[CsrFile.scala 167:64]
    node _T_772 = dshr(medeleg.data, _T_771) @[CsrFile.scala 167:45]
    node _T_773 = bits(_T_772, 0, 0) @[CsrFile.scala 167:45]
    node hasExcS = and(hasExc, _T_773) @[CsrFile.scala 167:26]
    node _T_774 = bits(mode, 1, 1) @[CsrFile.scala 168:24]
    node _T_775 = eq(_T_774, UInt<1>("h00")) @[CsrFile.scala 168:19]
    node handExcS = and(_T_775, hasExcS) @[CsrFile.scala 168:28]
    node _T_776 = dshr(flagIntS, UInt<31>("h09")) @[CsrFile.scala 169:31]
    node _T_777 = bits(_T_776, 0, 0) @[CsrFile.scala 169:31]
    node _T_778 = dshr(flagIntS, UInt<31>("h01")) @[CsrFile.scala 170:31]
    node _T_779 = bits(_T_778, 0, 0) @[CsrFile.scala 170:31]
    node _T_780 = mux(_T_779, UInt<31>("h01"), UInt<31>("h05")) @[CsrFile.scala 170:22]
    node intCauseS = mux(_T_777, UInt<31>("h09"), _T_780) @[CsrFile.scala 169:22]
    node _T_781 = dshr(flagIntM, UInt<31>("h0b")) @[CsrFile.scala 172:31]
    node _T_782 = bits(_T_781, 0, 0) @[CsrFile.scala 172:31]
    node _T_783 = dshr(flagIntM, UInt<31>("h03")) @[CsrFile.scala 173:31]
    node _T_784 = bits(_T_783, 0, 0) @[CsrFile.scala 173:31]
    node _T_785 = dshr(flagIntM, UInt<31>("h07")) @[CsrFile.scala 174:31]
    node _T_786 = bits(_T_785, 0, 0) @[CsrFile.scala 174:31]
    node _T_787 = mux(_T_786, UInt<31>("h07"), intCauseS) @[CsrFile.scala 174:22]
    node _T_788 = mux(_T_784, UInt<31>("h03"), _T_787) @[CsrFile.scala 173:22]
    node intCauseM = mux(_T_782, UInt<31>("h0b"), _T_788) @[CsrFile.scala 172:22]
    node intCause = mux(handIntS, intCauseS, intCauseM) @[CsrFile.scala 176:22]
    node _T_789 = cat(UInt<1>("h01"), intCause) @[Cat.scala 30:58]
    node _T_790 = cat(UInt<1>("h00"), io.except.excCause) @[Cat.scala 30:58]
    node cause = mux(hasInt, _T_789, _T_790) @[CsrFile.scala 177:22]
    node _T_791 = bits(stvec.mode, 0, 0) @[CsrFile.scala 179:33]
    node _T_792 = and(_T_791, hasInt) @[CsrFile.scala 179:37]
    node _T_793 = bits(cause, 29, 0) @[CsrFile.scala 179:67]
    node _T_794 = add(stvec.base, _T_793) @[CsrFile.scala 179:60]
    node _T_795 = tail(_T_794, 1) @[CsrFile.scala 179:60]
    node _T_796 = mux(_T_792, _T_795, stvec.base) @[CsrFile.scala 179:22]
    node trapVecS = shl(_T_796, 2) @[CsrFile.scala 180:35]
    node _T_797 = bits(mtvec.mode, 0, 0) @[CsrFile.scala 181:33]
    node _T_798 = and(_T_797, hasInt) @[CsrFile.scala 181:37]
    node _T_799 = bits(cause, 29, 0) @[CsrFile.scala 181:67]
    node _T_800 = add(mtvec.base, _T_799) @[CsrFile.scala 181:60]
    node _T_801 = tail(_T_800, 1) @[CsrFile.scala 181:60]
    node _T_802 = mux(_T_798, _T_801, mtvec.base) @[CsrFile.scala 181:22]
    node trapVecM = shl(_T_802, 2) @[CsrFile.scala 182:35]
    node _T_803 = or(handIntS, handExcS) @[CsrFile.scala 183:32]
    node trapVec = mux(_T_803, trapVecS, trapVecM) @[CsrFile.scala 183:22]
    node _T_804 = or(mipReal.meip, io.irq.extern) @[CsrFile.scala 186:28]
    mip.meip <= _T_804 @[CsrFile.scala 186:12]
    node _T_805 = or(mipReal.seip, io.irq.extern) @[CsrFile.scala 187:28]
    mip.seip <= _T_805 @[CsrFile.scala 187:12]
    node _T_806 = or(mipReal.mtip, io.irq.timer) @[CsrFile.scala 188:28]
    mip.mtip <= _T_806 @[CsrFile.scala 188:12]
    node _T_807 = or(mipReal.stip, io.irq.timer) @[CsrFile.scala 189:28]
    mip.stip <= _T_807 @[CsrFile.scala 189:12]
    node _T_808 = or(mipReal.msip, io.irq.soft) @[CsrFile.scala 190:28]
    mip.msip <= _T_808 @[CsrFile.scala 190:12]
    node _T_809 = or(mipReal.ssip, io.irq.soft) @[CsrFile.scala 191:28]
    mip.ssip <= _T_809 @[CsrFile.scala 191:12]
    sip.seip <= mip.seip @[CsrFile.scala 192:12]
    sip.stip <= mip.stip @[CsrFile.scala 193:12]
    sip.ssip <= mip.ssip @[CsrFile.scala 194:12]
    node intMode = mux(handIntS, UInt<2>("h01"), UInt<2>("h03")) @[CsrFile.scala 197:22]
    node sretMode = cat(UInt<1>("h00"), sstatus.spp) @[Cat.scala 30:58]
    node excMode = mux(handExcS, UInt<2>("h01"), UInt<2>("h03")) @[CsrFile.scala 200:22]
    node _T_810 = mux(io.except.isMret, mstatus.mpp, excMode) @[CsrFile.scala 203:22]
    node _T_811 = mux(io.except.isSret, sretMode, _T_810) @[CsrFile.scala 202:22]
    node trapMode = mux(hasInt, intMode, _T_811) @[CsrFile.scala 201:22]
    node _T_812 = eq(writeEn, UInt<1>("h00")) @[CsrFile.scala 204:44]
    node _T_813 = and(io.except.hasTrap, _T_812) @[CsrFile.scala 204:41]
    node nextMode = mux(_T_813, trapMode, mode) @[CsrFile.scala 204:22]
    mode <= nextMode @[CsrFile.scala 205:8]
    node _T_814 = add(mcycle.data, UInt<1>("h01")) @[CsrFile.scala 208:30]
    node _T_815 = tail(_T_814, 1) @[CsrFile.scala 208:30]
    mcycle.data <= _T_815 @[CsrFile.scala 208:15]
    when io.write.retired : @[CsrFile.scala 209:27]
      node _T_816 = add(minstret.data, UInt<1>("h01")) @[CsrFile.scala 210:36]
      node _T_817 = tail(_T_816, 1) @[CsrFile.scala 210:36]
      minstret.data <= _T_817 @[CsrFile.scala 210:19]
      skip @[CsrFile.scala 209:27]
    when writeEn : @[CsrFile.scala 214:18]
      node _T_818 = eq(io.write.addr, UInt<12>("h0100")) @[CsrFile.scala 218:25]
      when _T_818 : @[CsrFile.scala 218:42]
        wire _T_819 : {sd : UInt<1>, wpri0 : UInt<11>, mxr : UInt<1>, sum : UInt<1>, wpri1 : UInt<1>, xs : UInt<2>, fs : UInt<2>, wpri2 : UInt<4>, spp : UInt<1>, wpri3 : UInt<2>, spie : UInt<1>, upie : UInt<1>, wpri4 : UInt<2>, sie : UInt<1>, uie : UInt<1>} @[CSR.scala 19:24]
        node _T_820 = cat(mstatus.sie, mstatus.uie) @[CSR.scala 19:24]
        node _T_821 = cat(mstatus.upie, mstatus.mie) @[CSR.scala 19:24]
        node _T_822 = cat(_T_821, mstatus.wpri3) @[CSR.scala 19:24]
        node _T_823 = cat(_T_822, _T_820) @[CSR.scala 19:24]
        node _T_824 = cat(mstatus.wpri2, mstatus.spie) @[CSR.scala 19:24]
        node _T_825 = cat(mstatus.wpri1, mstatus.spp) @[CSR.scala 19:24]
        node _T_826 = cat(_T_825, mstatus.mpie) @[CSR.scala 19:24]
        node _T_827 = cat(_T_826, _T_824) @[CSR.scala 19:24]
        node _T_828 = cat(_T_827, _T_823) @[CSR.scala 19:24]
        node _T_829 = cat(mstatus.fs, mstatus.mpp) @[CSR.scala 19:24]
        node _T_830 = cat(mstatus.sum, mstatus.mprv) @[CSR.scala 19:24]
        node _T_831 = cat(_T_830, mstatus.xs) @[CSR.scala 19:24]
        node _T_832 = cat(_T_831, _T_829) @[CSR.scala 19:24]
        node _T_833 = cat(mstatus.tw, mstatus.tvm) @[CSR.scala 19:24]
        node _T_834 = cat(_T_833, mstatus.mxr) @[CSR.scala 19:24]
        node _T_835 = cat(mstatus.sd, mstatus.wpri0) @[CSR.scala 19:24]
        node _T_836 = cat(_T_835, mstatus.tsr) @[CSR.scala 19:24]
        node _T_837 = cat(_T_836, _T_834) @[CSR.scala 19:24]
        node _T_838 = cat(_T_837, _T_832) @[CSR.scala 19:24]
        node _T_839 = cat(_T_838, _T_828) @[CSR.scala 19:24]
        wire _T_840 : UInt<32>
        _T_840 <= _T_839
        node _T_841 = bits(_T_840, 0, 0) @[CSR.scala 19:24]
        _T_819.uie <= _T_841 @[CSR.scala 19:24]
        node _T_842 = bits(_T_840, 1, 1) @[CSR.scala 19:24]
        _T_819.sie <= _T_842 @[CSR.scala 19:24]
        node _T_843 = bits(_T_840, 3, 2) @[CSR.scala 19:24]
        _T_819.wpri4 <= _T_843 @[CSR.scala 19:24]
        node _T_844 = bits(_T_840, 4, 4) @[CSR.scala 19:24]
        _T_819.upie <= _T_844 @[CSR.scala 19:24]
        node _T_845 = bits(_T_840, 5, 5) @[CSR.scala 19:24]
        _T_819.spie <= _T_845 @[CSR.scala 19:24]
        node _T_846 = bits(_T_840, 7, 6) @[CSR.scala 19:24]
        _T_819.wpri3 <= _T_846 @[CSR.scala 19:24]
        node _T_847 = bits(_T_840, 8, 8) @[CSR.scala 19:24]
        _T_819.spp <= _T_847 @[CSR.scala 19:24]
        node _T_848 = bits(_T_840, 12, 9) @[CSR.scala 19:24]
        _T_819.wpri2 <= _T_848 @[CSR.scala 19:24]
        node _T_849 = bits(_T_840, 14, 13) @[CSR.scala 19:24]
        _T_819.fs <= _T_849 @[CSR.scala 19:24]
        node _T_850 = bits(_T_840, 16, 15) @[CSR.scala 19:24]
        _T_819.xs <= _T_850 @[CSR.scala 19:24]
        node _T_851 = bits(_T_840, 17, 17) @[CSR.scala 19:24]
        _T_819.wpri1 <= _T_851 @[CSR.scala 19:24]
        node _T_852 = bits(_T_840, 18, 18) @[CSR.scala 19:24]
        _T_819.sum <= _T_852 @[CSR.scala 19:24]
        node _T_853 = bits(_T_840, 19, 19) @[CSR.scala 19:24]
        _T_819.mxr <= _T_853 @[CSR.scala 19:24]
        node _T_854 = bits(_T_840, 30, 20) @[CSR.scala 19:24]
        _T_819.wpri0 <= _T_854 @[CSR.scala 19:24]
        node _T_855 = bits(_T_840, 31, 31) @[CSR.scala 19:24]
        _T_819.sd <= _T_855 @[CSR.scala 19:24]
        node _T_856 = bits(writeData, 18, 18) @[CSR.scala 56:18]
        _T_819.sum <= _T_856 @[CSR.scala 56:11]
        node _T_857 = bits(writeData, 8, 8) @[CSR.scala 57:18]
        _T_819.spp <= _T_857 @[CSR.scala 57:11]
        node _T_858 = bits(writeData, 5, 5) @[CSR.scala 58:18]
        _T_819.spie <= _T_858 @[CSR.scala 58:11]
        node _T_859 = bits(writeData, 1, 1) @[CSR.scala 59:18]
        _T_819.sie <= _T_859 @[CSR.scala 59:11]
        node _T_860 = cat(_T_819.wpri4, _T_819.sie) @[CSR.scala 21:18]
        node _T_861 = cat(_T_860, _T_819.uie) @[CSR.scala 21:18]
        node _T_862 = cat(_T_819.spie, _T_819.upie) @[CSR.scala 21:18]
        node _T_863 = cat(_T_819.spp, _T_819.wpri3) @[CSR.scala 21:18]
        node _T_864 = cat(_T_863, _T_862) @[CSR.scala 21:18]
        node _T_865 = cat(_T_864, _T_861) @[CSR.scala 21:18]
        node _T_866 = cat(_T_819.fs, _T_819.wpri2) @[CSR.scala 21:18]
        node _T_867 = cat(_T_819.wpri1, _T_819.xs) @[CSR.scala 21:18]
        node _T_868 = cat(_T_867, _T_866) @[CSR.scala 21:18]
        node _T_869 = cat(_T_819.mxr, _T_819.sum) @[CSR.scala 21:18]
        node _T_870 = cat(_T_819.sd, _T_819.wpri0) @[CSR.scala 21:18]
        node _T_871 = cat(_T_870, _T_869) @[CSR.scala 21:18]
        node _T_872 = cat(_T_871, _T_868) @[CSR.scala 21:18]
        node _T_873 = cat(_T_872, _T_865) @[CSR.scala 21:18]
        node _T_874 = bits(_T_873, 18, 18) @[CSR.scala 220:18]
        mstatus.sum <= _T_874 @[CSR.scala 220:11]
        node _T_875 = bits(_T_873, 12, 11) @[CSR.scala 221:18]
        mstatus.mpp <= _T_875 @[CSR.scala 221:11]
        node _T_876 = bits(_T_873, 8, 8) @[CSR.scala 222:18]
        mstatus.spp <= _T_876 @[CSR.scala 222:11]
        node _T_877 = bits(_T_873, 7, 7) @[CSR.scala 223:18]
        mstatus.mpie <= _T_877 @[CSR.scala 223:11]
        node _T_878 = bits(_T_873, 5, 5) @[CSR.scala 224:18]
        mstatus.spie <= _T_878 @[CSR.scala 224:11]
        node _T_879 = bits(_T_873, 3, 3) @[CSR.scala 225:18]
        mstatus.mie <= _T_879 @[CSR.scala 225:11]
        node _T_880 = bits(_T_873, 1, 1) @[CSR.scala 226:18]
        mstatus.sie <= _T_880 @[CSR.scala 226:11]
        skip @[CsrFile.scala 218:42]
      node _T_881 = eq(io.write.addr, UInt<12>("h0104")) @[CsrFile.scala 221:25]
      when _T_881 : @[CsrFile.scala 221:38]
        wire _T_882 : {wpri0 : UInt<22>, seie : UInt<1>, ueie : UInt<1>, wpri1 : UInt<2>, stie : UInt<1>, utie : UInt<1>, wpri2 : UInt<2>, ssie : UInt<1>, usie : UInt<1>} @[CSR.scala 19:24]
        node _T_883 = cat(mie.wpri3, mie.ssie) @[CSR.scala 19:24]
        node _T_884 = cat(_T_883, mie.usie) @[CSR.scala 19:24]
        node _T_885 = cat(mie.stie, mie.utie) @[CSR.scala 19:24]
        node _T_886 = cat(_T_885, mie.msie) @[CSR.scala 19:24]
        node _T_887 = cat(_T_886, _T_884) @[CSR.scala 19:24]
        node _T_888 = cat(mie.ueie, mie.mtie) @[CSR.scala 19:24]
        node _T_889 = cat(_T_888, mie.wpri2) @[CSR.scala 19:24]
        node _T_890 = cat(mie.wpri1, mie.seie) @[CSR.scala 19:24]
        node _T_891 = cat(mie.wpri0, mie.meie) @[CSR.scala 19:24]
        node _T_892 = cat(_T_891, _T_890) @[CSR.scala 19:24]
        node _T_893 = cat(_T_892, _T_889) @[CSR.scala 19:24]
        node _T_894 = cat(_T_893, _T_887) @[CSR.scala 19:24]
        wire _T_895 : UInt<32>
        _T_895 <= _T_894
        node _T_896 = bits(_T_895, 0, 0) @[CSR.scala 19:24]
        _T_882.usie <= _T_896 @[CSR.scala 19:24]
        node _T_897 = bits(_T_895, 1, 1) @[CSR.scala 19:24]
        _T_882.ssie <= _T_897 @[CSR.scala 19:24]
        node _T_898 = bits(_T_895, 3, 2) @[CSR.scala 19:24]
        _T_882.wpri2 <= _T_898 @[CSR.scala 19:24]
        node _T_899 = bits(_T_895, 4, 4) @[CSR.scala 19:24]
        _T_882.utie <= _T_899 @[CSR.scala 19:24]
        node _T_900 = bits(_T_895, 5, 5) @[CSR.scala 19:24]
        _T_882.stie <= _T_900 @[CSR.scala 19:24]
        node _T_901 = bits(_T_895, 7, 6) @[CSR.scala 19:24]
        _T_882.wpri1 <= _T_901 @[CSR.scala 19:24]
        node _T_902 = bits(_T_895, 8, 8) @[CSR.scala 19:24]
        _T_882.ueie <= _T_902 @[CSR.scala 19:24]
        node _T_903 = bits(_T_895, 9, 9) @[CSR.scala 19:24]
        _T_882.seie <= _T_903 @[CSR.scala 19:24]
        node _T_904 = bits(_T_895, 31, 10) @[CSR.scala 19:24]
        _T_882.wpri0 <= _T_904 @[CSR.scala 19:24]
        node _T_905 = bits(writeData, 9, 9) @[CSR.scala 81:18]
        _T_882.seie <= _T_905 @[CSR.scala 81:11]
        node _T_906 = bits(writeData, 5, 5) @[CSR.scala 82:18]
        _T_882.stie <= _T_906 @[CSR.scala 82:11]
        node _T_907 = bits(writeData, 1, 1) @[CSR.scala 83:18]
        _T_882.ssie <= _T_907 @[CSR.scala 83:11]
        node _T_908 = cat(_T_882.ssie, _T_882.usie) @[CSR.scala 21:18]
        node _T_909 = cat(_T_882.utie, _T_882.wpri2) @[CSR.scala 21:18]
        node _T_910 = cat(_T_909, _T_908) @[CSR.scala 21:18]
        node _T_911 = cat(_T_882.wpri1, _T_882.stie) @[CSR.scala 21:18]
        node _T_912 = cat(_T_882.wpri0, _T_882.seie) @[CSR.scala 21:18]
        node _T_913 = cat(_T_912, _T_882.ueie) @[CSR.scala 21:18]
        node _T_914 = cat(_T_913, _T_911) @[CSR.scala 21:18]
        node _T_915 = cat(_T_914, _T_910) @[CSR.scala 21:18]
        node _T_916 = bits(_T_915, 11, 11) @[CSR.scala 295:18]
        mie.meie <= _T_916 @[CSR.scala 295:11]
        node _T_917 = bits(_T_915, 9, 9) @[CSR.scala 296:18]
        mie.seie <= _T_917 @[CSR.scala 296:11]
        node _T_918 = bits(_T_915, 7, 7) @[CSR.scala 297:18]
        mie.mtie <= _T_918 @[CSR.scala 297:11]
        node _T_919 = bits(_T_915, 5, 5) @[CSR.scala 298:18]
        mie.stie <= _T_919 @[CSR.scala 298:11]
        node _T_920 = bits(_T_915, 3, 3) @[CSR.scala 299:18]
        mie.msie <= _T_920 @[CSR.scala 299:11]
        node _T_921 = bits(_T_915, 1, 1) @[CSR.scala 300:18]
        mie.ssie <= _T_921 @[CSR.scala 300:11]
        skip @[CsrFile.scala 221:38]
      node _T_922 = eq(io.write.addr, UInt<12>("h0144")) @[CsrFile.scala 224:25]
      when _T_922 : @[CsrFile.scala 224:38]
        wire _T_923 : {wpri0 : UInt<22>, seip : UInt<1>, ueip : UInt<1>, wpri1 : UInt<2>, stip : UInt<1>, utip : UInt<1>, wpri2 : UInt<2>, ssip : UInt<1>, usip : UInt<1>} @[CSR.scala 19:24]
        node _T_924 = cat(mipReal.wpri3, mipReal.ssip) @[CSR.scala 19:24]
        node _T_925 = cat(_T_924, mipReal.usip) @[CSR.scala 19:24]
        node _T_926 = cat(mipReal.stip, mipReal.utip) @[CSR.scala 19:24]
        node _T_927 = cat(_T_926, mipReal.msip) @[CSR.scala 19:24]
        node _T_928 = cat(_T_927, _T_925) @[CSR.scala 19:24]
        node _T_929 = cat(mipReal.ueip, mipReal.mtip) @[CSR.scala 19:24]
        node _T_930 = cat(_T_929, mipReal.wpri2) @[CSR.scala 19:24]
        node _T_931 = cat(mipReal.wpri1, mipReal.seip) @[CSR.scala 19:24]
        node _T_932 = cat(mipReal.wpri0, mipReal.meip) @[CSR.scala 19:24]
        node _T_933 = cat(_T_932, _T_931) @[CSR.scala 19:24]
        node _T_934 = cat(_T_933, _T_930) @[CSR.scala 19:24]
        node _T_935 = cat(_T_934, _T_928) @[CSR.scala 19:24]
        wire _T_936 : UInt<32>
        _T_936 <= _T_935
        node _T_937 = bits(_T_936, 0, 0) @[CSR.scala 19:24]
        _T_923.usip <= _T_937 @[CSR.scala 19:24]
        node _T_938 = bits(_T_936, 1, 1) @[CSR.scala 19:24]
        _T_923.ssip <= _T_938 @[CSR.scala 19:24]
        node _T_939 = bits(_T_936, 3, 2) @[CSR.scala 19:24]
        _T_923.wpri2 <= _T_939 @[CSR.scala 19:24]
        node _T_940 = bits(_T_936, 4, 4) @[CSR.scala 19:24]
        _T_923.utip <= _T_940 @[CSR.scala 19:24]
        node _T_941 = bits(_T_936, 5, 5) @[CSR.scala 19:24]
        _T_923.stip <= _T_941 @[CSR.scala 19:24]
        node _T_942 = bits(_T_936, 7, 6) @[CSR.scala 19:24]
        _T_923.wpri1 <= _T_942 @[CSR.scala 19:24]
        node _T_943 = bits(_T_936, 8, 8) @[CSR.scala 19:24]
        _T_923.ueip <= _T_943 @[CSR.scala 19:24]
        node _T_944 = bits(_T_936, 9, 9) @[CSR.scala 19:24]
        _T_923.seip <= _T_944 @[CSR.scala 19:24]
        node _T_945 = bits(_T_936, 31, 10) @[CSR.scala 19:24]
        _T_923.wpri0 <= _T_945 @[CSR.scala 19:24]
        node _T_946 = bits(writeData, 1, 1) @[CSR.scala 105:18]
        _T_923.ssip <= _T_946 @[CSR.scala 105:11]
        node _T_947 = cat(_T_923.ssip, _T_923.usip) @[CSR.scala 21:18]
        node _T_948 = cat(_T_923.utip, _T_923.wpri2) @[CSR.scala 21:18]
        node _T_949 = cat(_T_948, _T_947) @[CSR.scala 21:18]
        node _T_950 = cat(_T_923.wpri1, _T_923.stip) @[CSR.scala 21:18]
        node _T_951 = cat(_T_923.wpri0, _T_923.seip) @[CSR.scala 21:18]
        node _T_952 = cat(_T_951, _T_923.ueip) @[CSR.scala 21:18]
        node _T_953 = cat(_T_952, _T_950) @[CSR.scala 21:18]
        node _T_954 = cat(_T_953, _T_949) @[CSR.scala 21:18]
        node _T_955 = bits(_T_954, 9, 9) @[CSR.scala 326:18]
        mipReal.seip <= _T_955 @[CSR.scala 326:11]
        node _T_956 = bits(_T_954, 5, 5) @[CSR.scala 327:18]
        mipReal.stip <= _T_956 @[CSR.scala 327:11]
        node _T_957 = bits(_T_954, 1, 1) @[CSR.scala 328:18]
        mipReal.ssip <= _T_957 @[CSR.scala 328:11]
        skip @[CsrFile.scala 224:38]
      node _T_958 = eq(io.write.addr, UInt<12>("h0b00")) @[CsrFile.scala 227:25]
      when _T_958 : @[CsrFile.scala 227:41]
        node _T_959 = bits(mcycle.data, 63, 32) @[CsrFile.scala 228:37]
        node _T_960 = cat(_T_959, writeData) @[Cat.scala 30:58]
        mcycle.data <= _T_960 @[CsrFile.scala 228:19]
        skip @[CsrFile.scala 227:41]
      node _T_961 = eq(io.write.addr, UInt<12>("h0b02")) @[CsrFile.scala 230:25]
      when _T_961 : @[CsrFile.scala 230:43]
        node _T_962 = bits(minstret.data, 63, 32) @[CsrFile.scala 231:41]
        node _T_963 = cat(_T_962, writeData) @[Cat.scala 30:58]
        minstret.data <= _T_963 @[CsrFile.scala 231:21]
        skip @[CsrFile.scala 230:43]
      node _T_964 = eq(io.write.addr, UInt<12>("h0b80")) @[CsrFile.scala 233:25]
      when _T_964 : @[CsrFile.scala 233:42]
        node _T_965 = bits(mcycle.data, 31, 0) @[CsrFile.scala 234:48]
        node _T_966 = cat(writeData, _T_965) @[Cat.scala 30:58]
        mcycle.data <= _T_966 @[CsrFile.scala 234:19]
        skip @[CsrFile.scala 233:42]
      node _T_967 = eq(io.write.addr, UInt<12>("h0b82")) @[CsrFile.scala 236:25]
      when _T_967 : @[CsrFile.scala 236:44]
        node _T_968 = bits(minstret.data, 31, 0) @[CsrFile.scala 237:52]
        node _T_969 = cat(writeData, _T_968) @[Cat.scala 30:58]
        minstret.data <= _T_969 @[CsrFile.scala 237:21]
        skip @[CsrFile.scala 236:44]
      node _T_970 = eq(io.write.addr, UInt<12>("h0105")) @[CsrFile.scala 239:25]
      when _T_970 : @[CsrFile.scala 239:43]
        node _T_971 = bits(writeData, 31, 2) @[CSR.scala 120:18]
        stvec.base <= _T_971 @[CSR.scala 120:11]
        node _T_972 = bits(writeData, 0, 0) @[CSR.scala 121:18]
        stvec.mode <= _T_972 @[CSR.scala 121:11]
        skip @[CsrFile.scala 239:43]
      node _T_973 = eq(io.write.addr, UInt<12>("h0140")) @[CsrFile.scala 240:25]
      when _T_973 : @[CsrFile.scala 240:43]
        wire _T_974 : {data : UInt<32>} @[CSR.scala 15:26]
        wire _T_975 : UInt<32>
        _T_975 <= writeData
        node _T_976 = bits(_T_975, 31, 0) @[CSR.scala 15:26]
        _T_974.data <= _T_976 @[CSR.scala 15:26]
        sscratch.data <= _T_974.data @[CSR.scala 15:10]
        skip @[CsrFile.scala 240:43]
      node _T_977 = eq(io.write.addr, UInt<12>("h0141")) @[CsrFile.scala 241:25]
      when _T_977 : @[CsrFile.scala 241:43]
        node _T_978 = bits(writeData, 31, 2) @[CSR.scala 144:19]
        node _T_979 = cat(_T_978, UInt<2>("h00")) @[Cat.scala 30:58]
        sepc.data <= _T_979 @[CSR.scala 144:11]
        skip @[CsrFile.scala 241:43]
      node _T_980 = eq(io.write.addr, UInt<12>("h0142")) @[CsrFile.scala 242:25]
      when _T_980 : @[CsrFile.scala 242:43]
        node _T_981 = bits(writeData, 31, 31) @[CSR.scala 159:18]
        scause.int <= _T_981 @[CSR.scala 159:11]
        node _T_982 = bits(writeData, 3, 0) @[CSR.scala 160:18]
        scause.code <= _T_982 @[CSR.scala 160:11]
        skip @[CsrFile.scala 242:43]
      node _T_983 = eq(io.write.addr, UInt<12>("h0143")) @[CsrFile.scala 243:25]
      when _T_983 : @[CsrFile.scala 243:43]
        wire _T_984 : {data : UInt<32>} @[CSR.scala 15:26]
        wire _T_985 : UInt<32>
        _T_985 <= writeData
        node _T_986 = bits(_T_985, 31, 0) @[CSR.scala 15:26]
        _T_984.data <= _T_986 @[CSR.scala 15:26]
        stval.data <= _T_984.data @[CSR.scala 15:10]
        skip @[CsrFile.scala 243:43]
      node _T_987 = eq(io.write.addr, UInt<12>("h0180")) @[CsrFile.scala 244:25]
      when _T_987 : @[CsrFile.scala 244:43]
        node _T_988 = bits(writeData, 31, 31) @[CSR.scala 185:18]
        satp.mode <= _T_988 @[CSR.scala 185:11]
        node _T_989 = bits(writeData, 21, 0) @[CSR.scala 186:18]
        satp.ppn <= _T_989 @[CSR.scala 186:11]
        skip @[CsrFile.scala 244:43]
      node _T_990 = eq(io.write.addr, UInt<12>("h0300")) @[CsrFile.scala 245:25]
      when _T_990 : @[CsrFile.scala 245:43]
        node _T_991 = bits(writeData, 18, 18) @[CSR.scala 220:18]
        mstatus.sum <= _T_991 @[CSR.scala 220:11]
        node _T_992 = bits(writeData, 12, 11) @[CSR.scala 221:18]
        mstatus.mpp <= _T_992 @[CSR.scala 221:11]
        node _T_993 = bits(writeData, 8, 8) @[CSR.scala 222:18]
        mstatus.spp <= _T_993 @[CSR.scala 222:11]
        node _T_994 = bits(writeData, 7, 7) @[CSR.scala 223:18]
        mstatus.mpie <= _T_994 @[CSR.scala 223:11]
        node _T_995 = bits(writeData, 5, 5) @[CSR.scala 224:18]
        mstatus.spie <= _T_995 @[CSR.scala 224:11]
        node _T_996 = bits(writeData, 3, 3) @[CSR.scala 225:18]
        mstatus.mie <= _T_996 @[CSR.scala 225:11]
        node _T_997 = bits(writeData, 1, 1) @[CSR.scala 226:18]
        mstatus.sie <= _T_997 @[CSR.scala 226:11]
        skip @[CsrFile.scala 245:43]
      node _T_998 = eq(io.write.addr, UInt<12>("h0302")) @[CsrFile.scala 246:25]
      when _T_998 : @[CsrFile.scala 246:43]
        node _T_999 = bits(writeData, 15, 15) @[CSR.scala 254:19]
        node _T_1000 = bits(writeData, 13, 12) @[CSR.scala 254:36]
        node _T_1001 = bits(writeData, 9, 8) @[CSR.scala 254:57]
        node _T_1002 = bits(writeData, 6, 6) @[CSR.scala 255:29]
        node _T_1003 = bits(writeData, 4, 2) @[CSR.scala 255:45]
        node _T_1004 = bits(writeData, 0, 0) @[CSR.scala 255:64]
        node _T_1005 = cat(UInt<1>("h00"), _T_1004) @[Cat.scala 30:58]
        node _T_1006 = cat(_T_1002, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_1007 = cat(_T_1006, _T_1003) @[Cat.scala 30:58]
        node _T_1008 = cat(_T_1007, _T_1005) @[Cat.scala 30:58]
        node _T_1009 = cat(UInt<2>("h00"), _T_1001) @[Cat.scala 30:58]
        node _T_1010 = cat(_T_1009, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_1011 = cat(_T_999, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_1012 = cat(_T_1011, _T_1000) @[Cat.scala 30:58]
        node _T_1013 = cat(_T_1012, _T_1010) @[Cat.scala 30:58]
        node _T_1014 = cat(_T_1013, _T_1008) @[Cat.scala 30:58]
        medeleg.data <= _T_1014 @[CSR.scala 254:11]
        skip @[CsrFile.scala 246:43]
      node _T_1015 = eq(io.write.addr, UInt<12>("h0303")) @[CsrFile.scala 247:25]
      when _T_1015 : @[CsrFile.scala 247:43]
        node _T_1016 = bits(writeData, 9, 9) @[CSR.scala 269:29]
        node _T_1017 = bits(writeData, 5, 5) @[CSR.scala 269:45]
        node _T_1018 = bits(writeData, 1, 1) @[CSR.scala 269:61]
        node _T_1019 = cat(UInt<3>("h00"), _T_1018) @[Cat.scala 30:58]
        node _T_1020 = cat(_T_1019, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_1021 = cat(UInt<3>("h00"), _T_1017) @[Cat.scala 30:58]
        node _T_1022 = cat(UInt<2>("h00"), _T_1016) @[Cat.scala 30:58]
        node _T_1023 = cat(_T_1022, _T_1021) @[Cat.scala 30:58]
        node _T_1024 = cat(_T_1023, _T_1020) @[Cat.scala 30:58]
        mideleg.data <= _T_1024 @[CSR.scala 269:11]
        skip @[CsrFile.scala 247:43]
      node _T_1025 = eq(io.write.addr, UInt<12>("h0304")) @[CsrFile.scala 248:25]
      when _T_1025 : @[CsrFile.scala 248:43]
        node _T_1026 = bits(writeData, 11, 11) @[CSR.scala 295:18]
        mie.meie <= _T_1026 @[CSR.scala 295:11]
        node _T_1027 = bits(writeData, 9, 9) @[CSR.scala 296:18]
        mie.seie <= _T_1027 @[CSR.scala 296:11]
        node _T_1028 = bits(writeData, 7, 7) @[CSR.scala 297:18]
        mie.mtie <= _T_1028 @[CSR.scala 297:11]
        node _T_1029 = bits(writeData, 5, 5) @[CSR.scala 298:18]
        mie.stie <= _T_1029 @[CSR.scala 298:11]
        node _T_1030 = bits(writeData, 3, 3) @[CSR.scala 299:18]
        mie.msie <= _T_1030 @[CSR.scala 299:11]
        node _T_1031 = bits(writeData, 1, 1) @[CSR.scala 300:18]
        mie.ssie <= _T_1031 @[CSR.scala 300:11]
        skip @[CsrFile.scala 248:43]
      node _T_1032 = eq(io.write.addr, UInt<12>("h0305")) @[CsrFile.scala 249:25]
      when _T_1032 : @[CsrFile.scala 249:43]
        node _T_1033 = bits(writeData, 31, 2) @[CSR.scala 343:18]
        mtvec.base <= _T_1033 @[CSR.scala 343:11]
        node _T_1034 = bits(writeData, 0, 0) @[CSR.scala 344:18]
        mtvec.mode <= _T_1034 @[CSR.scala 344:11]
        skip @[CsrFile.scala 249:43]
      node _T_1035 = eq(io.write.addr, UInt<12>("h0340")) @[CsrFile.scala 250:25]
      when _T_1035 : @[CsrFile.scala 250:43]
        wire _T_1036 : {data : UInt<32>} @[CSR.scala 15:26]
        wire _T_1037 : UInt<32>
        _T_1037 <= writeData
        node _T_1038 = bits(_T_1037, 31, 0) @[CSR.scala 15:26]
        _T_1036.data <= _T_1038 @[CSR.scala 15:26]
        mscratch.data <= _T_1036.data @[CSR.scala 15:10]
        skip @[CsrFile.scala 250:43]
      node _T_1039 = eq(io.write.addr, UInt<12>("h0341")) @[CsrFile.scala 251:25]
      when _T_1039 : @[CsrFile.scala 251:43]
        node _T_1040 = bits(writeData, 31, 2) @[CSR.scala 367:19]
        node _T_1041 = cat(_T_1040, UInt<2>("h00")) @[Cat.scala 30:58]
        mepc.data <= _T_1041 @[CSR.scala 367:11]
        skip @[CsrFile.scala 251:43]
      node _T_1042 = eq(io.write.addr, UInt<12>("h0342")) @[CsrFile.scala 252:25]
      when _T_1042 : @[CsrFile.scala 252:43]
        node _T_1043 = bits(writeData, 31, 31) @[CSR.scala 382:18]
        mcause.int <= _T_1043 @[CSR.scala 382:11]
        node _T_1044 = bits(writeData, 3, 0) @[CSR.scala 383:18]
        mcause.code <= _T_1044 @[CSR.scala 383:11]
        skip @[CsrFile.scala 252:43]
      node _T_1045 = eq(io.write.addr, UInt<12>("h0343")) @[CsrFile.scala 253:25]
      when _T_1045 : @[CsrFile.scala 253:43]
        wire _T_1046 : {data : UInt<32>} @[CSR.scala 15:26]
        wire _T_1047 : UInt<32>
        _T_1047 <= writeData
        node _T_1048 = bits(_T_1047, 31, 0) @[CSR.scala 15:26]
        _T_1046.data <= _T_1048 @[CSR.scala 15:26]
        mtval.data <= _T_1046.data @[CSR.scala 15:10]
        skip @[CsrFile.scala 253:43]
      node _T_1049 = eq(io.write.addr, UInt<12>("h0344")) @[CsrFile.scala 254:25]
      when _T_1049 : @[CsrFile.scala 254:43]
        node _T_1050 = bits(writeData, 9, 9) @[CSR.scala 326:18]
        mipReal.seip <= _T_1050 @[CSR.scala 326:11]
        node _T_1051 = bits(writeData, 5, 5) @[CSR.scala 327:18]
        mipReal.stip <= _T_1051 @[CSR.scala 327:11]
        node _T_1052 = bits(writeData, 1, 1) @[CSR.scala 328:18]
        mipReal.ssip <= _T_1052 @[CSR.scala 328:11]
        skip @[CsrFile.scala 254:43]
      skip @[CsrFile.scala 214:18]
    else : @[CsrFile.scala 255:35]
      when io.except.hasTrap : @[CsrFile.scala 255:35]
        when io.except.isSret : @[CsrFile.scala 257:29]
          mstatus.sie <= mstatus.spie @[CsrFile.scala 260:21]
          mstatus.spie <= UInt<1>("h01") @[CsrFile.scala 261:21]
          mstatus.spp <= UInt<1>("h00") @[CsrFile.scala 262:21]
          skip @[CsrFile.scala 257:29]
        else : @[CsrFile.scala 263:36]
          when io.except.isMret : @[CsrFile.scala 263:36]
            mstatus.mie <= mstatus.mpie @[CsrFile.scala 265:21]
            mstatus.mpie <= UInt<1>("h01") @[CsrFile.scala 266:21]
            mstatus.mpp <= UInt<2>("h00") @[CsrFile.scala 267:21]
            skip @[CsrFile.scala 263:36]
          else : @[CsrFile.scala 268:40]
            node _T_1053 = or(handIntS, handExcS) @[CsrFile.scala 268:27]
            when _T_1053 : @[CsrFile.scala 268:40]
              node _T_1054 = bits(io.except.excPc, 31, 2) @[CSR.scala 144:19]
              node _T_1055 = cat(_T_1054, UInt<2>("h00")) @[Cat.scala 30:58]
              sepc.data <= _T_1055 @[CSR.scala 144:11]
              node _T_1056 = bits(cause, 31, 31) @[CSR.scala 159:18]
              scause.int <= _T_1056 @[CSR.scala 159:11]
              node _T_1057 = bits(cause, 3, 0) @[CSR.scala 160:18]
              scause.code <= _T_1057 @[CSR.scala 160:11]
              wire _T_1058 : {data : UInt<32>} @[CSR.scala 15:26]
              wire _T_1059 : UInt<32>
              _T_1059 <= io.except.excValue
              node _T_1060 = bits(_T_1059, 31, 0) @[CSR.scala 15:26]
              _T_1058.data <= _T_1060 @[CSR.scala 15:26]
              stval.data <= _T_1058.data @[CSR.scala 15:10]
              mstatus.spie <= mstatus.sie @[CsrFile.scala 274:21]
              mstatus.sie <= UInt<1>("h00") @[CsrFile.scala 275:21]
              node _T_1061 = bits(mode, 0, 0) @[CsrFile.scala 276:28]
              mstatus.spp <= _T_1061 @[CsrFile.scala 276:21]
              skip @[CsrFile.scala 268:40]
            else : @[CsrFile.scala 277:18]
              node _T_1062 = bits(io.except.excPc, 31, 2) @[CSR.scala 367:19]
              node _T_1063 = cat(_T_1062, UInt<2>("h00")) @[Cat.scala 30:58]
              mepc.data <= _T_1063 @[CSR.scala 367:11]
              node _T_1064 = bits(cause, 31, 31) @[CSR.scala 382:18]
              mcause.int <= _T_1064 @[CSR.scala 382:11]
              node _T_1065 = bits(cause, 3, 0) @[CSR.scala 383:18]
              mcause.code <= _T_1065 @[CSR.scala 383:11]
              wire _T_1066 : {data : UInt<32>} @[CSR.scala 15:26]
              wire _T_1067 : UInt<32>
              _T_1067 <= io.except.excValue
              node _T_1068 = bits(_T_1067, 31, 0) @[CSR.scala 15:26]
              _T_1066.data <= _T_1068 @[CSR.scala 15:26]
              mtval.data <= _T_1066.data @[CSR.scala 15:10]
              mstatus.mpie <= mstatus.mie @[CsrFile.scala 282:21]
              mstatus.mie <= UInt<1>("h00") @[CsrFile.scala 283:21]
              mstatus.mpp <= mode @[CsrFile.scala 284:21]
              skip @[CsrFile.scala 277:18]
        skip @[CsrFile.scala 255:35]
    io.read.valid <= valid @[CsrFile.scala 289:17]
    io.read.data <= readData @[CsrFile.scala 290:17]
    io.hasInt <= hasInt @[CsrFile.scala 293:15]
    io.busy <= writeEn @[CsrFile.scala 294:15]
    io.mode <= mode @[CsrFile.scala 295:15]
    io.sepc <= sepc.data @[CsrFile.scala 296:15]
    io.mepc <= mepc.data @[CsrFile.scala 297:15]
    io.trapVec <= trapVec @[CsrFile.scala 298:15]
    node _T_1069 = bits(mode, 1, 1) @[CsrFile.scala 301:23]
    node _T_1070 = eq(_T_1069, UInt<1>("h00")) @[CsrFile.scala 301:18]
    node _T_1071 = and(_T_1070, satp.mode) @[CsrFile.scala 301:27]
    io.pageEn <= _T_1071 @[CsrFile.scala 301:15]
    io.basePpn <= satp.ppn @[CsrFile.scala 302:15]
    io.sum <= mstatus.sum @[CsrFile.scala 303:15]
    
  module ExclusiveMonitor : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip check : {addr : UInt<32>, flip valid : UInt<1>}, flip update : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}}
    
    reg flag : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ExclusiveMonitor.scala 20:22]
    reg addr : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[ExclusiveMonitor.scala 21:22]
    node _T = eq(io.update.addr, addr) @[ExclusiveMonitor.scala 23:56]
    node _T_1 = and(io.update.clear, _T) @[ExclusiveMonitor.scala 23:38]
    node _T_2 = or(io.flush, _T_1) @[ExclusiveMonitor.scala 23:18]
    when _T_2 : @[ExclusiveMonitor.scala 23:67]
      flag <= UInt<1>("h00") @[ExclusiveMonitor.scala 24:11]
      addr <= UInt<1>("h00") @[ExclusiveMonitor.scala 25:11]
      skip @[ExclusiveMonitor.scala 23:67]
    else : @[ExclusiveMonitor.scala 26:31]
      when io.update.set : @[ExclusiveMonitor.scala 26:31]
        flag <= UInt<1>("h01") @[ExclusiveMonitor.scala 27:11]
        addr <= io.update.addr @[ExclusiveMonitor.scala 28:11]
        skip @[ExclusiveMonitor.scala 26:31]
    node _T_3 = eq(addr, io.check.addr) @[ExclusiveMonitor.scala 31:34]
    node _T_4 = and(flag, _T_3) @[ExclusiveMonitor.scala 31:26]
    io.check.valid <= _T_4 @[ExclusiveMonitor.scala 31:18]
    
  module HazardResolver : 
    input clock : Clock
    input reset : Reset
    output io : {flip regRead1 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, flip regRead2 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, flip csrRead : {op : UInt<3>, flip valid : UInt<1>, addr : UInt<12>, flip data : UInt<32>}, flip check : {addr : UInt<32>, flip valid : UInt<1>}, flip aluReg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, flip memReg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, flip memCsr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, flip wbReg : {en : UInt<1>, addr : UInt<5>, data : UInt<32>, load : UInt<1>}, flip wbCsr : {op : UInt<3>, addr : UInt<12>, data : UInt<32>, retired : UInt<1>}, flip wbExcMon : {addr : UInt<32>, set : UInt<1>, clear : UInt<1>}, rf1 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, rf2 : {en : UInt<1>, addr : UInt<5>, flip data : UInt<32>}, csr : {op : UInt<3>, flip valid : UInt<1>, addr : UInt<12>, flip data : UInt<32>}, excMon : {addr : UInt<32>, flip valid : UInt<1>}, loadFlag : UInt<1>, csrFlag : UInt<1>}
    
    node _T = neq(io.regRead1.addr, UInt<1>("h00")) @[HazardResolver.scala 39:32]
    node _T_1 = and(io.regRead1.en, _T) @[HazardResolver.scala 39:19]
    when _T_1 : @[HazardResolver.scala 39:41]
      node _T_2 = eq(io.regRead1.addr, io.aluReg.addr) @[HazardResolver.scala 40:39]
      node _T_3 = and(io.aluReg.en, _T_2) @[HazardResolver.scala 40:26]
      when _T_3 : @[HazardResolver.scala 40:59]
        io.regRead1.data <= io.aluReg.data @[HazardResolver.scala 41:19]
        skip @[HazardResolver.scala 40:59]
      else : @[HazardResolver.scala 42:66]
        node _T_4 = eq(io.regRead1.addr, io.memReg.addr) @[HazardResolver.scala 42:46]
        node _T_5 = and(io.memReg.en, _T_4) @[HazardResolver.scala 42:33]
        when _T_5 : @[HazardResolver.scala 42:66]
          io.regRead1.data <= io.memReg.data @[HazardResolver.scala 43:19]
          skip @[HazardResolver.scala 42:66]
        else : @[HazardResolver.scala 44:64]
          node _T_6 = eq(io.regRead1.addr, io.wbReg.addr) @[HazardResolver.scala 44:45]
          node _T_7 = and(io.wbReg.en, _T_6) @[HazardResolver.scala 44:32]
          when _T_7 : @[HazardResolver.scala 44:64]
            io.regRead1.data <= io.wbReg.data @[HazardResolver.scala 45:19]
            skip @[HazardResolver.scala 44:64]
          else : @[HazardResolver.scala 46:20]
            io.regRead1.data <= io.rf1.data @[HazardResolver.scala 47:19]
            skip @[HazardResolver.scala 46:20]
      skip @[HazardResolver.scala 39:41]
    else : @[HazardResolver.scala 49:18]
      io.regRead1.data <= UInt<1>("h00") @[HazardResolver.scala 50:17]
      skip @[HazardResolver.scala 49:18]
    node _T_8 = neq(io.regRead2.addr, UInt<1>("h00")) @[HazardResolver.scala 39:32]
    node _T_9 = and(io.regRead2.en, _T_8) @[HazardResolver.scala 39:19]
    when _T_9 : @[HazardResolver.scala 39:41]
      node _T_10 = eq(io.regRead2.addr, io.aluReg.addr) @[HazardResolver.scala 40:39]
      node _T_11 = and(io.aluReg.en, _T_10) @[HazardResolver.scala 40:26]
      when _T_11 : @[HazardResolver.scala 40:59]
        io.regRead2.data <= io.aluReg.data @[HazardResolver.scala 41:19]
        skip @[HazardResolver.scala 40:59]
      else : @[HazardResolver.scala 42:66]
        node _T_12 = eq(io.regRead2.addr, io.memReg.addr) @[HazardResolver.scala 42:46]
        node _T_13 = and(io.memReg.en, _T_12) @[HazardResolver.scala 42:33]
        when _T_13 : @[HazardResolver.scala 42:66]
          io.regRead2.data <= io.memReg.data @[HazardResolver.scala 43:19]
          skip @[HazardResolver.scala 42:66]
        else : @[HazardResolver.scala 44:64]
          node _T_14 = eq(io.regRead2.addr, io.wbReg.addr) @[HazardResolver.scala 44:45]
          node _T_15 = and(io.wbReg.en, _T_14) @[HazardResolver.scala 44:32]
          when _T_15 : @[HazardResolver.scala 44:64]
            io.regRead2.data <= io.wbReg.data @[HazardResolver.scala 45:19]
            skip @[HazardResolver.scala 44:64]
          else : @[HazardResolver.scala 46:20]
            io.regRead2.data <= io.rf2.data @[HazardResolver.scala 47:19]
            skip @[HazardResolver.scala 46:20]
      skip @[HazardResolver.scala 39:41]
    else : @[HazardResolver.scala 49:18]
      io.regRead2.data <= UInt<1>("h00") @[HazardResolver.scala 50:17]
      skip @[HazardResolver.scala 49:18]
    node _T_16 = or(io.wbExcMon.clear, io.wbExcMon.set) @[HazardResolver.scala 55:29]
    when _T_16 : @[HazardResolver.scala 55:49]
      node _T_17 = eq(io.check.addr, io.wbExcMon.addr) @[HazardResolver.scala 56:24]
      when _T_17 : @[HazardResolver.scala 56:46]
        when io.wbExcMon.clear : @[HazardResolver.scala 57:34]
          io.check.valid <= UInt<1>("h00") @[HazardResolver.scala 58:23]
          skip @[HazardResolver.scala 57:34]
        else : @[HazardResolver.scala 59:22]
          io.check.valid <= UInt<1>("h01") @[HazardResolver.scala 60:23]
          skip @[HazardResolver.scala 59:22]
        skip @[HazardResolver.scala 56:46]
      else : @[HazardResolver.scala 62:20]
        io.check.valid <= UInt<1>("h00") @[HazardResolver.scala 63:21]
        skip @[HazardResolver.scala 62:20]
      skip @[HazardResolver.scala 55:49]
    else : @[HazardResolver.scala 65:18]
      io.check.valid <= io.excMon.valid @[HazardResolver.scala 66:19]
      skip @[HazardResolver.scala 65:18]
    node _T_18 = eq(io.regRead1.addr, io.aluReg.addr) @[HazardResolver.scala 71:47]
    node _T_19 = and(io.aluReg.load, _T_18) @[HazardResolver.scala 71:34]
    node _T_20 = eq(io.regRead1.addr, io.memReg.addr) @[HazardResolver.scala 72:47]
    node _T_21 = and(io.memReg.load, _T_20) @[HazardResolver.scala 72:34]
    node _T_22 = or(_T_19, _T_21) @[HazardResolver.scala 73:25]
    node loadHazard1 = and(io.regRead1.en, _T_22) @[HazardResolver.scala 73:13]
    node _T_23 = eq(io.regRead2.addr, io.aluReg.addr) @[HazardResolver.scala 71:47]
    node _T_24 = and(io.aluReg.load, _T_23) @[HazardResolver.scala 71:34]
    node _T_25 = eq(io.regRead2.addr, io.memReg.addr) @[HazardResolver.scala 72:47]
    node _T_26 = and(io.memReg.load, _T_25) @[HazardResolver.scala 72:34]
    node _T_27 = or(_T_24, _T_26) @[HazardResolver.scala 73:25]
    node loadHazard2 = and(io.regRead2.en, _T_27) @[HazardResolver.scala 73:13]
    node _T_28 = neq(io.csrRead.op, UInt<3>("h00")) @[HazardResolver.scala 77:27]
    node _T_29 = neq(io.csrRead.op, UInt<3>("h02")) @[HazardResolver.scala 77:50]
    node _T_30 = and(_T_28, _T_29) @[HazardResolver.scala 77:39]
    node _T_31 = neq(io.memCsr.op, UInt<3>("h00")) @[HazardResolver.scala 78:32]
    node _T_32 = neq(io.memCsr.op, UInt<3>("h01")) @[HazardResolver.scala 78:60]
    node _T_33 = and(_T_31, _T_32) @[HazardResolver.scala 78:44]
    node _T_34 = eq(io.csrRead.addr, io.memCsr.addr) @[HazardResolver.scala 79:29]
    node _T_35 = and(_T_33, _T_34) @[HazardResolver.scala 78:70]
    node _T_36 = neq(io.wbCsr.op, UInt<3>("h00")) @[HazardResolver.scala 80:31]
    node _T_37 = neq(io.wbCsr.op, UInt<3>("h01")) @[HazardResolver.scala 80:58]
    node _T_38 = and(_T_36, _T_37) @[HazardResolver.scala 80:43]
    node _T_39 = eq(io.csrRead.addr, io.wbCsr.addr) @[HazardResolver.scala 81:29]
    node _T_40 = and(_T_38, _T_39) @[HazardResolver.scala 80:68]
    node _T_41 = or(_T_35, _T_40) @[HazardResolver.scala 82:23]
    node csrHazard = and(_T_30, _T_41) @[HazardResolver.scala 82:12]
    io.rf1.en <= io.regRead1.en @[HazardResolver.scala 98:15]
    io.rf1.addr <= io.regRead1.addr @[HazardResolver.scala 99:15]
    io.rf2.en <= io.regRead2.en @[HazardResolver.scala 100:15]
    io.rf2.addr <= io.regRead2.addr @[HazardResolver.scala 101:15]
    io.csrRead.data <= io.csr.data @[HazardResolver.scala 104:10]
    io.csr.addr <= io.csrRead.addr @[HazardResolver.scala 104:10]
    io.csrRead.valid <= io.csr.valid @[HazardResolver.scala 104:10]
    io.csr.op <= io.csrRead.op @[HazardResolver.scala 104:10]
    io.excMon.addr <= io.check.addr @[HazardResolver.scala 107:19]
    node _T_42 = or(loadHazard1, loadHazard2) @[HazardResolver.scala 110:30]
    io.loadFlag <= _T_42 @[HazardResolver.scala 110:15]
    io.csrFlag <= csrHazard @[HazardResolver.scala 111:15]
    
  module PipelineController : 
    input clock : Clock
    input reset : Reset
    output io : {flip fetch : UInt<1>, flip alu : UInt<1>, flip mem : UInt<1>, flip decFlush : UInt<1>, flip decTarget : UInt<32>, flip memFlush : UInt<1>, flip memTarget : UInt<32>, flip load : UInt<1>, flip csr : UInt<1>, flip except : {hasTrap : UInt<1>, isSret : UInt<1>, isMret : UInt<1>, excCause : UInt<31>, excPc : UInt<32>, excValue : UInt<32>}, flip csrSepc : UInt<32>, flip csrMepc : UInt<32>, flip csrTvec : UInt<32>, stallIf : UInt<1>, stallId : UInt<1>, stallEx : UInt<1>, stallMm : UInt<1>, stallWb : UInt<1>, flush : UInt<1>, flushIf : UInt<1>, flushPc : UInt<32>}
    
    node _T = or(io.csr, io.alu) @[PipelineController.scala 43:26]
    node _T_1 = mux(io.fetch, UInt<5>("h010"), UInt<1>("h00")) @[PipelineController.scala 45:18]
    node _T_2 = mux(io.load, UInt<5>("h018"), _T_1) @[PipelineController.scala 44:18]
    node _T_3 = mux(_T, UInt<5>("h01c"), _T_2) @[PipelineController.scala 43:18]
    node stall = mux(io.mem, UInt<5>("h01e"), _T_3) @[PipelineController.scala 42:18]
    node _T_4 = mux(io.except.isMret, io.csrMepc, io.csrTvec) @[PipelineController.scala 49:20]
    node excPc = mux(io.except.isSret, io.csrSepc, _T_4) @[PipelineController.scala 48:20]
    node flushAll = or(io.except.hasTrap, io.memFlush) @[PipelineController.scala 55:28]
    node flushIf = or(flushAll, io.decFlush) @[PipelineController.scala 56:28]
    node _T_5 = mux(io.memFlush, io.memTarget, io.decTarget) @[PipelineController.scala 58:22]
    node flushPc = mux(io.except.hasTrap, excPc, _T_5) @[PipelineController.scala 57:22]
    node _T_6 = bits(stall, 4, 4) @[PipelineController.scala 61:23]
    io.stallIf <= _T_6 @[PipelineController.scala 61:15]
    node _T_7 = bits(stall, 3, 3) @[PipelineController.scala 62:23]
    io.stallId <= _T_7 @[PipelineController.scala 62:15]
    node _T_8 = bits(stall, 2, 2) @[PipelineController.scala 63:23]
    io.stallEx <= _T_8 @[PipelineController.scala 63:15]
    node _T_9 = bits(stall, 1, 1) @[PipelineController.scala 64:23]
    io.stallMm <= _T_9 @[PipelineController.scala 64:15]
    node _T_10 = bits(stall, 0, 0) @[PipelineController.scala 65:23]
    io.stallWb <= _T_10 @[PipelineController.scala 65:15]
    io.flush <= flushAll @[PipelineController.scala 68:15]
    io.flushIf <= flushIf @[PipelineController.scala 69:15]
    io.flushPc <= flushPc @[PipelineController.scala 70:15]
    
  module Core : 
    input clock : Clock
    input reset : Reset
    output io : {irq : {flip timer : UInt<1>, flip soft : UInt<1>, flip extern : UInt<1>}, tlb : {en : UInt<1>, flushInst : UInt<1>, flushData : UInt<1>, basePpn : UInt<22>, sum : UInt<1>, smode : UInt<1>}, cache : {flushInst : UInt<1>, flushData : UInt<1>}, rom : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, ram : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, debug : {regWen : UInt<1>, regWaddr : UInt<5>, regWdata : UInt<32>, pc : UInt<32>}}
    
    inst fetch of Fetch @[Core.scala 29:23]
    fetch.clock <= clock
    fetch.reset <= reset
    inst ifid of MidStage @[Core.scala 30:23]
    ifid.clock <= clock
    ifid.reset <= reset
    inst decoder of Decoder @[Core.scala 31:23]
    decoder.clock <= clock
    decoder.reset <= reset
    inst idex of MidStage_1 @[Core.scala 32:23]
    idex.clock <= clock
    idex.reset <= reset
    inst alu of ALU @[Core.scala 33:23]
    alu.clock <= clock
    alu.reset <= reset
    inst exmem of MidStage_2 @[Core.scala 34:23]
    exmem.clock <= clock
    exmem.reset <= reset
    inst mem of Mem @[Core.scala 35:23]
    mem.clock <= clock
    mem.reset <= reset
    inst memwb of MidStage_3 @[Core.scala 36:23]
    memwb.clock <= clock
    memwb.reset <= reset
    inst wb of WriteBack @[Core.scala 37:23]
    wb.clock <= clock
    wb.reset <= reset
    inst regfile of RegFile @[Core.scala 40:23]
    regfile.clock <= clock
    regfile.reset <= reset
    inst csrfile of CsrFile @[Core.scala 43:23]
    csrfile.clock <= clock
    csrfile.reset <= reset
    inst excMon of ExclusiveMonitor @[Core.scala 46:23]
    excMon.clock <= clock
    excMon.reset <= reset
    inst resolve of HazardResolver @[Core.scala 49:23]
    resolve.clock <= clock
    resolve.reset <= reset
    inst control of PipelineController @[Core.scala 50:23]
    control.clock <= clock
    control.reset <= reset
    fetch.io.flush <= control.io.flushIf @[Core.scala 53:21]
    fetch.io.stall <= control.io.stallIf @[Core.scala 54:21]
    fetch.io.flushPc <= control.io.flushPc @[Core.scala 55:21]
    io.rom.wdata <= fetch.io.rom.wdata @[Core.scala 56:21]
    fetch.io.rom.rdata <= io.rom.rdata @[Core.scala 56:21]
    io.rom.addr <= fetch.io.rom.addr @[Core.scala 56:21]
    io.rom.wen <= fetch.io.rom.wen @[Core.scala 56:21]
    fetch.io.rom.fault <= io.rom.fault @[Core.scala 56:21]
    fetch.io.rom.valid <= io.rom.valid @[Core.scala 56:21]
    io.rom.en <= fetch.io.rom.en @[Core.scala 56:21]
    fetch.io.branch.target <= decoder.io.branch.target @[Core.scala 57:21]
    fetch.io.branch.pc <= decoder.io.branch.pc @[Core.scala 57:21]
    fetch.io.branch.index <= decoder.io.branch.index @[Core.scala 57:21]
    fetch.io.branch.taken <= decoder.io.branch.taken @[Core.scala 57:21]
    fetch.io.branch.jump <= decoder.io.branch.jump @[Core.scala 57:21]
    fetch.io.branch.branch <= decoder.io.branch.branch @[Core.scala 57:21]
    ifid.io.flush <= control.io.flushIf @[Core.scala 59:21]
    ifid.io.stallPrev <= control.io.stallIf @[Core.scala 60:21]
    ifid.io.stallNext <= control.io.stallId @[Core.scala 61:21]
    ifid.io.prev.pageFault <= fetch.io.fetch.pageFault @[Core.scala 62:21]
    ifid.io.prev.predIndex <= fetch.io.fetch.predIndex @[Core.scala 62:21]
    ifid.io.prev.target <= fetch.io.fetch.target @[Core.scala 62:21]
    ifid.io.prev.taken <= fetch.io.fetch.taken @[Core.scala 62:21]
    ifid.io.prev.pc <= fetch.io.fetch.pc @[Core.scala 62:21]
    ifid.io.prev.valid <= fetch.io.fetch.valid @[Core.scala 62:21]
    decoder.io.fetch.pageFault <= ifid.io.next.pageFault @[Core.scala 65:23]
    decoder.io.fetch.predIndex <= ifid.io.next.predIndex @[Core.scala 65:23]
    decoder.io.fetch.target <= ifid.io.next.target @[Core.scala 65:23]
    decoder.io.fetch.taken <= ifid.io.next.taken @[Core.scala 65:23]
    decoder.io.fetch.pc <= ifid.io.next.pc @[Core.scala 65:23]
    decoder.io.fetch.valid <= ifid.io.next.valid @[Core.scala 65:23]
    decoder.io.inst <= io.rom.rdata @[Core.scala 66:23]
    decoder.io.stallId <= control.io.stallId @[Core.scala 67:23]
    decoder.io.read1.data <= resolve.io.regRead1.data @[Core.scala 68:23]
    resolve.io.regRead1.addr <= decoder.io.read1.addr @[Core.scala 68:23]
    resolve.io.regRead1.en <= decoder.io.read1.en @[Core.scala 68:23]
    decoder.io.read2.data <= resolve.io.regRead2.data @[Core.scala 69:23]
    resolve.io.regRead2.addr <= decoder.io.read2.addr @[Core.scala 69:23]
    resolve.io.regRead2.en <= decoder.io.read2.en @[Core.scala 69:23]
    idex.io.flush <= control.io.flush @[Core.scala 70:23]
    idex.io.stallPrev <= control.io.stallId @[Core.scala 71:23]
    idex.io.stallNext <= control.io.stallEx @[Core.scala 72:23]
    idex.io.prev.currentPc <= decoder.io.decoder.currentPc @[Core.scala 73:23]
    idex.io.prev.inst <= decoder.io.decoder.inst @[Core.scala 73:23]
    idex.io.prev.valid <= decoder.io.decoder.valid @[Core.scala 73:23]
    idex.io.prev.excValue <= decoder.io.decoder.excValue @[Core.scala 73:23]
    idex.io.prev.excType <= decoder.io.decoder.excType @[Core.scala 73:23]
    idex.io.prev.csrData <= decoder.io.decoder.csrData @[Core.scala 73:23]
    idex.io.prev.csrAddr <= decoder.io.decoder.csrAddr @[Core.scala 73:23]
    idex.io.prev.csrOp <= decoder.io.decoder.csrOp @[Core.scala 73:23]
    idex.io.prev.regWaddr <= decoder.io.decoder.regWaddr @[Core.scala 73:23]
    idex.io.prev.regWen <= decoder.io.decoder.regWen @[Core.scala 73:23]
    idex.io.prev.lsuData <= decoder.io.decoder.lsuData @[Core.scala 73:23]
    idex.io.prev.lsuOp <= decoder.io.decoder.lsuOp @[Core.scala 73:23]
    idex.io.prev.mduOp <= decoder.io.decoder.mduOp @[Core.scala 73:23]
    idex.io.prev.opr2 <= decoder.io.decoder.opr2 @[Core.scala 73:23]
    idex.io.prev.opr1 <= decoder.io.decoder.opr1 @[Core.scala 73:23]
    idex.io.prev.aluOp <= decoder.io.decoder.aluOp @[Core.scala 73:23]
    alu.io.decoder.currentPc <= idex.io.next.currentPc @[Core.scala 76:23]
    alu.io.decoder.inst <= idex.io.next.inst @[Core.scala 76:23]
    alu.io.decoder.valid <= idex.io.next.valid @[Core.scala 76:23]
    alu.io.decoder.excValue <= idex.io.next.excValue @[Core.scala 76:23]
    alu.io.decoder.excType <= idex.io.next.excType @[Core.scala 76:23]
    alu.io.decoder.csrData <= idex.io.next.csrData @[Core.scala 76:23]
    alu.io.decoder.csrAddr <= idex.io.next.csrAddr @[Core.scala 76:23]
    alu.io.decoder.csrOp <= idex.io.next.csrOp @[Core.scala 76:23]
    alu.io.decoder.regWaddr <= idex.io.next.regWaddr @[Core.scala 76:23]
    alu.io.decoder.regWen <= idex.io.next.regWen @[Core.scala 76:23]
    alu.io.decoder.lsuData <= idex.io.next.lsuData @[Core.scala 76:23]
    alu.io.decoder.lsuOp <= idex.io.next.lsuOp @[Core.scala 76:23]
    alu.io.decoder.mduOp <= idex.io.next.mduOp @[Core.scala 76:23]
    alu.io.decoder.opr2 <= idex.io.next.opr2 @[Core.scala 76:23]
    alu.io.decoder.opr1 <= idex.io.next.opr1 @[Core.scala 76:23]
    alu.io.decoder.aluOp <= idex.io.next.aluOp @[Core.scala 76:23]
    alu.io.flush <= control.io.flush @[Core.scala 77:23]
    alu.io.csrRead.data <= resolve.io.csrRead.data @[Core.scala 78:23]
    resolve.io.csrRead.addr <= alu.io.csrRead.addr @[Core.scala 78:23]
    alu.io.csrRead.valid <= resolve.io.csrRead.valid @[Core.scala 78:23]
    resolve.io.csrRead.op <= alu.io.csrRead.op @[Core.scala 78:23]
    exmem.io.flush <= control.io.flush @[Core.scala 79:23]
    exmem.io.stallPrev <= control.io.stallEx @[Core.scala 80:23]
    exmem.io.stallNext <= control.io.stallMm @[Core.scala 81:23]
    exmem.io.prev.currentPc <= alu.io.alu.currentPc @[Core.scala 82:23]
    exmem.io.prev.inst <= alu.io.alu.inst @[Core.scala 82:23]
    exmem.io.prev.valid <= alu.io.alu.valid @[Core.scala 82:23]
    exmem.io.prev.excValue <= alu.io.alu.excValue @[Core.scala 82:23]
    exmem.io.prev.excType <= alu.io.alu.excType @[Core.scala 82:23]
    exmem.io.prev.csr.retired <= alu.io.alu.csr.retired @[Core.scala 82:23]
    exmem.io.prev.csr.data <= alu.io.alu.csr.data @[Core.scala 82:23]
    exmem.io.prev.csr.addr <= alu.io.alu.csr.addr @[Core.scala 82:23]
    exmem.io.prev.csr.op <= alu.io.alu.csr.op @[Core.scala 82:23]
    exmem.io.prev.reg.load <= alu.io.alu.reg.load @[Core.scala 82:23]
    exmem.io.prev.reg.data <= alu.io.alu.reg.data @[Core.scala 82:23]
    exmem.io.prev.reg.addr <= alu.io.alu.reg.addr @[Core.scala 82:23]
    exmem.io.prev.reg.en <= alu.io.alu.reg.en @[Core.scala 82:23]
    exmem.io.prev.lsuData <= alu.io.alu.lsuData @[Core.scala 82:23]
    exmem.io.prev.lsuOp <= alu.io.alu.lsuOp @[Core.scala 82:23]
    mem.io.alu.currentPc <= exmem.io.next.currentPc @[Core.scala 85:23]
    mem.io.alu.inst <= exmem.io.next.inst @[Core.scala 85:23]
    mem.io.alu.valid <= exmem.io.next.valid @[Core.scala 85:23]
    mem.io.alu.excValue <= exmem.io.next.excValue @[Core.scala 85:23]
    mem.io.alu.excType <= exmem.io.next.excType @[Core.scala 85:23]
    mem.io.alu.csr.retired <= exmem.io.next.csr.retired @[Core.scala 85:23]
    mem.io.alu.csr.data <= exmem.io.next.csr.data @[Core.scala 85:23]
    mem.io.alu.csr.addr <= exmem.io.next.csr.addr @[Core.scala 85:23]
    mem.io.alu.csr.op <= exmem.io.next.csr.op @[Core.scala 85:23]
    mem.io.alu.reg.load <= exmem.io.next.reg.load @[Core.scala 85:23]
    mem.io.alu.reg.data <= exmem.io.next.reg.data @[Core.scala 85:23]
    mem.io.alu.reg.addr <= exmem.io.next.reg.addr @[Core.scala 85:23]
    mem.io.alu.reg.en <= exmem.io.next.reg.en @[Core.scala 85:23]
    mem.io.alu.lsuData <= exmem.io.next.lsuData @[Core.scala 85:23]
    mem.io.alu.lsuOp <= exmem.io.next.lsuOp @[Core.scala 85:23]
    mem.io.flush <= control.io.flush @[Core.scala 86:23]
    io.ram.wdata <= mem.io.ram.wdata @[Core.scala 87:23]
    mem.io.ram.rdata <= io.ram.rdata @[Core.scala 87:23]
    io.ram.addr <= mem.io.ram.addr @[Core.scala 87:23]
    io.ram.wen <= mem.io.ram.wen @[Core.scala 87:23]
    mem.io.ram.fault <= io.ram.fault @[Core.scala 87:23]
    mem.io.ram.valid <= io.ram.valid @[Core.scala 87:23]
    io.ram.en <= mem.io.ram.en @[Core.scala 87:23]
    mem.io.csrHasInt <= csrfile.io.hasInt @[Core.scala 88:23]
    mem.io.csrBusy <= csrfile.io.busy @[Core.scala 89:23]
    mem.io.csrMode <= csrfile.io.mode @[Core.scala 90:23]
    mem.io.excMon.valid <= resolve.io.check.valid @[Core.scala 91:23]
    resolve.io.check.addr <= mem.io.excMon.addr @[Core.scala 91:23]
    memwb.io.flush <= control.io.flush @[Core.scala 92:23]
    memwb.io.stallPrev <= control.io.stallMm @[Core.scala 93:23]
    memwb.io.stallNext <= control.io.stallWb @[Core.scala 94:23]
    memwb.io.prev.currentPc <= mem.io.mem.currentPc @[Core.scala 95:23]
    memwb.io.prev.excMon.clear <= mem.io.mem.excMon.clear @[Core.scala 95:23]
    memwb.io.prev.excMon.set <= mem.io.mem.excMon.set @[Core.scala 95:23]
    memwb.io.prev.excMon.addr <= mem.io.mem.excMon.addr @[Core.scala 95:23]
    memwb.io.prev.csr.retired <= mem.io.mem.csr.retired @[Core.scala 95:23]
    memwb.io.prev.csr.data <= mem.io.mem.csr.data @[Core.scala 95:23]
    memwb.io.prev.csr.addr <= mem.io.mem.csr.addr @[Core.scala 95:23]
    memwb.io.prev.csr.op <= mem.io.mem.csr.op @[Core.scala 95:23]
    memwb.io.prev.memWidth <= mem.io.mem.memWidth @[Core.scala 95:23]
    memwb.io.prev.memSel <= mem.io.mem.memSel @[Core.scala 95:23]
    memwb.io.prev.memSigned <= mem.io.mem.memSigned @[Core.scala 95:23]
    memwb.io.prev.reg.load <= mem.io.mem.reg.load @[Core.scala 95:23]
    memwb.io.prev.reg.data <= mem.io.mem.reg.data @[Core.scala 95:23]
    memwb.io.prev.reg.addr <= mem.io.mem.reg.addr @[Core.scala 95:23]
    memwb.io.prev.reg.en <= mem.io.mem.reg.en @[Core.scala 95:23]
    wb.io.mem.currentPc <= memwb.io.next.currentPc @[Core.scala 98:17]
    wb.io.mem.excMon.clear <= memwb.io.next.excMon.clear @[Core.scala 98:17]
    wb.io.mem.excMon.set <= memwb.io.next.excMon.set @[Core.scala 98:17]
    wb.io.mem.excMon.addr <= memwb.io.next.excMon.addr @[Core.scala 98:17]
    wb.io.mem.csr.retired <= memwb.io.next.csr.retired @[Core.scala 98:17]
    wb.io.mem.csr.data <= memwb.io.next.csr.data @[Core.scala 98:17]
    wb.io.mem.csr.addr <= memwb.io.next.csr.addr @[Core.scala 98:17]
    wb.io.mem.csr.op <= memwb.io.next.csr.op @[Core.scala 98:17]
    wb.io.mem.memWidth <= memwb.io.next.memWidth @[Core.scala 98:17]
    wb.io.mem.memSel <= memwb.io.next.memSel @[Core.scala 98:17]
    wb.io.mem.memSigned <= memwb.io.next.memSigned @[Core.scala 98:17]
    wb.io.mem.reg.load <= memwb.io.next.reg.load @[Core.scala 98:17]
    wb.io.mem.reg.data <= memwb.io.next.reg.data @[Core.scala 98:17]
    wb.io.mem.reg.addr <= memwb.io.next.reg.addr @[Core.scala 98:17]
    wb.io.mem.reg.en <= memwb.io.next.reg.en @[Core.scala 98:17]
    wb.io.ramData <= io.ram.rdata @[Core.scala 99:17]
    io.debug.pc <= wb.io.debug.pc @[Core.scala 100:17]
    io.debug.regWdata <= wb.io.debug.regWdata @[Core.scala 100:17]
    io.debug.regWaddr <= wb.io.debug.regWaddr @[Core.scala 100:17]
    io.debug.regWen <= wb.io.debug.regWen @[Core.scala 100:17]
    resolve.io.rf1.data <= regfile.io.read1.data @[Core.scala 103:25]
    regfile.io.read1.addr <= resolve.io.rf1.addr @[Core.scala 103:25]
    regfile.io.read1.en <= resolve.io.rf1.en @[Core.scala 103:25]
    resolve.io.rf2.data <= regfile.io.read2.data @[Core.scala 104:25]
    regfile.io.read2.addr <= resolve.io.rf2.addr @[Core.scala 104:25]
    regfile.io.read2.en <= resolve.io.rf2.en @[Core.scala 104:25]
    regfile.io.write.en <= wb.io.reg.en @[Core.scala 105:25]
    regfile.io.write.addr <= wb.io.reg.addr @[Core.scala 106:25]
    regfile.io.write.data <= wb.io.reg.data @[Core.scala 107:25]
    resolve.io.csr.data <= csrfile.io.read.data @[Core.scala 110:29]
    csrfile.io.read.addr <= resolve.io.csr.addr @[Core.scala 110:29]
    resolve.io.csr.valid <= csrfile.io.read.valid @[Core.scala 110:29]
    csrfile.io.read.op <= resolve.io.csr.op @[Core.scala 110:29]
    csrfile.io.write.op <= wb.io.csr.op @[Core.scala 111:29]
    csrfile.io.write.addr <= wb.io.csr.addr @[Core.scala 112:29]
    csrfile.io.write.data <= wb.io.csr.data @[Core.scala 113:29]
    csrfile.io.write.retired <= wb.io.csr.retired @[Core.scala 114:29]
    csrfile.io.irq.extern <= io.irq.extern @[Core.scala 115:29]
    csrfile.io.irq.soft <= io.irq.soft @[Core.scala 115:29]
    csrfile.io.irq.timer <= io.irq.timer @[Core.scala 115:29]
    csrfile.io.except.excValue <= mem.io.except.excValue @[Core.scala 116:29]
    csrfile.io.except.excPc <= mem.io.except.excPc @[Core.scala 116:29]
    csrfile.io.except.excCause <= mem.io.except.excCause @[Core.scala 116:29]
    csrfile.io.except.isMret <= mem.io.except.isMret @[Core.scala 116:29]
    csrfile.io.except.isSret <= mem.io.except.isSret @[Core.scala 116:29]
    csrfile.io.except.hasTrap <= mem.io.except.hasTrap @[Core.scala 116:29]
    excMon.io.flush <= control.io.flush @[Core.scala 119:27]
    resolve.io.excMon.valid <= excMon.io.check.valid @[Core.scala 120:27]
    excMon.io.check.addr <= resolve.io.excMon.addr @[Core.scala 120:27]
    excMon.io.update.addr <= wb.io.excMon.addr @[Core.scala 121:27]
    excMon.io.update.set <= wb.io.excMon.set @[Core.scala 122:27]
    excMon.io.update.clear <= wb.io.excMon.clear @[Core.scala 123:27]
    resolve.io.aluReg.load <= alu.io.alu.reg.load @[Core.scala 126:23]
    resolve.io.aluReg.data <= alu.io.alu.reg.data @[Core.scala 126:23]
    resolve.io.aluReg.addr <= alu.io.alu.reg.addr @[Core.scala 126:23]
    resolve.io.aluReg.en <= alu.io.alu.reg.en @[Core.scala 126:23]
    resolve.io.memReg.load <= mem.io.mem.reg.load @[Core.scala 127:23]
    resolve.io.memReg.data <= mem.io.mem.reg.data @[Core.scala 127:23]
    resolve.io.memReg.addr <= mem.io.mem.reg.addr @[Core.scala 127:23]
    resolve.io.memReg.en <= mem.io.mem.reg.en @[Core.scala 127:23]
    resolve.io.memCsr.retired <= mem.io.mem.csr.retired @[Core.scala 128:23]
    resolve.io.memCsr.data <= mem.io.mem.csr.data @[Core.scala 128:23]
    resolve.io.memCsr.addr <= mem.io.mem.csr.addr @[Core.scala 128:23]
    resolve.io.memCsr.op <= mem.io.mem.csr.op @[Core.scala 128:23]
    resolve.io.wbReg.load <= wb.io.reg.load @[Core.scala 129:23]
    resolve.io.wbReg.data <= wb.io.reg.data @[Core.scala 129:23]
    resolve.io.wbReg.addr <= wb.io.reg.addr @[Core.scala 129:23]
    resolve.io.wbReg.en <= wb.io.reg.en @[Core.scala 129:23]
    resolve.io.wbCsr.retired <= wb.io.csr.retired @[Core.scala 130:23]
    resolve.io.wbCsr.data <= wb.io.csr.data @[Core.scala 130:23]
    resolve.io.wbCsr.addr <= wb.io.csr.addr @[Core.scala 130:23]
    resolve.io.wbCsr.op <= wb.io.csr.op @[Core.scala 130:23]
    resolve.io.wbExcMon.clear <= wb.io.excMon.clear @[Core.scala 131:23]
    resolve.io.wbExcMon.set <= wb.io.excMon.set @[Core.scala 131:23]
    resolve.io.wbExcMon.addr <= wb.io.excMon.addr @[Core.scala 131:23]
    control.io.fetch <= fetch.io.stallReq @[Core.scala 134:25]
    control.io.alu <= alu.io.stallReq @[Core.scala 135:25]
    control.io.mem <= mem.io.stallReq @[Core.scala 136:25]
    control.io.decFlush <= decoder.io.flushIf @[Core.scala 137:25]
    control.io.decTarget <= decoder.io.flushPc @[Core.scala 138:25]
    control.io.memFlush <= mem.io.flushReq @[Core.scala 139:25]
    control.io.memTarget <= mem.io.flushPc @[Core.scala 140:25]
    control.io.load <= resolve.io.loadFlag @[Core.scala 141:25]
    control.io.csr <= resolve.io.csrFlag @[Core.scala 142:25]
    control.io.except.excValue <= mem.io.except.excValue @[Core.scala 143:25]
    control.io.except.excPc <= mem.io.except.excPc @[Core.scala 143:25]
    control.io.except.excCause <= mem.io.except.excCause @[Core.scala 143:25]
    control.io.except.isMret <= mem.io.except.isMret @[Core.scala 143:25]
    control.io.except.isSret <= mem.io.except.isSret @[Core.scala 143:25]
    control.io.except.hasTrap <= mem.io.except.hasTrap @[Core.scala 143:25]
    control.io.csrSepc <= csrfile.io.sepc @[Core.scala 144:25]
    control.io.csrMepc <= csrfile.io.mepc @[Core.scala 145:25]
    control.io.csrTvec <= csrfile.io.trapVec @[Core.scala 146:25]
    io.tlb.en <= csrfile.io.pageEn @[Core.scala 149:23]
    io.tlb.flushInst <= mem.io.flushIt @[Core.scala 150:23]
    io.tlb.flushData <= mem.io.flushDt @[Core.scala 151:23]
    io.tlb.basePpn <= csrfile.io.basePpn @[Core.scala 152:23]
    io.tlb.sum <= csrfile.io.sum @[Core.scala 153:23]
    node _T = bits(csrfile.io.mode, 0, 0) @[Core.scala 154:41]
    io.tlb.smode <= _T @[Core.scala 154:23]
    io.cache.flushInst <= mem.io.flushIc @[Core.scala 155:23]
    io.cache.flushData <= mem.io.flushDc @[Core.scala 156:23]
    
  module TLB : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip wen : UInt<1>, flip vaddr : UInt<32>, flip went : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, valid : UInt<1>, rent : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}}
    
    wire _T : UInt<1>[16] @[TLB.scala 36:30]
    _T[0] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[1] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[2] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[3] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[4] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[5] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[6] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[7] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[8] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[9] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[10] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[11] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[12] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[13] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[14] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[15] <= UInt<1>("h00") @[TLB.scala 36:30]
    reg valid : UInt<1>[16], clock with : (reset => (reset, _T)) @[TLB.scala 36:22]
    cmem data : {vpn : UInt<20>, entry : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}}[16] @[TLB.scala 37:18]
    reg pointer : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[TLB.scala 43:24]
    node vpn = bits(io.vaddr, 31, 12) @[TLB.scala 44:25]
    when io.flush : @[TLB.scala 47:19]
      valid[0] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[1] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[2] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[3] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[4] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[5] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[6] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[7] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[8] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[9] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[10] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[11] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[12] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[13] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[14] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[15] <= UInt<1>("h00") @[TLB.scala 49:26]
      skip @[TLB.scala 47:19]
    else : @[TLB.scala 50:24]
      when io.wen : @[TLB.scala 50:24]
        valid[pointer] <= UInt<1>("h01") @[TLB.scala 52:25]
        infer mport _T_1 = data[pointer], clock @[TLB.scala 53:9]
        _T_1.vpn <= vpn @[TLB.scala 53:25]
        infer mport _T_2 = data[pointer], clock @[TLB.scala 54:9]
        _T_2.entry.r <= io.went.r @[TLB.scala 54:25]
        _T_2.entry.w <= io.went.w @[TLB.scala 54:25]
        _T_2.entry.x <= io.went.x @[TLB.scala 54:25]
        _T_2.entry.u <= io.went.u @[TLB.scala 54:25]
        _T_2.entry.a <= io.went.a @[TLB.scala 54:25]
        _T_2.entry.d <= io.went.d @[TLB.scala 54:25]
        _T_2.entry.ppn <= io.went.ppn @[TLB.scala 54:25]
        node _T_3 = add(pointer, UInt<1>("h01")) @[TLB.scala 56:24]
        node _T_4 = tail(_T_3, 1) @[TLB.scala 56:24]
        pointer <= _T_4 @[TLB.scala 56:13]
        skip @[TLB.scala 50:24]
    wire found : UInt<1>
    found <= UInt<1>("h00")
    wire _T_5 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[TLB.scala 61:36]
    _T_5.r <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.w <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.x <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.u <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.a <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.d <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.ppn <= UInt<22>("h00") @[TLB.scala 61:36]
    wire entry : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}
    entry.r <= _T_5.r
    entry.w <= _T_5.w
    entry.x <= _T_5.x
    entry.u <= _T_5.u
    entry.a <= _T_5.a
    entry.d <= _T_5.d
    entry.ppn <= _T_5.ppn
    infer mport _T_6 = data[UInt<1>("h00")], clock @[TLB.scala 63:27]
    node _T_7 = eq(_T_6.vpn, vpn) @[TLB.scala 63:35]
    node _T_8 = and(valid[0], _T_7) @[TLB.scala 63:20]
    when _T_8 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_9 = data[UInt<1>("h00")], clock @[TLB.scala 65:20]
      entry.r <= _T_9.entry.r @[TLB.scala 65:13]
      entry.w <= _T_9.entry.w @[TLB.scala 65:13]
      entry.x <= _T_9.entry.x @[TLB.scala 65:13]
      entry.u <= _T_9.entry.u @[TLB.scala 65:13]
      entry.a <= _T_9.entry.a @[TLB.scala 65:13]
      entry.d <= _T_9.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_9.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_10 = data[UInt<1>("h01")], clock @[TLB.scala 63:27]
    node _T_11 = eq(_T_10.vpn, vpn) @[TLB.scala 63:35]
    node _T_12 = and(valid[1], _T_11) @[TLB.scala 63:20]
    when _T_12 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_13 = data[UInt<1>("h01")], clock @[TLB.scala 65:20]
      entry.r <= _T_13.entry.r @[TLB.scala 65:13]
      entry.w <= _T_13.entry.w @[TLB.scala 65:13]
      entry.x <= _T_13.entry.x @[TLB.scala 65:13]
      entry.u <= _T_13.entry.u @[TLB.scala 65:13]
      entry.a <= _T_13.entry.a @[TLB.scala 65:13]
      entry.d <= _T_13.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_13.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_14 = data[UInt<2>("h02")], clock @[TLB.scala 63:27]
    node _T_15 = eq(_T_14.vpn, vpn) @[TLB.scala 63:35]
    node _T_16 = and(valid[2], _T_15) @[TLB.scala 63:20]
    when _T_16 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_17 = data[UInt<2>("h02")], clock @[TLB.scala 65:20]
      entry.r <= _T_17.entry.r @[TLB.scala 65:13]
      entry.w <= _T_17.entry.w @[TLB.scala 65:13]
      entry.x <= _T_17.entry.x @[TLB.scala 65:13]
      entry.u <= _T_17.entry.u @[TLB.scala 65:13]
      entry.a <= _T_17.entry.a @[TLB.scala 65:13]
      entry.d <= _T_17.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_17.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_18 = data[UInt<2>("h03")], clock @[TLB.scala 63:27]
    node _T_19 = eq(_T_18.vpn, vpn) @[TLB.scala 63:35]
    node _T_20 = and(valid[3], _T_19) @[TLB.scala 63:20]
    when _T_20 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_21 = data[UInt<2>("h03")], clock @[TLB.scala 65:20]
      entry.r <= _T_21.entry.r @[TLB.scala 65:13]
      entry.w <= _T_21.entry.w @[TLB.scala 65:13]
      entry.x <= _T_21.entry.x @[TLB.scala 65:13]
      entry.u <= _T_21.entry.u @[TLB.scala 65:13]
      entry.a <= _T_21.entry.a @[TLB.scala 65:13]
      entry.d <= _T_21.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_21.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_22 = data[UInt<3>("h04")], clock @[TLB.scala 63:27]
    node _T_23 = eq(_T_22.vpn, vpn) @[TLB.scala 63:35]
    node _T_24 = and(valid[4], _T_23) @[TLB.scala 63:20]
    when _T_24 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_25 = data[UInt<3>("h04")], clock @[TLB.scala 65:20]
      entry.r <= _T_25.entry.r @[TLB.scala 65:13]
      entry.w <= _T_25.entry.w @[TLB.scala 65:13]
      entry.x <= _T_25.entry.x @[TLB.scala 65:13]
      entry.u <= _T_25.entry.u @[TLB.scala 65:13]
      entry.a <= _T_25.entry.a @[TLB.scala 65:13]
      entry.d <= _T_25.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_25.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_26 = data[UInt<3>("h05")], clock @[TLB.scala 63:27]
    node _T_27 = eq(_T_26.vpn, vpn) @[TLB.scala 63:35]
    node _T_28 = and(valid[5], _T_27) @[TLB.scala 63:20]
    when _T_28 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_29 = data[UInt<3>("h05")], clock @[TLB.scala 65:20]
      entry.r <= _T_29.entry.r @[TLB.scala 65:13]
      entry.w <= _T_29.entry.w @[TLB.scala 65:13]
      entry.x <= _T_29.entry.x @[TLB.scala 65:13]
      entry.u <= _T_29.entry.u @[TLB.scala 65:13]
      entry.a <= _T_29.entry.a @[TLB.scala 65:13]
      entry.d <= _T_29.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_29.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_30 = data[UInt<3>("h06")], clock @[TLB.scala 63:27]
    node _T_31 = eq(_T_30.vpn, vpn) @[TLB.scala 63:35]
    node _T_32 = and(valid[6], _T_31) @[TLB.scala 63:20]
    when _T_32 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_33 = data[UInt<3>("h06")], clock @[TLB.scala 65:20]
      entry.r <= _T_33.entry.r @[TLB.scala 65:13]
      entry.w <= _T_33.entry.w @[TLB.scala 65:13]
      entry.x <= _T_33.entry.x @[TLB.scala 65:13]
      entry.u <= _T_33.entry.u @[TLB.scala 65:13]
      entry.a <= _T_33.entry.a @[TLB.scala 65:13]
      entry.d <= _T_33.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_33.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_34 = data[UInt<3>("h07")], clock @[TLB.scala 63:27]
    node _T_35 = eq(_T_34.vpn, vpn) @[TLB.scala 63:35]
    node _T_36 = and(valid[7], _T_35) @[TLB.scala 63:20]
    when _T_36 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_37 = data[UInt<3>("h07")], clock @[TLB.scala 65:20]
      entry.r <= _T_37.entry.r @[TLB.scala 65:13]
      entry.w <= _T_37.entry.w @[TLB.scala 65:13]
      entry.x <= _T_37.entry.x @[TLB.scala 65:13]
      entry.u <= _T_37.entry.u @[TLB.scala 65:13]
      entry.a <= _T_37.entry.a @[TLB.scala 65:13]
      entry.d <= _T_37.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_37.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_38 = data[UInt<4>("h08")], clock @[TLB.scala 63:27]
    node _T_39 = eq(_T_38.vpn, vpn) @[TLB.scala 63:35]
    node _T_40 = and(valid[8], _T_39) @[TLB.scala 63:20]
    when _T_40 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_41 = data[UInt<4>("h08")], clock @[TLB.scala 65:20]
      entry.r <= _T_41.entry.r @[TLB.scala 65:13]
      entry.w <= _T_41.entry.w @[TLB.scala 65:13]
      entry.x <= _T_41.entry.x @[TLB.scala 65:13]
      entry.u <= _T_41.entry.u @[TLB.scala 65:13]
      entry.a <= _T_41.entry.a @[TLB.scala 65:13]
      entry.d <= _T_41.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_41.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_42 = data[UInt<4>("h09")], clock @[TLB.scala 63:27]
    node _T_43 = eq(_T_42.vpn, vpn) @[TLB.scala 63:35]
    node _T_44 = and(valid[9], _T_43) @[TLB.scala 63:20]
    when _T_44 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_45 = data[UInt<4>("h09")], clock @[TLB.scala 65:20]
      entry.r <= _T_45.entry.r @[TLB.scala 65:13]
      entry.w <= _T_45.entry.w @[TLB.scala 65:13]
      entry.x <= _T_45.entry.x @[TLB.scala 65:13]
      entry.u <= _T_45.entry.u @[TLB.scala 65:13]
      entry.a <= _T_45.entry.a @[TLB.scala 65:13]
      entry.d <= _T_45.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_45.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_46 = data[UInt<4>("h0a")], clock @[TLB.scala 63:27]
    node _T_47 = eq(_T_46.vpn, vpn) @[TLB.scala 63:35]
    node _T_48 = and(valid[10], _T_47) @[TLB.scala 63:20]
    when _T_48 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_49 = data[UInt<4>("h0a")], clock @[TLB.scala 65:20]
      entry.r <= _T_49.entry.r @[TLB.scala 65:13]
      entry.w <= _T_49.entry.w @[TLB.scala 65:13]
      entry.x <= _T_49.entry.x @[TLB.scala 65:13]
      entry.u <= _T_49.entry.u @[TLB.scala 65:13]
      entry.a <= _T_49.entry.a @[TLB.scala 65:13]
      entry.d <= _T_49.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_49.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_50 = data[UInt<4>("h0b")], clock @[TLB.scala 63:27]
    node _T_51 = eq(_T_50.vpn, vpn) @[TLB.scala 63:35]
    node _T_52 = and(valid[11], _T_51) @[TLB.scala 63:20]
    when _T_52 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_53 = data[UInt<4>("h0b")], clock @[TLB.scala 65:20]
      entry.r <= _T_53.entry.r @[TLB.scala 65:13]
      entry.w <= _T_53.entry.w @[TLB.scala 65:13]
      entry.x <= _T_53.entry.x @[TLB.scala 65:13]
      entry.u <= _T_53.entry.u @[TLB.scala 65:13]
      entry.a <= _T_53.entry.a @[TLB.scala 65:13]
      entry.d <= _T_53.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_53.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_54 = data[UInt<4>("h0c")], clock @[TLB.scala 63:27]
    node _T_55 = eq(_T_54.vpn, vpn) @[TLB.scala 63:35]
    node _T_56 = and(valid[12], _T_55) @[TLB.scala 63:20]
    when _T_56 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_57 = data[UInt<4>("h0c")], clock @[TLB.scala 65:20]
      entry.r <= _T_57.entry.r @[TLB.scala 65:13]
      entry.w <= _T_57.entry.w @[TLB.scala 65:13]
      entry.x <= _T_57.entry.x @[TLB.scala 65:13]
      entry.u <= _T_57.entry.u @[TLB.scala 65:13]
      entry.a <= _T_57.entry.a @[TLB.scala 65:13]
      entry.d <= _T_57.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_57.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_58 = data[UInt<4>("h0d")], clock @[TLB.scala 63:27]
    node _T_59 = eq(_T_58.vpn, vpn) @[TLB.scala 63:35]
    node _T_60 = and(valid[13], _T_59) @[TLB.scala 63:20]
    when _T_60 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_61 = data[UInt<4>("h0d")], clock @[TLB.scala 65:20]
      entry.r <= _T_61.entry.r @[TLB.scala 65:13]
      entry.w <= _T_61.entry.w @[TLB.scala 65:13]
      entry.x <= _T_61.entry.x @[TLB.scala 65:13]
      entry.u <= _T_61.entry.u @[TLB.scala 65:13]
      entry.a <= _T_61.entry.a @[TLB.scala 65:13]
      entry.d <= _T_61.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_61.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_62 = data[UInt<4>("h0e")], clock @[TLB.scala 63:27]
    node _T_63 = eq(_T_62.vpn, vpn) @[TLB.scala 63:35]
    node _T_64 = and(valid[14], _T_63) @[TLB.scala 63:20]
    when _T_64 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_65 = data[UInt<4>("h0e")], clock @[TLB.scala 65:20]
      entry.r <= _T_65.entry.r @[TLB.scala 65:13]
      entry.w <= _T_65.entry.w @[TLB.scala 65:13]
      entry.x <= _T_65.entry.x @[TLB.scala 65:13]
      entry.u <= _T_65.entry.u @[TLB.scala 65:13]
      entry.a <= _T_65.entry.a @[TLB.scala 65:13]
      entry.d <= _T_65.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_65.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_66 = data[UInt<4>("h0f")], clock @[TLB.scala 63:27]
    node _T_67 = eq(_T_66.vpn, vpn) @[TLB.scala 63:35]
    node _T_68 = and(valid[15], _T_67) @[TLB.scala 63:20]
    when _T_68 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_69 = data[UInt<4>("h0f")], clock @[TLB.scala 65:20]
      entry.r <= _T_69.entry.r @[TLB.scala 65:13]
      entry.w <= _T_69.entry.w @[TLB.scala 65:13]
      entry.x <= _T_69.entry.x @[TLB.scala 65:13]
      entry.u <= _T_69.entry.u @[TLB.scala 65:13]
      entry.a <= _T_69.entry.a @[TLB.scala 65:13]
      entry.d <= _T_69.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_69.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    io.valid <= found @[TLB.scala 70:13]
    io.rent.r <= entry.r @[TLB.scala 71:13]
    io.rent.w <= entry.w @[TLB.scala 71:13]
    io.rent.x <= entry.x @[TLB.scala 71:13]
    io.rent.u <= entry.u @[TLB.scala 71:13]
    io.rent.a <= entry.a @[TLB.scala 71:13]
    io.rent.d <= entry.d @[TLB.scala 71:13]
    io.rent.ppn <= entry.ppn @[TLB.scala 71:13]
    
  module MMU : 
    input clock : Clock
    input reset : Reset
    output io : {flip en : UInt<1>, flip flush : UInt<1>, flip basePpn : UInt<22>, flip sum : UInt<1>, flip smode : UInt<1>, flip lookup : UInt<1>, flip write : UInt<1>, flip vaddr : UInt<32>, valid : UInt<1>, fault : UInt<1>, paddr : UInt<32>, data : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}}
    
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[MMU.scala 56:22]
    reg entry : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, clock @[MMU.scala 59:18]
    reg addr : UInt<32>, clock @[MMU.scala 60:18]
    reg level : UInt<1>, clock @[MMU.scala 61:18]
    node _T = bits(io.data.rdata, 31, 0) @[MMU.scala 62:28]
    wire pte : {ppn : UInt<22>, rsw : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>} @[MMU.scala 62:55]
    wire _T_1 : UInt<32>
    _T_1 <= _T
    node _T_2 = bits(_T_1, 0, 0) @[MMU.scala 62:55]
    pte.v <= _T_2 @[MMU.scala 62:55]
    node _T_3 = bits(_T_1, 1, 1) @[MMU.scala 62:55]
    pte.r <= _T_3 @[MMU.scala 62:55]
    node _T_4 = bits(_T_1, 2, 2) @[MMU.scala 62:55]
    pte.w <= _T_4 @[MMU.scala 62:55]
    node _T_5 = bits(_T_1, 3, 3) @[MMU.scala 62:55]
    pte.x <= _T_5 @[MMU.scala 62:55]
    node _T_6 = bits(_T_1, 4, 4) @[MMU.scala 62:55]
    pte.u <= _T_6 @[MMU.scala 62:55]
    node _T_7 = bits(_T_1, 5, 5) @[MMU.scala 62:55]
    pte.g <= _T_7 @[MMU.scala 62:55]
    node _T_8 = bits(_T_1, 6, 6) @[MMU.scala 62:55]
    pte.a <= _T_8 @[MMU.scala 62:55]
    node _T_9 = bits(_T_1, 7, 7) @[MMU.scala 62:55]
    pte.d <= _T_9 @[MMU.scala 62:55]
    node _T_10 = bits(_T_1, 9, 8) @[MMU.scala 62:55]
    pte.rsw <= _T_10 @[MMU.scala 62:55]
    node _T_11 = bits(_T_1, 31, 10) @[MMU.scala 62:55]
    pte.ppn <= _T_11 @[MMU.scala 62:55]
    inst tlb of TLB @[MMU.scala 65:19]
    tlb.clock <= clock
    tlb.reset <= reset
    tlb.io.flush <= io.flush @[MMU.scala 66:17]
    node _T_12 = eq(state, UInt<3>("h03")) @[MMU.scala 67:26]
    tlb.io.wen <= _T_12 @[MMU.scala 67:17]
    tlb.io.vaddr <= io.vaddr @[MMU.scala 68:17]
    tlb.io.went.r <= entry.r @[MMU.scala 69:17]
    tlb.io.went.w <= entry.w @[MMU.scala 69:17]
    tlb.io.went.x <= entry.x @[MMU.scala 69:17]
    tlb.io.went.u <= entry.u @[MMU.scala 69:17]
    tlb.io.went.a <= entry.a @[MMU.scala 69:17]
    tlb.io.went.d <= entry.d @[MMU.scala 69:17]
    tlb.io.went.ppn <= entry.ppn @[MMU.scala 69:17]
    node tlbFlush = eq(state, UInt<3>("h04")) @[MMU.scala 72:25]
    node _T_13 = eq(state, UInt<3>("h00")) @[MMU.scala 73:25]
    node tlbHit = and(_T_13, tlb.io.valid) @[MMU.scala 73:35]
    node _T_14 = eq(io.en, UInt<1>("h00")) @[MMU.scala 74:19]
    node _T_15 = or(_T_14, tlbFlush) @[MMU.scala 74:26]
    node valid = or(_T_15, tlbHit) @[MMU.scala 74:38]
    node _T_16 = eq(tlb.io.rent.a, UInt<1>("h00")) @[MMU.scala 77:17]
    node _T_17 = eq(tlb.io.rent.d, UInt<1>("h00")) @[MMU.scala 77:48]
    node _T_18 = and(io.write, _T_17) @[MMU.scala 77:45]
    node daFault = or(_T_16, _T_18) @[MMU.scala 77:32]
    node _T_19 = eq(tlb.io.rent.w, UInt<1>("h00")) @[MMU.scala 79:29]
    node wFault = and(io.write, _T_19) @[MMU.scala 79:26]
    node xFault = eq(tlb.io.rent.x, UInt<1>("h00")) @[MMU.scala 80:29]
    node _T_20 = eq(io.sum, UInt<1>("h00")) @[MMU.scala 81:29]
    node _T_21 = and(io.smode, _T_20) @[MMU.scala 81:26]
    node uFault = and(_T_21, tlb.io.rent.u) @[MMU.scala 81:37]
    node _T_22 = or(daFault, UInt<1>("h00")) @[MMU.scala 82:25]
    node _T_23 = or(_T_22, wFault) @[MMU.scala 82:35]
    node _T_24 = or(_T_23, xFault) @[MMU.scala 82:45]
    node vmFault = or(_T_24, uFault) @[MMU.scala 82:55]
    node fault = and(io.en, vmFault) @[MMU.scala 83:23]
    node voffset = bits(io.vaddr, 11, 0) @[MMU.scala 86:25]
    node _T_25 = cat(tlb.io.rent.ppn, voffset) @[Cat.scala 30:58]
    node tlbAddr = bits(_T_25, 31, 0) @[MMU.scala 87:46]
    node paddr = mux(io.en, tlbAddr, io.vaddr) @[MMU.scala 88:20]
    node _T_26 = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
    when _T_26 : @[Conditional.scala 40:58]
      when io.flush : @[MMU.scala 98:23]
        state <= UInt<3>("h04") @[MMU.scala 100:15]
        skip @[MMU.scala 98:23]
      else : @[MMU.scala 101:27]
        when io.en : @[MMU.scala 101:27]
          node _T_27 = eq(tlb.io.valid, UInt<1>("h00")) @[MMU.scala 103:28]
          node _T_28 = and(io.lookup, _T_27) @[MMU.scala 103:25]
          when _T_28 : @[MMU.scala 103:43]
            state <= UInt<3>("h01") @[MMU.scala 104:17]
            node _T_29 = shl(io.basePpn, 12) @[Paging.scala 41:12]
            node _T_30 = eq(UInt<1>("h01"), UInt<1>("h01")) @[Paging.scala 25:17]
            node _T_31 = bits(io.vaddr, 31, 22) @[Paging.scala 25:31]
            node _T_32 = bits(io.vaddr, 21, 12) @[Paging.scala 25:46]
            node _T_33 = mux(_T_30, _T_31, _T_32) @[Paging.scala 25:10]
            node _T_34 = shl(_T_33, 2) @[Paging.scala 41:51]
            node _T_35 = add(_T_29, _T_34) @[Paging.scala 41:27]
            node _T_36 = tail(_T_35, 1) @[Paging.scala 41:27]
            addr <= _T_36 @[MMU.scala 105:17]
            level <= UInt<1>("h01") @[MMU.scala 106:17]
            skip @[MMU.scala 103:43]
          skip @[MMU.scala 101:27]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_37 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
      when _T_37 : @[Conditional.scala 39:67]
        when io.data.valid : @[MMU.scala 112:28]
          state <= UInt<3>("h02") @[MMU.scala 113:15]
          skip @[MMU.scala 112:28]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_38 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
        when _T_38 : @[Conditional.scala 39:67]
          node _T_39 = eq(pte.v, UInt<1>("h00")) @[MMU.scala 118:13]
          node _T_40 = eq(pte.r, UInt<1>("h00")) @[MMU.scala 118:24]
          node _T_41 = and(_T_40, pte.w) @[MMU.scala 118:31]
          node _T_42 = or(_T_39, _T_41) @[MMU.scala 118:20]
          when _T_42 : @[MMU.scala 118:42]
            state <= UInt<3>("h03") @[MMU.scala 91:11]
            wire _T_43 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 92:26]
            _T_43.r <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_43.w <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_43.x <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_43.u <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_43.a <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_43.d <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_43.ppn <= UInt<22>("h00") @[MMU.scala 92:26]
            entry.r <= _T_43.r @[MMU.scala 92:11]
            entry.w <= _T_43.w @[MMU.scala 92:11]
            entry.x <= _T_43.x @[MMU.scala 92:11]
            entry.u <= _T_43.u @[MMU.scala 92:11]
            entry.a <= _T_43.a @[MMU.scala 92:11]
            entry.d <= _T_43.d @[MMU.scala 92:11]
            entry.ppn <= _T_43.ppn @[MMU.scala 92:11]
            skip @[MMU.scala 118:42]
          else : @[MMU.scala 121:36]
            node _T_44 = or(pte.r, pte.x) @[MMU.scala 121:26]
            when _T_44 : @[MMU.scala 121:36]
              node _T_45 = gt(level, UInt<1>("h00")) @[MMU.scala 122:21]
              node _T_46 = sub(level, UInt<1>("h01")) @[MMU.scala 122:58]
              node _T_47 = tail(_T_46, 1) @[MMU.scala 122:58]
              node _T_48 = eq(_T_47, UInt<1>("h01")) @[Paging.scala 37:17]
              node _T_49 = bits(pte.ppn, 21, 0) @[Paging.scala 37:29]
              node _T_50 = bits(pte.ppn, 9, 0) @[Paging.scala 37:41]
              node _T_51 = mux(_T_48, _T_49, _T_50) @[Paging.scala 37:10]
              node _T_52 = neq(_T_51, UInt<1>("h00")) @[MMU.scala 122:65]
              node _T_53 = and(_T_45, _T_52) @[MMU.scala 122:27]
              when _T_53 : @[MMU.scala 122:70]
                state <= UInt<3>("h03") @[MMU.scala 91:11]
                wire _T_54 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 92:26]
                _T_54.r <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_54.w <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_54.x <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_54.u <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_54.a <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_54.d <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_54.ppn <= UInt<22>("h00") @[MMU.scala 92:26]
                entry.r <= _T_54.r @[MMU.scala 92:11]
                entry.w <= _T_54.w @[MMU.scala 92:11]
                entry.x <= _T_54.x @[MMU.scala 92:11]
                entry.u <= _T_54.u @[MMU.scala 92:11]
                entry.a <= _T_54.a @[MMU.scala 92:11]
                entry.d <= _T_54.d @[MMU.scala 92:11]
                entry.ppn <= _T_54.ppn @[MMU.scala 92:11]
                skip @[MMU.scala 122:70]
              else : @[MMU.scala 125:22]
                state <= UInt<3>("h03") @[MMU.scala 127:17]
                wire _T_55 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 23:21]
                _T_55.ppn <= pte.ppn @[MMU.scala 24:15]
                _T_55.d <= pte.d @[MMU.scala 25:15]
                _T_55.a <= pte.a @[MMU.scala 26:15]
                _T_55.u <= pte.u @[MMU.scala 27:15]
                _T_55.x <= pte.x @[MMU.scala 28:15]
                _T_55.w <= pte.w @[MMU.scala 29:15]
                _T_55.r <= pte.r @[MMU.scala 30:15]
                entry.r <= _T_55.r @[MMU.scala 128:17]
                entry.w <= _T_55.w @[MMU.scala 128:17]
                entry.x <= _T_55.x @[MMU.scala 128:17]
                entry.u <= _T_55.u @[MMU.scala 128:17]
                entry.a <= _T_55.a @[MMU.scala 128:17]
                entry.d <= _T_55.d @[MMU.scala 128:17]
                entry.ppn <= _T_55.ppn @[MMU.scala 128:17]
                node _T_56 = gt(level, UInt<1>("h00")) @[MMU.scala 130:23]
                when _T_56 : @[MMU.scala 130:30]
                  node _T_57 = sub(level, UInt<1>("h01")) @[MMU.scala 131:63]
                  node _T_58 = tail(_T_57, 1) @[MMU.scala 131:63]
                  node _T_59 = eq(_T_58, UInt<1>("h01")) @[Paging.scala 37:17]
                  node _T_60 = bits(pte.ppn, 21, 0) @[Paging.scala 37:29]
                  node _T_61 = bits(pte.ppn, 9, 0) @[Paging.scala 37:41]
                  node _T_62 = mux(_T_59, _T_60, _T_61) @[Paging.scala 37:10]
                  node _T_63 = xor(pte.ppn, _T_62) @[Paging.scala 45:12]
                  node _T_64 = eq(_T_58, UInt<1>("h01")) @[Paging.scala 29:17]
                  node _T_65 = bits(io.vaddr, 31, 12) @[Paging.scala 29:31]
                  node _T_66 = bits(io.vaddr, 21, 12) @[Paging.scala 29:46]
                  node _T_67 = mux(_T_64, _T_65, _T_66) @[Paging.scala 29:10]
                  node _T_68 = or(_T_63, _T_67) @[Paging.scala 45:40]
                  entry.ppn <= _T_68 @[MMU.scala 131:23]
                  skip @[MMU.scala 130:30]
                skip @[MMU.scala 125:22]
              skip @[MMU.scala 121:36]
            else : @[MMU.scala 134:35]
              node _T_69 = eq(level, UInt<1>("h00")) @[MMU.scala 134:26]
              when _T_69 : @[MMU.scala 134:35]
                state <= UInt<3>("h03") @[MMU.scala 91:11]
                wire _T_70 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 92:26]
                _T_70.r <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_70.w <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_70.x <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_70.u <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_70.a <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_70.d <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_70.ppn <= UInt<22>("h00") @[MMU.scala 92:26]
                entry.r <= _T_70.r @[MMU.scala 92:11]
                entry.w <= _T_70.w @[MMU.scala 92:11]
                entry.x <= _T_70.x @[MMU.scala 92:11]
                entry.u <= _T_70.u @[MMU.scala 92:11]
                entry.a <= _T_70.a @[MMU.scala 92:11]
                entry.d <= _T_70.d @[MMU.scala 92:11]
                entry.ppn <= _T_70.ppn @[MMU.scala 92:11]
                skip @[MMU.scala 134:35]
              else : @[MMU.scala 137:20]
                state <= UInt<3>("h01") @[MMU.scala 139:15]
                node _T_71 = sub(level, UInt<1>("h01")) @[MMU.scala 140:54]
                node _T_72 = tail(_T_71, 1) @[MMU.scala 140:54]
                node _T_73 = shl(pte.ppn, 12) @[Paging.scala 41:12]
                node _T_74 = eq(_T_72, UInt<1>("h01")) @[Paging.scala 25:17]
                node _T_75 = bits(io.vaddr, 31, 22) @[Paging.scala 25:31]
                node _T_76 = bits(io.vaddr, 21, 12) @[Paging.scala 25:46]
                node _T_77 = mux(_T_74, _T_75, _T_76) @[Paging.scala 25:10]
                node _T_78 = shl(_T_77, 2) @[Paging.scala 41:51]
                node _T_79 = add(_T_73, _T_78) @[Paging.scala 41:27]
                node _T_80 = tail(_T_79, 1) @[Paging.scala 41:27]
                addr <= _T_80 @[MMU.scala 140:15]
                node _T_81 = sub(level, UInt<1>("h01")) @[MMU.scala 141:24]
                node _T_82 = tail(_T_81, 1) @[MMU.scala 141:24]
                level <= _T_82 @[MMU.scala 141:15]
                skip @[MMU.scala 137:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_83 = eq(UInt<3>("h03"), state) @[Conditional.scala 37:30]
          when _T_83 : @[Conditional.scala 39:67]
            state <= UInt<3>("h00") @[MMU.scala 146:13]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_84 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
            when _T_84 : @[Conditional.scala 39:67]
              node _T_85 = eq(io.flush, UInt<1>("h00")) @[MMU.scala 150:13]
              when _T_85 : @[MMU.scala 150:24]
                state <= UInt<3>("h00") @[MMU.scala 150:32]
                skip @[MMU.scala 150:24]
              skip @[Conditional.scala 39:67]
    node _T_86 = eq(state, UInt<3>("h01")) @[MMU.scala 155:26]
    io.data.en <= _T_86 @[MMU.scala 155:17]
    io.data.wen <= UInt<1>("h00") @[MMU.scala 156:17]
    io.data.addr <= addr @[MMU.scala 157:17]
    io.data.wdata <= UInt<1>("h00") @[MMU.scala 158:17]
    io.valid <= valid @[MMU.scala 161:13]
    node _T_87 = and(valid, fault) @[MMU.scala 162:22]
    io.fault <= _T_87 @[MMU.scala 162:13]
    io.paddr <= paddr @[MMU.scala 163:13]
    
  module SramDemux2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip sel2 : UInt<1>, flip in1 : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flip in2 : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, out : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}}
    
    node _T = eq(io.sel2, UInt<1>("h00")) @[SramUtils.scala 41:20]
    node _T_1 = and(_T, io.out.valid) @[SramUtils.scala 41:29]
    io.in1.valid <= _T_1 @[SramUtils.scala 41:17]
    node _T_2 = eq(io.sel2, UInt<1>("h00")) @[SramUtils.scala 42:20]
    node _T_3 = and(_T_2, io.out.fault) @[SramUtils.scala 42:29]
    io.in1.fault <= _T_3 @[SramUtils.scala 42:17]
    io.in1.rdata <= io.out.rdata @[SramUtils.scala 43:17]
    node _T_4 = and(io.sel2, io.out.valid) @[SramUtils.scala 45:28]
    io.in2.valid <= _T_4 @[SramUtils.scala 45:17]
    node _T_5 = and(io.sel2, io.out.fault) @[SramUtils.scala 46:28]
    io.in2.fault <= _T_5 @[SramUtils.scala 46:17]
    io.in2.rdata <= io.out.rdata @[SramUtils.scala 47:17]
    node _T_6 = mux(io.sel2, io.in2.en, io.in1.en) @[SramUtils.scala 49:23]
    io.out.en <= _T_6 @[SramUtils.scala 49:17]
    node _T_7 = mux(io.sel2, io.in2.wen, io.in1.wen) @[SramUtils.scala 50:23]
    io.out.wen <= _T_7 @[SramUtils.scala 50:17]
    node _T_8 = mux(io.sel2, io.in2.addr, io.in1.addr) @[SramUtils.scala 51:23]
    io.out.addr <= _T_8 @[SramUtils.scala 51:17]
    node _T_9 = mux(io.sel2, io.in2.wdata, io.in1.wdata) @[SramUtils.scala 52:23]
    io.out.wdata <= _T_9 @[SramUtils.scala 52:17]
    
  module InstCache : 
    input clock : Clock
    input reset : Reset
    output io : {flip sram : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flip flush : UInt<1>, axi : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}}
    
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[InstCache.scala 30:22]
    wire _T : UInt<1>[64] @[InstCache.scala 33:30]
    _T[0] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[1] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[2] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[3] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[4] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[5] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[6] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[7] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[8] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[9] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[10] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[11] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[12] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[13] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[14] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[15] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[16] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[17] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[18] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[19] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[20] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[21] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[22] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[23] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[24] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[25] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[26] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[27] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[28] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[29] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[30] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[31] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[32] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[33] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[34] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[35] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[36] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[37] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[38] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[39] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[40] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[41] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[42] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[43] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[44] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[45] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[46] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[47] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[48] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[49] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[50] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[51] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[52] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[53] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[54] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[55] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[56] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[57] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[58] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[59] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[60] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[61] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[62] <= UInt<1>("h00") @[InstCache.scala 33:30]
    _T[63] <= UInt<1>("h00") @[InstCache.scala 33:30]
    reg valid : UInt<1>[64], clock with : (reset => (reset, _T)) @[InstCache.scala 33:22]
    cmem tag : UInt<20>[64] @[InstCache.scala 34:18]
    smem lines : UInt<32>[1024] @[InstCache.scala 35:26]
    reg ren : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[InstCache.scala 38:28]
    reg raddr : UInt<32>, clock @[InstCache.scala 39:24]
    reg dataOffset : UInt<4>, clock @[InstCache.scala 40:24]
    reg sramAddr : UInt<32>, clock @[InstCache.scala 43:24]
    node _T_1 = eq(state, UInt<2>("h00")) @[InstCache.scala 44:31]
    node selAddr = mux(_T_1, io.sram.addr, sramAddr) @[InstCache.scala 44:24]
    node tagSel = bits(selAddr, 31, 12) @[InstCache.scala 45:28]
    node lineSel = bits(selAddr, 11, 6) @[InstCache.scala 47:28]
    node lineDataSel = bits(selAddr, 11, 2) @[InstCache.scala 49:28]
    node dataSel = cat(lineSel, dataOffset) @[Cat.scala 30:58]
    node _T_2 = cat(tagSel, lineSel) @[Cat.scala 30:58]
    node startAddr = cat(_T_2, UInt<6>("h00")) @[Cat.scala 30:58]
    infer mport _T_3 = tag[lineSel], clock @[InstCache.scala 53:42]
    node _T_4 = eq(_T_3, tagSel) @[InstCache.scala 53:52]
    node cacheHit = and(valid[lineSel], _T_4) @[InstCache.scala 53:36]
    node _T_5 = eq(UInt<2>("h00"), state) @[Conditional.scala 37:30]
    when _T_5 : @[Conditional.scala 40:58]
      when io.flush : @[InstCache.scala 59:23]
        valid[0] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[1] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[2] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[3] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[4] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[5] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[6] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[7] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[8] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[9] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[10] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[11] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[12] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[13] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[14] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[15] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[16] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[17] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[18] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[19] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[20] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[21] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[22] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[23] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[24] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[25] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[26] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[27] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[28] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[29] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[30] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[31] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[32] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[33] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[34] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[35] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[36] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[37] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[38] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[39] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[40] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[41] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[42] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[43] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[44] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[45] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[46] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[47] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[48] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[49] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[50] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[51] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[52] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[53] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[54] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[55] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[56] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[57] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[58] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[59] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[60] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[61] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[62] <= UInt<1>("h00") @[InstCache.scala 61:30]
        valid[63] <= UInt<1>("h00") @[InstCache.scala 61:30]
        state <= UInt<2>("h00") @[InstCache.scala 63:15]
        skip @[InstCache.scala 59:23]
      else : @[InstCache.scala 64:45]
        node _T_6 = eq(cacheHit, UInt<1>("h00")) @[InstCache.scala 64:34]
        node _T_7 = and(io.sram.en, _T_6) @[InstCache.scala 64:31]
        when _T_7 : @[InstCache.scala 64:45]
          ren <= UInt<1>("h01") @[InstCache.scala 66:19]
          raddr <= startAddr @[InstCache.scala 67:19]
          sramAddr <= io.sram.addr @[InstCache.scala 68:19]
          state <= UInt<2>("h01") @[InstCache.scala 69:19]
          skip @[InstCache.scala 64:45]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_8 = eq(UInt<2>("h01"), state) @[Conditional.scala 37:30]
      when _T_8 : @[Conditional.scala 39:67]
        when io.axi.readAddr.ready : @[InstCache.scala 74:36]
          ren <= UInt<1>("h00") @[InstCache.scala 76:21]
          dataOffset <= UInt<1>("h00") @[InstCache.scala 77:21]
          state <= UInt<2>("h02") @[InstCache.scala 78:21]
          skip @[InstCache.scala 74:36]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_9 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
        when _T_9 : @[Conditional.scala 39:67]
          when io.axi.readData.valid : @[InstCache.scala 83:36]
            node _T_10 = add(dataOffset, UInt<1>("h01")) @[InstCache.scala 84:34]
            node _T_11 = tail(_T_10, 1) @[InstCache.scala 84:34]
            dataOffset <= _T_11 @[InstCache.scala 84:20]
            write mport _T_12 = lines[dataSel], clock
            _T_12 <= io.axi.readData.bits.data
            skip @[InstCache.scala 83:36]
          node _T_13 = and(io.axi.readData.valid, io.axi.readData.bits.last) @[InstCache.scala 88:35]
          when _T_13 : @[InstCache.scala 88:65]
            state <= UInt<2>("h03") @[InstCache.scala 89:15]
            skip @[InstCache.scala 88:65]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_14 = eq(UInt<2>("h03"), state) @[Conditional.scala 37:30]
          when _T_14 : @[Conditional.scala 39:67]
            valid[lineSel] <= UInt<1>("h01") @[InstCache.scala 94:23]
            infer mport _T_15 = tag[lineSel], clock @[InstCache.scala 95:10]
            _T_15 <= tagSel @[InstCache.scala 95:23]
            state <= UInt<2>("h00") @[InstCache.scala 96:23]
            skip @[Conditional.scala 39:67]
    node _T_16 = eq(state, UInt<2>("h00")) @[InstCache.scala 101:26]
    node _T_17 = and(_T_16, cacheHit) @[InstCache.scala 101:36]
    io.sram.valid <= _T_17 @[InstCache.scala 101:17]
    io.sram.fault <= UInt<1>("h00") @[InstCache.scala 102:17]
    read mport _T_18 = lines[lineDataSel], clock @[InstCache.scala 103:30]
    io.sram.rdata <= _T_18 @[InstCache.scala 103:17]
    wire _T_19 : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>} @[AXI.scala 9:36]
    _T_19.prot <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_19.cache <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_19.lock <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_19.burst <= UInt<2>("h00") @[AXI.scala 9:36]
    _T_19.len <= UInt<8>("h00") @[AXI.scala 9:36]
    _T_19.size <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_19.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_19.addr <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.readAddr.bits.prot <= _T_19.prot @[AXI.scala 9:21]
    io.axi.readAddr.bits.cache <= _T_19.cache @[AXI.scala 9:21]
    io.axi.readAddr.bits.lock <= _T_19.lock @[AXI.scala 9:21]
    io.axi.readAddr.bits.burst <= _T_19.burst @[AXI.scala 9:21]
    io.axi.readAddr.bits.len <= _T_19.len @[AXI.scala 9:21]
    io.axi.readAddr.bits.size <= _T_19.size @[AXI.scala 9:21]
    io.axi.readAddr.bits.id <= _T_19.id @[AXI.scala 9:21]
    io.axi.readAddr.bits.addr <= _T_19.addr @[AXI.scala 9:21]
    io.axi.readAddr.valid <= UInt<1>("h00") @[AXI.scala 56:20]
    io.axi.readData.ready <= UInt<1>("h00") @[AXI.scala 57:20]
    wire _T_20 : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>} @[AXI.scala 9:36]
    _T_20.prot <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_20.cache <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_20.lock <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_20.burst <= UInt<2>("h00") @[AXI.scala 9:36]
    _T_20.len <= UInt<8>("h00") @[AXI.scala 9:36]
    _T_20.size <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_20.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_20.addr <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.writeAddr.bits.prot <= _T_20.prot @[AXI.scala 9:21]
    io.axi.writeAddr.bits.cache <= _T_20.cache @[AXI.scala 9:21]
    io.axi.writeAddr.bits.lock <= _T_20.lock @[AXI.scala 9:21]
    io.axi.writeAddr.bits.burst <= _T_20.burst @[AXI.scala 9:21]
    io.axi.writeAddr.bits.len <= _T_20.len @[AXI.scala 9:21]
    io.axi.writeAddr.bits.size <= _T_20.size @[AXI.scala 9:21]
    io.axi.writeAddr.bits.id <= _T_20.id @[AXI.scala 9:21]
    io.axi.writeAddr.bits.addr <= _T_20.addr @[AXI.scala 9:21]
    io.axi.writeAddr.valid <= UInt<1>("h00") @[AXI.scala 59:21]
    wire _T_21 : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>} @[AXI.scala 9:36]
    _T_21.strb <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_21.last <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_21.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_21.data <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.writeData.bits.strb <= _T_21.strb @[AXI.scala 9:21]
    io.axi.writeData.bits.last <= _T_21.last @[AXI.scala 9:21]
    io.axi.writeData.bits.id <= _T_21.id @[AXI.scala 9:21]
    io.axi.writeData.bits.data <= _T_21.data @[AXI.scala 9:21]
    io.axi.writeData.valid <= UInt<1>("h00") @[AXI.scala 61:21]
    io.axi.writeResp.ready <= UInt<1>("h00") @[AXI.scala 62:21]
    io.axi.readAddr.valid <= ren @[InstCache.scala 107:31]
    io.axi.readAddr.bits.addr <= raddr @[InstCache.scala 108:31]
    io.axi.readAddr.bits.size <= UInt<2>("h02") @[InstCache.scala 109:31]
    io.axi.readAddr.bits.len <= UInt<4>("h0f") @[InstCache.scala 110:31]
    io.axi.readAddr.bits.burst <= UInt<1>("h01") @[InstCache.scala 111:31]
    io.axi.readData.ready <= UInt<1>("h01") @[InstCache.scala 112:31]
    
  module TLB_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush : UInt<1>, flip wen : UInt<1>, flip vaddr : UInt<32>, flip went : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, valid : UInt<1>, rent : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}}
    
    wire _T : UInt<1>[16] @[TLB.scala 36:30]
    _T[0] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[1] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[2] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[3] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[4] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[5] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[6] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[7] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[8] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[9] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[10] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[11] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[12] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[13] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[14] <= UInt<1>("h00") @[TLB.scala 36:30]
    _T[15] <= UInt<1>("h00") @[TLB.scala 36:30]
    reg valid : UInt<1>[16], clock with : (reset => (reset, _T)) @[TLB.scala 36:22]
    cmem data : {vpn : UInt<20>, entry : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}}[16] @[TLB.scala 37:18]
    reg pointer : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[TLB.scala 43:24]
    node vpn = bits(io.vaddr, 31, 12) @[TLB.scala 44:25]
    when io.flush : @[TLB.scala 47:19]
      valid[0] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[1] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[2] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[3] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[4] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[5] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[6] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[7] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[8] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[9] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[10] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[11] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[12] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[13] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[14] <= UInt<1>("h00") @[TLB.scala 49:26]
      valid[15] <= UInt<1>("h00") @[TLB.scala 49:26]
      skip @[TLB.scala 47:19]
    else : @[TLB.scala 50:24]
      when io.wen : @[TLB.scala 50:24]
        valid[pointer] <= UInt<1>("h01") @[TLB.scala 52:25]
        infer mport _T_1 = data[pointer], clock @[TLB.scala 53:9]
        _T_1.vpn <= vpn @[TLB.scala 53:25]
        infer mport _T_2 = data[pointer], clock @[TLB.scala 54:9]
        _T_2.entry.r <= io.went.r @[TLB.scala 54:25]
        _T_2.entry.w <= io.went.w @[TLB.scala 54:25]
        _T_2.entry.x <= io.went.x @[TLB.scala 54:25]
        _T_2.entry.u <= io.went.u @[TLB.scala 54:25]
        _T_2.entry.a <= io.went.a @[TLB.scala 54:25]
        _T_2.entry.d <= io.went.d @[TLB.scala 54:25]
        _T_2.entry.ppn <= io.went.ppn @[TLB.scala 54:25]
        node _T_3 = add(pointer, UInt<1>("h01")) @[TLB.scala 56:24]
        node _T_4 = tail(_T_3, 1) @[TLB.scala 56:24]
        pointer <= _T_4 @[TLB.scala 56:13]
        skip @[TLB.scala 50:24]
    wire found : UInt<1>
    found <= UInt<1>("h00")
    wire _T_5 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[TLB.scala 61:36]
    _T_5.r <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.w <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.x <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.u <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.a <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.d <= UInt<1>("h00") @[TLB.scala 61:36]
    _T_5.ppn <= UInt<22>("h00") @[TLB.scala 61:36]
    wire entry : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}
    entry.r <= _T_5.r
    entry.w <= _T_5.w
    entry.x <= _T_5.x
    entry.u <= _T_5.u
    entry.a <= _T_5.a
    entry.d <= _T_5.d
    entry.ppn <= _T_5.ppn
    infer mport _T_6 = data[UInt<1>("h00")], clock @[TLB.scala 63:27]
    node _T_7 = eq(_T_6.vpn, vpn) @[TLB.scala 63:35]
    node _T_8 = and(valid[0], _T_7) @[TLB.scala 63:20]
    when _T_8 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_9 = data[UInt<1>("h00")], clock @[TLB.scala 65:20]
      entry.r <= _T_9.entry.r @[TLB.scala 65:13]
      entry.w <= _T_9.entry.w @[TLB.scala 65:13]
      entry.x <= _T_9.entry.x @[TLB.scala 65:13]
      entry.u <= _T_9.entry.u @[TLB.scala 65:13]
      entry.a <= _T_9.entry.a @[TLB.scala 65:13]
      entry.d <= _T_9.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_9.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_10 = data[UInt<1>("h01")], clock @[TLB.scala 63:27]
    node _T_11 = eq(_T_10.vpn, vpn) @[TLB.scala 63:35]
    node _T_12 = and(valid[1], _T_11) @[TLB.scala 63:20]
    when _T_12 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_13 = data[UInt<1>("h01")], clock @[TLB.scala 65:20]
      entry.r <= _T_13.entry.r @[TLB.scala 65:13]
      entry.w <= _T_13.entry.w @[TLB.scala 65:13]
      entry.x <= _T_13.entry.x @[TLB.scala 65:13]
      entry.u <= _T_13.entry.u @[TLB.scala 65:13]
      entry.a <= _T_13.entry.a @[TLB.scala 65:13]
      entry.d <= _T_13.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_13.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_14 = data[UInt<2>("h02")], clock @[TLB.scala 63:27]
    node _T_15 = eq(_T_14.vpn, vpn) @[TLB.scala 63:35]
    node _T_16 = and(valid[2], _T_15) @[TLB.scala 63:20]
    when _T_16 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_17 = data[UInt<2>("h02")], clock @[TLB.scala 65:20]
      entry.r <= _T_17.entry.r @[TLB.scala 65:13]
      entry.w <= _T_17.entry.w @[TLB.scala 65:13]
      entry.x <= _T_17.entry.x @[TLB.scala 65:13]
      entry.u <= _T_17.entry.u @[TLB.scala 65:13]
      entry.a <= _T_17.entry.a @[TLB.scala 65:13]
      entry.d <= _T_17.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_17.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_18 = data[UInt<2>("h03")], clock @[TLB.scala 63:27]
    node _T_19 = eq(_T_18.vpn, vpn) @[TLB.scala 63:35]
    node _T_20 = and(valid[3], _T_19) @[TLB.scala 63:20]
    when _T_20 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_21 = data[UInt<2>("h03")], clock @[TLB.scala 65:20]
      entry.r <= _T_21.entry.r @[TLB.scala 65:13]
      entry.w <= _T_21.entry.w @[TLB.scala 65:13]
      entry.x <= _T_21.entry.x @[TLB.scala 65:13]
      entry.u <= _T_21.entry.u @[TLB.scala 65:13]
      entry.a <= _T_21.entry.a @[TLB.scala 65:13]
      entry.d <= _T_21.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_21.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_22 = data[UInt<3>("h04")], clock @[TLB.scala 63:27]
    node _T_23 = eq(_T_22.vpn, vpn) @[TLB.scala 63:35]
    node _T_24 = and(valid[4], _T_23) @[TLB.scala 63:20]
    when _T_24 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_25 = data[UInt<3>("h04")], clock @[TLB.scala 65:20]
      entry.r <= _T_25.entry.r @[TLB.scala 65:13]
      entry.w <= _T_25.entry.w @[TLB.scala 65:13]
      entry.x <= _T_25.entry.x @[TLB.scala 65:13]
      entry.u <= _T_25.entry.u @[TLB.scala 65:13]
      entry.a <= _T_25.entry.a @[TLB.scala 65:13]
      entry.d <= _T_25.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_25.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_26 = data[UInt<3>("h05")], clock @[TLB.scala 63:27]
    node _T_27 = eq(_T_26.vpn, vpn) @[TLB.scala 63:35]
    node _T_28 = and(valid[5], _T_27) @[TLB.scala 63:20]
    when _T_28 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_29 = data[UInt<3>("h05")], clock @[TLB.scala 65:20]
      entry.r <= _T_29.entry.r @[TLB.scala 65:13]
      entry.w <= _T_29.entry.w @[TLB.scala 65:13]
      entry.x <= _T_29.entry.x @[TLB.scala 65:13]
      entry.u <= _T_29.entry.u @[TLB.scala 65:13]
      entry.a <= _T_29.entry.a @[TLB.scala 65:13]
      entry.d <= _T_29.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_29.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_30 = data[UInt<3>("h06")], clock @[TLB.scala 63:27]
    node _T_31 = eq(_T_30.vpn, vpn) @[TLB.scala 63:35]
    node _T_32 = and(valid[6], _T_31) @[TLB.scala 63:20]
    when _T_32 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_33 = data[UInt<3>("h06")], clock @[TLB.scala 65:20]
      entry.r <= _T_33.entry.r @[TLB.scala 65:13]
      entry.w <= _T_33.entry.w @[TLB.scala 65:13]
      entry.x <= _T_33.entry.x @[TLB.scala 65:13]
      entry.u <= _T_33.entry.u @[TLB.scala 65:13]
      entry.a <= _T_33.entry.a @[TLB.scala 65:13]
      entry.d <= _T_33.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_33.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_34 = data[UInt<3>("h07")], clock @[TLB.scala 63:27]
    node _T_35 = eq(_T_34.vpn, vpn) @[TLB.scala 63:35]
    node _T_36 = and(valid[7], _T_35) @[TLB.scala 63:20]
    when _T_36 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_37 = data[UInt<3>("h07")], clock @[TLB.scala 65:20]
      entry.r <= _T_37.entry.r @[TLB.scala 65:13]
      entry.w <= _T_37.entry.w @[TLB.scala 65:13]
      entry.x <= _T_37.entry.x @[TLB.scala 65:13]
      entry.u <= _T_37.entry.u @[TLB.scala 65:13]
      entry.a <= _T_37.entry.a @[TLB.scala 65:13]
      entry.d <= _T_37.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_37.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_38 = data[UInt<4>("h08")], clock @[TLB.scala 63:27]
    node _T_39 = eq(_T_38.vpn, vpn) @[TLB.scala 63:35]
    node _T_40 = and(valid[8], _T_39) @[TLB.scala 63:20]
    when _T_40 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_41 = data[UInt<4>("h08")], clock @[TLB.scala 65:20]
      entry.r <= _T_41.entry.r @[TLB.scala 65:13]
      entry.w <= _T_41.entry.w @[TLB.scala 65:13]
      entry.x <= _T_41.entry.x @[TLB.scala 65:13]
      entry.u <= _T_41.entry.u @[TLB.scala 65:13]
      entry.a <= _T_41.entry.a @[TLB.scala 65:13]
      entry.d <= _T_41.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_41.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_42 = data[UInt<4>("h09")], clock @[TLB.scala 63:27]
    node _T_43 = eq(_T_42.vpn, vpn) @[TLB.scala 63:35]
    node _T_44 = and(valid[9], _T_43) @[TLB.scala 63:20]
    when _T_44 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_45 = data[UInt<4>("h09")], clock @[TLB.scala 65:20]
      entry.r <= _T_45.entry.r @[TLB.scala 65:13]
      entry.w <= _T_45.entry.w @[TLB.scala 65:13]
      entry.x <= _T_45.entry.x @[TLB.scala 65:13]
      entry.u <= _T_45.entry.u @[TLB.scala 65:13]
      entry.a <= _T_45.entry.a @[TLB.scala 65:13]
      entry.d <= _T_45.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_45.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_46 = data[UInt<4>("h0a")], clock @[TLB.scala 63:27]
    node _T_47 = eq(_T_46.vpn, vpn) @[TLB.scala 63:35]
    node _T_48 = and(valid[10], _T_47) @[TLB.scala 63:20]
    when _T_48 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_49 = data[UInt<4>("h0a")], clock @[TLB.scala 65:20]
      entry.r <= _T_49.entry.r @[TLB.scala 65:13]
      entry.w <= _T_49.entry.w @[TLB.scala 65:13]
      entry.x <= _T_49.entry.x @[TLB.scala 65:13]
      entry.u <= _T_49.entry.u @[TLB.scala 65:13]
      entry.a <= _T_49.entry.a @[TLB.scala 65:13]
      entry.d <= _T_49.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_49.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_50 = data[UInt<4>("h0b")], clock @[TLB.scala 63:27]
    node _T_51 = eq(_T_50.vpn, vpn) @[TLB.scala 63:35]
    node _T_52 = and(valid[11], _T_51) @[TLB.scala 63:20]
    when _T_52 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_53 = data[UInt<4>("h0b")], clock @[TLB.scala 65:20]
      entry.r <= _T_53.entry.r @[TLB.scala 65:13]
      entry.w <= _T_53.entry.w @[TLB.scala 65:13]
      entry.x <= _T_53.entry.x @[TLB.scala 65:13]
      entry.u <= _T_53.entry.u @[TLB.scala 65:13]
      entry.a <= _T_53.entry.a @[TLB.scala 65:13]
      entry.d <= _T_53.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_53.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_54 = data[UInt<4>("h0c")], clock @[TLB.scala 63:27]
    node _T_55 = eq(_T_54.vpn, vpn) @[TLB.scala 63:35]
    node _T_56 = and(valid[12], _T_55) @[TLB.scala 63:20]
    when _T_56 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_57 = data[UInt<4>("h0c")], clock @[TLB.scala 65:20]
      entry.r <= _T_57.entry.r @[TLB.scala 65:13]
      entry.w <= _T_57.entry.w @[TLB.scala 65:13]
      entry.x <= _T_57.entry.x @[TLB.scala 65:13]
      entry.u <= _T_57.entry.u @[TLB.scala 65:13]
      entry.a <= _T_57.entry.a @[TLB.scala 65:13]
      entry.d <= _T_57.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_57.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_58 = data[UInt<4>("h0d")], clock @[TLB.scala 63:27]
    node _T_59 = eq(_T_58.vpn, vpn) @[TLB.scala 63:35]
    node _T_60 = and(valid[13], _T_59) @[TLB.scala 63:20]
    when _T_60 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_61 = data[UInt<4>("h0d")], clock @[TLB.scala 65:20]
      entry.r <= _T_61.entry.r @[TLB.scala 65:13]
      entry.w <= _T_61.entry.w @[TLB.scala 65:13]
      entry.x <= _T_61.entry.x @[TLB.scala 65:13]
      entry.u <= _T_61.entry.u @[TLB.scala 65:13]
      entry.a <= _T_61.entry.a @[TLB.scala 65:13]
      entry.d <= _T_61.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_61.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_62 = data[UInt<4>("h0e")], clock @[TLB.scala 63:27]
    node _T_63 = eq(_T_62.vpn, vpn) @[TLB.scala 63:35]
    node _T_64 = and(valid[14], _T_63) @[TLB.scala 63:20]
    when _T_64 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_65 = data[UInt<4>("h0e")], clock @[TLB.scala 65:20]
      entry.r <= _T_65.entry.r @[TLB.scala 65:13]
      entry.w <= _T_65.entry.w @[TLB.scala 65:13]
      entry.x <= _T_65.entry.x @[TLB.scala 65:13]
      entry.u <= _T_65.entry.u @[TLB.scala 65:13]
      entry.a <= _T_65.entry.a @[TLB.scala 65:13]
      entry.d <= _T_65.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_65.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    infer mport _T_66 = data[UInt<4>("h0f")], clock @[TLB.scala 63:27]
    node _T_67 = eq(_T_66.vpn, vpn) @[TLB.scala 63:35]
    node _T_68 = and(valid[15], _T_67) @[TLB.scala 63:20]
    when _T_68 : @[TLB.scala 63:44]
      found <= UInt<1>("h01") @[TLB.scala 64:13]
      infer mport _T_69 = data[UInt<4>("h0f")], clock @[TLB.scala 65:20]
      entry.r <= _T_69.entry.r @[TLB.scala 65:13]
      entry.w <= _T_69.entry.w @[TLB.scala 65:13]
      entry.x <= _T_69.entry.x @[TLB.scala 65:13]
      entry.u <= _T_69.entry.u @[TLB.scala 65:13]
      entry.a <= _T_69.entry.a @[TLB.scala 65:13]
      entry.d <= _T_69.entry.d @[TLB.scala 65:13]
      entry.ppn <= _T_69.entry.ppn @[TLB.scala 65:13]
      skip @[TLB.scala 63:44]
    io.valid <= found @[TLB.scala 70:13]
    io.rent.r <= entry.r @[TLB.scala 71:13]
    io.rent.w <= entry.w @[TLB.scala 71:13]
    io.rent.x <= entry.x @[TLB.scala 71:13]
    io.rent.u <= entry.u @[TLB.scala 71:13]
    io.rent.a <= entry.a @[TLB.scala 71:13]
    io.rent.d <= entry.d @[TLB.scala 71:13]
    io.rent.ppn <= entry.ppn @[TLB.scala 71:13]
    
  module MMU_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip en : UInt<1>, flip flush : UInt<1>, flip basePpn : UInt<22>, flip sum : UInt<1>, flip smode : UInt<1>, flip lookup : UInt<1>, flip write : UInt<1>, flip vaddr : UInt<32>, valid : UInt<1>, fault : UInt<1>, paddr : UInt<32>, data : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}}
    
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[MMU.scala 56:22]
    reg entry : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, clock @[MMU.scala 59:18]
    reg addr : UInt<32>, clock @[MMU.scala 60:18]
    reg level : UInt<1>, clock @[MMU.scala 61:18]
    node _T = bits(io.data.rdata, 31, 0) @[MMU.scala 62:28]
    wire pte : {ppn : UInt<22>, rsw : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>} @[MMU.scala 62:55]
    wire _T_1 : UInt<32>
    _T_1 <= _T
    node _T_2 = bits(_T_1, 0, 0) @[MMU.scala 62:55]
    pte.v <= _T_2 @[MMU.scala 62:55]
    node _T_3 = bits(_T_1, 1, 1) @[MMU.scala 62:55]
    pte.r <= _T_3 @[MMU.scala 62:55]
    node _T_4 = bits(_T_1, 2, 2) @[MMU.scala 62:55]
    pte.w <= _T_4 @[MMU.scala 62:55]
    node _T_5 = bits(_T_1, 3, 3) @[MMU.scala 62:55]
    pte.x <= _T_5 @[MMU.scala 62:55]
    node _T_6 = bits(_T_1, 4, 4) @[MMU.scala 62:55]
    pte.u <= _T_6 @[MMU.scala 62:55]
    node _T_7 = bits(_T_1, 5, 5) @[MMU.scala 62:55]
    pte.g <= _T_7 @[MMU.scala 62:55]
    node _T_8 = bits(_T_1, 6, 6) @[MMU.scala 62:55]
    pte.a <= _T_8 @[MMU.scala 62:55]
    node _T_9 = bits(_T_1, 7, 7) @[MMU.scala 62:55]
    pte.d <= _T_9 @[MMU.scala 62:55]
    node _T_10 = bits(_T_1, 9, 8) @[MMU.scala 62:55]
    pte.rsw <= _T_10 @[MMU.scala 62:55]
    node _T_11 = bits(_T_1, 31, 10) @[MMU.scala 62:55]
    pte.ppn <= _T_11 @[MMU.scala 62:55]
    inst tlb of TLB_1 @[MMU.scala 65:19]
    tlb.clock <= clock
    tlb.reset <= reset
    tlb.io.flush <= io.flush @[MMU.scala 66:17]
    node _T_12 = eq(state, UInt<3>("h03")) @[MMU.scala 67:26]
    tlb.io.wen <= _T_12 @[MMU.scala 67:17]
    tlb.io.vaddr <= io.vaddr @[MMU.scala 68:17]
    tlb.io.went.r <= entry.r @[MMU.scala 69:17]
    tlb.io.went.w <= entry.w @[MMU.scala 69:17]
    tlb.io.went.x <= entry.x @[MMU.scala 69:17]
    tlb.io.went.u <= entry.u @[MMU.scala 69:17]
    tlb.io.went.a <= entry.a @[MMU.scala 69:17]
    tlb.io.went.d <= entry.d @[MMU.scala 69:17]
    tlb.io.went.ppn <= entry.ppn @[MMU.scala 69:17]
    node tlbFlush = eq(state, UInt<3>("h04")) @[MMU.scala 72:25]
    node _T_13 = eq(state, UInt<3>("h00")) @[MMU.scala 73:25]
    node tlbHit = and(_T_13, tlb.io.valid) @[MMU.scala 73:35]
    node _T_14 = eq(io.en, UInt<1>("h00")) @[MMU.scala 74:19]
    node _T_15 = or(_T_14, tlbFlush) @[MMU.scala 74:26]
    node valid = or(_T_15, tlbHit) @[MMU.scala 74:38]
    node _T_16 = eq(tlb.io.rent.a, UInt<1>("h00")) @[MMU.scala 77:17]
    node _T_17 = eq(tlb.io.rent.d, UInt<1>("h00")) @[MMU.scala 77:48]
    node _T_18 = and(io.write, _T_17) @[MMU.scala 77:45]
    node daFault = or(_T_16, _T_18) @[MMU.scala 77:32]
    node _T_19 = eq(io.write, UInt<1>("h00")) @[MMU.scala 78:30]
    node _T_20 = eq(tlb.io.rent.r, UInt<1>("h00")) @[MMU.scala 78:43]
    node rFault = and(_T_19, _T_20) @[MMU.scala 78:40]
    node _T_21 = eq(tlb.io.rent.w, UInt<1>("h00")) @[MMU.scala 79:29]
    node wFault = and(io.write, _T_21) @[MMU.scala 79:26]
    node _T_22 = eq(io.sum, UInt<1>("h00")) @[MMU.scala 81:29]
    node _T_23 = and(io.smode, _T_22) @[MMU.scala 81:26]
    node uFault = and(_T_23, tlb.io.rent.u) @[MMU.scala 81:37]
    node _T_24 = or(daFault, rFault) @[MMU.scala 82:25]
    node _T_25 = or(_T_24, wFault) @[MMU.scala 82:35]
    node _T_26 = or(_T_25, UInt<1>("h00")) @[MMU.scala 82:45]
    node vmFault = or(_T_26, uFault) @[MMU.scala 82:55]
    node fault = and(io.en, vmFault) @[MMU.scala 83:23]
    node voffset = bits(io.vaddr, 11, 0) @[MMU.scala 86:25]
    node _T_27 = cat(tlb.io.rent.ppn, voffset) @[Cat.scala 30:58]
    node tlbAddr = bits(_T_27, 31, 0) @[MMU.scala 87:46]
    node paddr = mux(io.en, tlbAddr, io.vaddr) @[MMU.scala 88:20]
    node _T_28 = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
    when _T_28 : @[Conditional.scala 40:58]
      when io.flush : @[MMU.scala 98:23]
        state <= UInt<3>("h04") @[MMU.scala 100:15]
        skip @[MMU.scala 98:23]
      else : @[MMU.scala 101:27]
        when io.en : @[MMU.scala 101:27]
          node _T_29 = eq(tlb.io.valid, UInt<1>("h00")) @[MMU.scala 103:28]
          node _T_30 = and(io.lookup, _T_29) @[MMU.scala 103:25]
          when _T_30 : @[MMU.scala 103:43]
            state <= UInt<3>("h01") @[MMU.scala 104:17]
            node _T_31 = shl(io.basePpn, 12) @[Paging.scala 41:12]
            node _T_32 = eq(UInt<1>("h01"), UInt<1>("h01")) @[Paging.scala 25:17]
            node _T_33 = bits(io.vaddr, 31, 22) @[Paging.scala 25:31]
            node _T_34 = bits(io.vaddr, 21, 12) @[Paging.scala 25:46]
            node _T_35 = mux(_T_32, _T_33, _T_34) @[Paging.scala 25:10]
            node _T_36 = shl(_T_35, 2) @[Paging.scala 41:51]
            node _T_37 = add(_T_31, _T_36) @[Paging.scala 41:27]
            node _T_38 = tail(_T_37, 1) @[Paging.scala 41:27]
            addr <= _T_38 @[MMU.scala 105:17]
            level <= UInt<1>("h01") @[MMU.scala 106:17]
            skip @[MMU.scala 103:43]
          skip @[MMU.scala 101:27]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_39 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
      when _T_39 : @[Conditional.scala 39:67]
        when io.data.valid : @[MMU.scala 112:28]
          state <= UInt<3>("h02") @[MMU.scala 113:15]
          skip @[MMU.scala 112:28]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_40 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
        when _T_40 : @[Conditional.scala 39:67]
          node _T_41 = eq(pte.v, UInt<1>("h00")) @[MMU.scala 118:13]
          node _T_42 = eq(pte.r, UInt<1>("h00")) @[MMU.scala 118:24]
          node _T_43 = and(_T_42, pte.w) @[MMU.scala 118:31]
          node _T_44 = or(_T_41, _T_43) @[MMU.scala 118:20]
          when _T_44 : @[MMU.scala 118:42]
            state <= UInt<3>("h03") @[MMU.scala 91:11]
            wire _T_45 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 92:26]
            _T_45.r <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_45.w <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_45.x <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_45.u <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_45.a <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_45.d <= UInt<1>("h00") @[MMU.scala 92:26]
            _T_45.ppn <= UInt<22>("h00") @[MMU.scala 92:26]
            entry.r <= _T_45.r @[MMU.scala 92:11]
            entry.w <= _T_45.w @[MMU.scala 92:11]
            entry.x <= _T_45.x @[MMU.scala 92:11]
            entry.u <= _T_45.u @[MMU.scala 92:11]
            entry.a <= _T_45.a @[MMU.scala 92:11]
            entry.d <= _T_45.d @[MMU.scala 92:11]
            entry.ppn <= _T_45.ppn @[MMU.scala 92:11]
            skip @[MMU.scala 118:42]
          else : @[MMU.scala 121:36]
            node _T_46 = or(pte.r, pte.x) @[MMU.scala 121:26]
            when _T_46 : @[MMU.scala 121:36]
              node _T_47 = gt(level, UInt<1>("h00")) @[MMU.scala 122:21]
              node _T_48 = sub(level, UInt<1>("h01")) @[MMU.scala 122:58]
              node _T_49 = tail(_T_48, 1) @[MMU.scala 122:58]
              node _T_50 = eq(_T_49, UInt<1>("h01")) @[Paging.scala 37:17]
              node _T_51 = bits(pte.ppn, 21, 0) @[Paging.scala 37:29]
              node _T_52 = bits(pte.ppn, 9, 0) @[Paging.scala 37:41]
              node _T_53 = mux(_T_50, _T_51, _T_52) @[Paging.scala 37:10]
              node _T_54 = neq(_T_53, UInt<1>("h00")) @[MMU.scala 122:65]
              node _T_55 = and(_T_47, _T_54) @[MMU.scala 122:27]
              when _T_55 : @[MMU.scala 122:70]
                state <= UInt<3>("h03") @[MMU.scala 91:11]
                wire _T_56 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 92:26]
                _T_56.r <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_56.w <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_56.x <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_56.u <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_56.a <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_56.d <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_56.ppn <= UInt<22>("h00") @[MMU.scala 92:26]
                entry.r <= _T_56.r @[MMU.scala 92:11]
                entry.w <= _T_56.w @[MMU.scala 92:11]
                entry.x <= _T_56.x @[MMU.scala 92:11]
                entry.u <= _T_56.u @[MMU.scala 92:11]
                entry.a <= _T_56.a @[MMU.scala 92:11]
                entry.d <= _T_56.d @[MMU.scala 92:11]
                entry.ppn <= _T_56.ppn @[MMU.scala 92:11]
                skip @[MMU.scala 122:70]
              else : @[MMU.scala 125:22]
                state <= UInt<3>("h03") @[MMU.scala 127:17]
                wire _T_57 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 23:21]
                _T_57.ppn <= pte.ppn @[MMU.scala 24:15]
                _T_57.d <= pte.d @[MMU.scala 25:15]
                _T_57.a <= pte.a @[MMU.scala 26:15]
                _T_57.u <= pte.u @[MMU.scala 27:15]
                _T_57.x <= pte.x @[MMU.scala 28:15]
                _T_57.w <= pte.w @[MMU.scala 29:15]
                _T_57.r <= pte.r @[MMU.scala 30:15]
                entry.r <= _T_57.r @[MMU.scala 128:17]
                entry.w <= _T_57.w @[MMU.scala 128:17]
                entry.x <= _T_57.x @[MMU.scala 128:17]
                entry.u <= _T_57.u @[MMU.scala 128:17]
                entry.a <= _T_57.a @[MMU.scala 128:17]
                entry.d <= _T_57.d @[MMU.scala 128:17]
                entry.ppn <= _T_57.ppn @[MMU.scala 128:17]
                node _T_58 = gt(level, UInt<1>("h00")) @[MMU.scala 130:23]
                when _T_58 : @[MMU.scala 130:30]
                  node _T_59 = sub(level, UInt<1>("h01")) @[MMU.scala 131:63]
                  node _T_60 = tail(_T_59, 1) @[MMU.scala 131:63]
                  node _T_61 = eq(_T_60, UInt<1>("h01")) @[Paging.scala 37:17]
                  node _T_62 = bits(pte.ppn, 21, 0) @[Paging.scala 37:29]
                  node _T_63 = bits(pte.ppn, 9, 0) @[Paging.scala 37:41]
                  node _T_64 = mux(_T_61, _T_62, _T_63) @[Paging.scala 37:10]
                  node _T_65 = xor(pte.ppn, _T_64) @[Paging.scala 45:12]
                  node _T_66 = eq(_T_60, UInt<1>("h01")) @[Paging.scala 29:17]
                  node _T_67 = bits(io.vaddr, 31, 12) @[Paging.scala 29:31]
                  node _T_68 = bits(io.vaddr, 21, 12) @[Paging.scala 29:46]
                  node _T_69 = mux(_T_66, _T_67, _T_68) @[Paging.scala 29:10]
                  node _T_70 = or(_T_65, _T_69) @[Paging.scala 45:40]
                  entry.ppn <= _T_70 @[MMU.scala 131:23]
                  skip @[MMU.scala 130:30]
                skip @[MMU.scala 125:22]
              skip @[MMU.scala 121:36]
            else : @[MMU.scala 134:35]
              node _T_71 = eq(level, UInt<1>("h00")) @[MMU.scala 134:26]
              when _T_71 : @[MMU.scala 134:35]
                state <= UInt<3>("h03") @[MMU.scala 91:11]
                wire _T_72 : {ppn : UInt<22>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[MMU.scala 92:26]
                _T_72.r <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_72.w <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_72.x <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_72.u <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_72.a <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_72.d <= UInt<1>("h00") @[MMU.scala 92:26]
                _T_72.ppn <= UInt<22>("h00") @[MMU.scala 92:26]
                entry.r <= _T_72.r @[MMU.scala 92:11]
                entry.w <= _T_72.w @[MMU.scala 92:11]
                entry.x <= _T_72.x @[MMU.scala 92:11]
                entry.u <= _T_72.u @[MMU.scala 92:11]
                entry.a <= _T_72.a @[MMU.scala 92:11]
                entry.d <= _T_72.d @[MMU.scala 92:11]
                entry.ppn <= _T_72.ppn @[MMU.scala 92:11]
                skip @[MMU.scala 134:35]
              else : @[MMU.scala 137:20]
                state <= UInt<3>("h01") @[MMU.scala 139:15]
                node _T_73 = sub(level, UInt<1>("h01")) @[MMU.scala 140:54]
                node _T_74 = tail(_T_73, 1) @[MMU.scala 140:54]
                node _T_75 = shl(pte.ppn, 12) @[Paging.scala 41:12]
                node _T_76 = eq(_T_74, UInt<1>("h01")) @[Paging.scala 25:17]
                node _T_77 = bits(io.vaddr, 31, 22) @[Paging.scala 25:31]
                node _T_78 = bits(io.vaddr, 21, 12) @[Paging.scala 25:46]
                node _T_79 = mux(_T_76, _T_77, _T_78) @[Paging.scala 25:10]
                node _T_80 = shl(_T_79, 2) @[Paging.scala 41:51]
                node _T_81 = add(_T_75, _T_80) @[Paging.scala 41:27]
                node _T_82 = tail(_T_81, 1) @[Paging.scala 41:27]
                addr <= _T_82 @[MMU.scala 140:15]
                node _T_83 = sub(level, UInt<1>("h01")) @[MMU.scala 141:24]
                node _T_84 = tail(_T_83, 1) @[MMU.scala 141:24]
                level <= _T_84 @[MMU.scala 141:15]
                skip @[MMU.scala 137:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_85 = eq(UInt<3>("h03"), state) @[Conditional.scala 37:30]
          when _T_85 : @[Conditional.scala 39:67]
            state <= UInt<3>("h00") @[MMU.scala 146:13]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_86 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
            when _T_86 : @[Conditional.scala 39:67]
              node _T_87 = eq(io.flush, UInt<1>("h00")) @[MMU.scala 150:13]
              when _T_87 : @[MMU.scala 150:24]
                state <= UInt<3>("h00") @[MMU.scala 150:32]
                skip @[MMU.scala 150:24]
              skip @[Conditional.scala 39:67]
    node _T_88 = eq(state, UInt<3>("h01")) @[MMU.scala 155:26]
    io.data.en <= _T_88 @[MMU.scala 155:17]
    io.data.wen <= UInt<1>("h00") @[MMU.scala 156:17]
    io.data.addr <= addr @[MMU.scala 157:17]
    io.data.wdata <= UInt<1>("h00") @[MMU.scala 158:17]
    io.valid <= valid @[MMU.scala 161:13]
    node _T_89 = and(valid, fault) @[MMU.scala 162:22]
    io.fault <= _T_89 @[MMU.scala 162:13]
    io.paddr <= paddr @[MMU.scala 163:13]
    
  module SramDemux2_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip sel2 : UInt<1>, flip in1 : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flip in2 : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, out : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}}
    
    node _T = eq(io.sel2, UInt<1>("h00")) @[SramUtils.scala 41:20]
    node _T_1 = and(_T, io.out.valid) @[SramUtils.scala 41:29]
    io.in1.valid <= _T_1 @[SramUtils.scala 41:17]
    node _T_2 = eq(io.sel2, UInt<1>("h00")) @[SramUtils.scala 42:20]
    node _T_3 = and(_T_2, io.out.fault) @[SramUtils.scala 42:29]
    io.in1.fault <= _T_3 @[SramUtils.scala 42:17]
    io.in1.rdata <= io.out.rdata @[SramUtils.scala 43:17]
    node _T_4 = and(io.sel2, io.out.valid) @[SramUtils.scala 45:28]
    io.in2.valid <= _T_4 @[SramUtils.scala 45:17]
    node _T_5 = and(io.sel2, io.out.fault) @[SramUtils.scala 46:28]
    io.in2.fault <= _T_5 @[SramUtils.scala 46:17]
    io.in2.rdata <= io.out.rdata @[SramUtils.scala 47:17]
    node _T_6 = mux(io.sel2, io.in2.en, io.in1.en) @[SramUtils.scala 49:23]
    io.out.en <= _T_6 @[SramUtils.scala 49:17]
    node _T_7 = mux(io.sel2, io.in2.wen, io.in1.wen) @[SramUtils.scala 50:23]
    io.out.wen <= _T_7 @[SramUtils.scala 50:17]
    node _T_8 = mux(io.sel2, io.in2.addr, io.in1.addr) @[SramUtils.scala 51:23]
    io.out.addr <= _T_8 @[SramUtils.scala 51:17]
    node _T_9 = mux(io.sel2, io.in2.wdata, io.in1.wdata) @[SramUtils.scala 52:23]
    io.out.wdata <= _T_9 @[SramUtils.scala 52:17]
    
  module SramMux2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip sel2 : UInt<1>, flip in : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, out1 : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, out2 : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}}
    
    reg rdata_sel : UInt<1>, clock @[SramUtils.scala 16:26]
    rdata_sel <= io.sel2 @[SramUtils.scala 16:26]
    node _T = mux(io.sel2, io.out2.valid, io.out1.valid) @[SramUtils.scala 18:23]
    io.in.valid <= _T @[SramUtils.scala 18:17]
    node _T_1 = mux(io.sel2, io.out2.fault, io.out1.fault) @[SramUtils.scala 19:23]
    io.in.fault <= _T_1 @[SramUtils.scala 19:17]
    node _T_2 = mux(rdata_sel, io.out2.rdata, io.out1.rdata) @[SramUtils.scala 20:23]
    io.in.rdata <= _T_2 @[SramUtils.scala 20:17]
    node _T_3 = eq(io.sel2, UInt<1>("h00")) @[SramUtils.scala 22:32]
    node _T_4 = and(io.in.en, _T_3) @[SramUtils.scala 22:29]
    io.out1.en <= _T_4 @[SramUtils.scala 22:17]
    io.out1.wen <= io.in.wen @[SramUtils.scala 23:17]
    io.out1.addr <= io.in.addr @[SramUtils.scala 24:17]
    io.out1.wdata <= io.in.wdata @[SramUtils.scala 25:17]
    node _T_5 = and(io.in.en, io.sel2) @[SramUtils.scala 27:29]
    io.out2.en <= _T_5 @[SramUtils.scala 27:17]
    io.out2.wen <= io.in.wen @[SramUtils.scala 28:17]
    io.out2.addr <= io.in.addr @[SramUtils.scala 29:17]
    io.out2.wdata <= io.in.wdata @[SramUtils.scala 30:17]
    
  module BlockMem : 
    input clock : Clock
    input reset : Reset
    output io : {flip en : UInt<1>, flip wen : UInt<4>, flip addr : UInt<11>, flip wdata : UInt<32>, rdata : UInt<32>}
    
    smem mem : UInt<8>[4][2048] @[BlockMem.scala 20:24]
    io.rdata is invalid @[BlockMem.scala 22:12]
    when io.en : @[BlockMem.scala 23:16]
      node _T = neq(io.wen, UInt<1>("h00")) @[BlockMem.scala 24:18]
      when _T : @[BlockMem.scala 24:27]
        node _T_1 = bits(io.wdata, 7, 0) @[BlockMem.scala 17:14]
        node _T_2 = bits(io.wdata, 15, 8) @[BlockMem.scala 17:14]
        node _T_3 = bits(io.wdata, 23, 16) @[BlockMem.scala 17:14]
        node _T_4 = bits(io.wdata, 31, 24) @[BlockMem.scala 17:14]
        wire _T_5 : UInt<8>[4] @[BlockMem.scala 16:36]
        _T_5[0] <= _T_1 @[BlockMem.scala 16:36]
        _T_5[1] <= _T_2 @[BlockMem.scala 16:36]
        _T_5[2] <= _T_3 @[BlockMem.scala 16:36]
        _T_5[3] <= _T_4 @[BlockMem.scala 16:36]
        node _T_6 = bits(io.wen, 0, 0) @[BlockMem.scala 25:52]
        node _T_7 = bits(io.wen, 1, 1) @[BlockMem.scala 25:52]
        node _T_8 = bits(io.wen, 2, 2) @[BlockMem.scala 25:52]
        node _T_9 = bits(io.wen, 3, 3) @[BlockMem.scala 25:52]
        write mport _T_10 = mem[io.addr], clock
        when _T_6 :
          _T_10[0] <= _T_5[0]
          skip
        when _T_7 :
          _T_10[1] <= _T_5[1]
          skip
        when _T_8 :
          _T_10[2] <= _T_5[2]
          skip
        when _T_9 :
          _T_10[3] <= _T_5[3]
          skip
        skip @[BlockMem.scala 24:27]
      else : @[BlockMem.scala 26:18]
        read mport _T_11 = mem[io.addr], clock @[BlockMem.scala 27:31]
        node _T_12 = cat(_T_11[1], _T_11[0]) @[Cat.scala 30:58]
        node _T_13 = cat(_T_11[3], _T_11[2]) @[Cat.scala 30:58]
        node _T_14 = cat(_T_13, _T_12) @[Cat.scala 30:58]
        io.rdata <= _T_14 @[BlockMem.scala 27:16]
        skip @[BlockMem.scala 26:18]
      skip @[BlockMem.scala 23:16]
    
  module DataCache : 
    input clock : Clock
    input reset : Reset
    output io : {flip sram : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flip flush : UInt<1>, axi : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}}
    
    reg state : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[DataCache.scala 34:22]
    wire _T : UInt<1>[128] @[DataCache.scala 37:30]
    _T[0] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[1] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[2] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[3] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[4] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[5] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[6] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[7] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[8] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[9] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[10] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[11] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[12] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[13] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[14] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[15] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[16] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[17] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[18] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[19] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[20] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[21] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[22] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[23] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[24] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[25] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[26] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[27] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[28] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[29] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[30] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[31] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[32] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[33] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[34] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[35] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[36] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[37] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[38] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[39] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[40] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[41] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[42] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[43] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[44] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[45] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[46] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[47] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[48] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[49] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[50] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[51] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[52] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[53] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[54] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[55] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[56] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[57] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[58] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[59] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[60] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[61] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[62] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[63] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[64] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[65] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[66] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[67] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[68] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[69] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[70] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[71] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[72] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[73] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[74] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[75] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[76] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[77] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[78] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[79] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[80] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[81] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[82] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[83] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[84] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[85] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[86] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[87] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[88] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[89] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[90] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[91] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[92] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[93] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[94] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[95] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[96] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[97] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[98] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[99] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[100] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[101] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[102] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[103] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[104] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[105] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[106] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[107] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[108] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[109] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[110] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[111] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[112] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[113] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[114] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[115] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[116] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[117] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[118] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[119] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[120] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[121] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[122] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[123] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[124] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[125] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[126] <= UInt<1>("h00") @[DataCache.scala 37:30]
    _T[127] <= UInt<1>("h00") @[DataCache.scala 37:30]
    reg valid : UInt<1>[128], clock with : (reset => (reset, _T)) @[DataCache.scala 37:22]
    reg dirty : UInt<1>[128], clock @[DataCache.scala 38:18]
    cmem tag : UInt<19>[128] @[DataCache.scala 39:18]
    inst lines of BlockMem @[DataCache.scala 40:21]
    lines.clock <= clock
    lines.reset <= reset
    reg dataOffset : UInt<5>, clock @[DataCache.scala 43:24]
    reg lastOffset : UInt<5>, clock @[DataCache.scala 44:24]
    node dataOfsRef = bits(dataOffset, 3, 0) @[DataCache.scala 45:31]
    reg aren : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DataCache.scala 46:28]
    reg raddr : UInt<32>, clock @[DataCache.scala 47:24]
    reg awen : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DataCache.scala 48:28]
    reg waddr : UInt<32>, clock @[DataCache.scala 49:24]
    reg wen : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DataCache.scala 50:28]
    node _T_1 = eq(dataOffset, UInt<5>("h010")) @[DataCache.scala 51:39]
    node wlast = and(wen, _T_1) @[DataCache.scala 51:25]
    reg sramAddr : UInt<32>, clock @[DataCache.scala 54:24]
    node _T_2 = eq(state, UInt<4>("h00")) @[DataCache.scala 55:31]
    node selAddr = mux(_T_2, io.sram.addr, sramAddr) @[DataCache.scala 55:24]
    node tagSel = bits(selAddr, 31, 13) @[DataCache.scala 56:28]
    node lineSel = bits(selAddr, 12, 6) @[DataCache.scala 58:28]
    node lineDataSel = bits(selAddr, 12, 2) @[DataCache.scala 60:28]
    node dataSel = cat(lineSel, dataOfsRef) @[Cat.scala 30:58]
    node _T_3 = cat(tagSel, lineSel) @[Cat.scala 30:58]
    node startRaddr = cat(_T_3, UInt<6>("h00")) @[Cat.scala 30:58]
    infer mport _T_4 = tag[lineSel], clock @[DataCache.scala 64:28]
    node _T_5 = cat(_T_4, lineSel) @[Cat.scala 30:58]
    node startWaddr = cat(_T_5, UInt<6>("h00")) @[Cat.scala 30:58]
    infer mport _T_6 = tag[lineSel], clock @[DataCache.scala 67:40]
    node _T_7 = eq(_T_6, tagSel) @[DataCache.scala 67:50]
    node cacheHit = and(valid[lineSel], _T_7) @[DataCache.scala 67:34]
    node realDirty_0 = and(valid[0], dirty[0]) @[DataCache.scala 68:59]
    node realDirty_1 = and(valid[1], dirty[1]) @[DataCache.scala 68:59]
    node realDirty_2 = and(valid[2], dirty[2]) @[DataCache.scala 68:59]
    node realDirty_3 = and(valid[3], dirty[3]) @[DataCache.scala 68:59]
    node realDirty_4 = and(valid[4], dirty[4]) @[DataCache.scala 68:59]
    node realDirty_5 = and(valid[5], dirty[5]) @[DataCache.scala 68:59]
    node realDirty_6 = and(valid[6], dirty[6]) @[DataCache.scala 68:59]
    node realDirty_7 = and(valid[7], dirty[7]) @[DataCache.scala 68:59]
    node realDirty_8 = and(valid[8], dirty[8]) @[DataCache.scala 68:59]
    node realDirty_9 = and(valid[9], dirty[9]) @[DataCache.scala 68:59]
    node realDirty_10 = and(valid[10], dirty[10]) @[DataCache.scala 68:59]
    node realDirty_11 = and(valid[11], dirty[11]) @[DataCache.scala 68:59]
    node realDirty_12 = and(valid[12], dirty[12]) @[DataCache.scala 68:59]
    node realDirty_13 = and(valid[13], dirty[13]) @[DataCache.scala 68:59]
    node realDirty_14 = and(valid[14], dirty[14]) @[DataCache.scala 68:59]
    node realDirty_15 = and(valid[15], dirty[15]) @[DataCache.scala 68:59]
    node realDirty_16 = and(valid[16], dirty[16]) @[DataCache.scala 68:59]
    node realDirty_17 = and(valid[17], dirty[17]) @[DataCache.scala 68:59]
    node realDirty_18 = and(valid[18], dirty[18]) @[DataCache.scala 68:59]
    node realDirty_19 = and(valid[19], dirty[19]) @[DataCache.scala 68:59]
    node realDirty_20 = and(valid[20], dirty[20]) @[DataCache.scala 68:59]
    node realDirty_21 = and(valid[21], dirty[21]) @[DataCache.scala 68:59]
    node realDirty_22 = and(valid[22], dirty[22]) @[DataCache.scala 68:59]
    node realDirty_23 = and(valid[23], dirty[23]) @[DataCache.scala 68:59]
    node realDirty_24 = and(valid[24], dirty[24]) @[DataCache.scala 68:59]
    node realDirty_25 = and(valid[25], dirty[25]) @[DataCache.scala 68:59]
    node realDirty_26 = and(valid[26], dirty[26]) @[DataCache.scala 68:59]
    node realDirty_27 = and(valid[27], dirty[27]) @[DataCache.scala 68:59]
    node realDirty_28 = and(valid[28], dirty[28]) @[DataCache.scala 68:59]
    node realDirty_29 = and(valid[29], dirty[29]) @[DataCache.scala 68:59]
    node realDirty_30 = and(valid[30], dirty[30]) @[DataCache.scala 68:59]
    node realDirty_31 = and(valid[31], dirty[31]) @[DataCache.scala 68:59]
    node realDirty_32 = and(valid[32], dirty[32]) @[DataCache.scala 68:59]
    node realDirty_33 = and(valid[33], dirty[33]) @[DataCache.scala 68:59]
    node realDirty_34 = and(valid[34], dirty[34]) @[DataCache.scala 68:59]
    node realDirty_35 = and(valid[35], dirty[35]) @[DataCache.scala 68:59]
    node realDirty_36 = and(valid[36], dirty[36]) @[DataCache.scala 68:59]
    node realDirty_37 = and(valid[37], dirty[37]) @[DataCache.scala 68:59]
    node realDirty_38 = and(valid[38], dirty[38]) @[DataCache.scala 68:59]
    node realDirty_39 = and(valid[39], dirty[39]) @[DataCache.scala 68:59]
    node realDirty_40 = and(valid[40], dirty[40]) @[DataCache.scala 68:59]
    node realDirty_41 = and(valid[41], dirty[41]) @[DataCache.scala 68:59]
    node realDirty_42 = and(valid[42], dirty[42]) @[DataCache.scala 68:59]
    node realDirty_43 = and(valid[43], dirty[43]) @[DataCache.scala 68:59]
    node realDirty_44 = and(valid[44], dirty[44]) @[DataCache.scala 68:59]
    node realDirty_45 = and(valid[45], dirty[45]) @[DataCache.scala 68:59]
    node realDirty_46 = and(valid[46], dirty[46]) @[DataCache.scala 68:59]
    node realDirty_47 = and(valid[47], dirty[47]) @[DataCache.scala 68:59]
    node realDirty_48 = and(valid[48], dirty[48]) @[DataCache.scala 68:59]
    node realDirty_49 = and(valid[49], dirty[49]) @[DataCache.scala 68:59]
    node realDirty_50 = and(valid[50], dirty[50]) @[DataCache.scala 68:59]
    node realDirty_51 = and(valid[51], dirty[51]) @[DataCache.scala 68:59]
    node realDirty_52 = and(valid[52], dirty[52]) @[DataCache.scala 68:59]
    node realDirty_53 = and(valid[53], dirty[53]) @[DataCache.scala 68:59]
    node realDirty_54 = and(valid[54], dirty[54]) @[DataCache.scala 68:59]
    node realDirty_55 = and(valid[55], dirty[55]) @[DataCache.scala 68:59]
    node realDirty_56 = and(valid[56], dirty[56]) @[DataCache.scala 68:59]
    node realDirty_57 = and(valid[57], dirty[57]) @[DataCache.scala 68:59]
    node realDirty_58 = and(valid[58], dirty[58]) @[DataCache.scala 68:59]
    node realDirty_59 = and(valid[59], dirty[59]) @[DataCache.scala 68:59]
    node realDirty_60 = and(valid[60], dirty[60]) @[DataCache.scala 68:59]
    node realDirty_61 = and(valid[61], dirty[61]) @[DataCache.scala 68:59]
    node realDirty_62 = and(valid[62], dirty[62]) @[DataCache.scala 68:59]
    node realDirty_63 = and(valid[63], dirty[63]) @[DataCache.scala 68:59]
    node realDirty_64 = and(valid[64], dirty[64]) @[DataCache.scala 68:59]
    node realDirty_65 = and(valid[65], dirty[65]) @[DataCache.scala 68:59]
    node realDirty_66 = and(valid[66], dirty[66]) @[DataCache.scala 68:59]
    node realDirty_67 = and(valid[67], dirty[67]) @[DataCache.scala 68:59]
    node realDirty_68 = and(valid[68], dirty[68]) @[DataCache.scala 68:59]
    node realDirty_69 = and(valid[69], dirty[69]) @[DataCache.scala 68:59]
    node realDirty_70 = and(valid[70], dirty[70]) @[DataCache.scala 68:59]
    node realDirty_71 = and(valid[71], dirty[71]) @[DataCache.scala 68:59]
    node realDirty_72 = and(valid[72], dirty[72]) @[DataCache.scala 68:59]
    node realDirty_73 = and(valid[73], dirty[73]) @[DataCache.scala 68:59]
    node realDirty_74 = and(valid[74], dirty[74]) @[DataCache.scala 68:59]
    node realDirty_75 = and(valid[75], dirty[75]) @[DataCache.scala 68:59]
    node realDirty_76 = and(valid[76], dirty[76]) @[DataCache.scala 68:59]
    node realDirty_77 = and(valid[77], dirty[77]) @[DataCache.scala 68:59]
    node realDirty_78 = and(valid[78], dirty[78]) @[DataCache.scala 68:59]
    node realDirty_79 = and(valid[79], dirty[79]) @[DataCache.scala 68:59]
    node realDirty_80 = and(valid[80], dirty[80]) @[DataCache.scala 68:59]
    node realDirty_81 = and(valid[81], dirty[81]) @[DataCache.scala 68:59]
    node realDirty_82 = and(valid[82], dirty[82]) @[DataCache.scala 68:59]
    node realDirty_83 = and(valid[83], dirty[83]) @[DataCache.scala 68:59]
    node realDirty_84 = and(valid[84], dirty[84]) @[DataCache.scala 68:59]
    node realDirty_85 = and(valid[85], dirty[85]) @[DataCache.scala 68:59]
    node realDirty_86 = and(valid[86], dirty[86]) @[DataCache.scala 68:59]
    node realDirty_87 = and(valid[87], dirty[87]) @[DataCache.scala 68:59]
    node realDirty_88 = and(valid[88], dirty[88]) @[DataCache.scala 68:59]
    node realDirty_89 = and(valid[89], dirty[89]) @[DataCache.scala 68:59]
    node realDirty_90 = and(valid[90], dirty[90]) @[DataCache.scala 68:59]
    node realDirty_91 = and(valid[91], dirty[91]) @[DataCache.scala 68:59]
    node realDirty_92 = and(valid[92], dirty[92]) @[DataCache.scala 68:59]
    node realDirty_93 = and(valid[93], dirty[93]) @[DataCache.scala 68:59]
    node realDirty_94 = and(valid[94], dirty[94]) @[DataCache.scala 68:59]
    node realDirty_95 = and(valid[95], dirty[95]) @[DataCache.scala 68:59]
    node realDirty_96 = and(valid[96], dirty[96]) @[DataCache.scala 68:59]
    node realDirty_97 = and(valid[97], dirty[97]) @[DataCache.scala 68:59]
    node realDirty_98 = and(valid[98], dirty[98]) @[DataCache.scala 68:59]
    node realDirty_99 = and(valid[99], dirty[99]) @[DataCache.scala 68:59]
    node realDirty_100 = and(valid[100], dirty[100]) @[DataCache.scala 68:59]
    node realDirty_101 = and(valid[101], dirty[101]) @[DataCache.scala 68:59]
    node realDirty_102 = and(valid[102], dirty[102]) @[DataCache.scala 68:59]
    node realDirty_103 = and(valid[103], dirty[103]) @[DataCache.scala 68:59]
    node realDirty_104 = and(valid[104], dirty[104]) @[DataCache.scala 68:59]
    node realDirty_105 = and(valid[105], dirty[105]) @[DataCache.scala 68:59]
    node realDirty_106 = and(valid[106], dirty[106]) @[DataCache.scala 68:59]
    node realDirty_107 = and(valid[107], dirty[107]) @[DataCache.scala 68:59]
    node realDirty_108 = and(valid[108], dirty[108]) @[DataCache.scala 68:59]
    node realDirty_109 = and(valid[109], dirty[109]) @[DataCache.scala 68:59]
    node realDirty_110 = and(valid[110], dirty[110]) @[DataCache.scala 68:59]
    node realDirty_111 = and(valid[111], dirty[111]) @[DataCache.scala 68:59]
    node realDirty_112 = and(valid[112], dirty[112]) @[DataCache.scala 68:59]
    node realDirty_113 = and(valid[113], dirty[113]) @[DataCache.scala 68:59]
    node realDirty_114 = and(valid[114], dirty[114]) @[DataCache.scala 68:59]
    node realDirty_115 = and(valid[115], dirty[115]) @[DataCache.scala 68:59]
    node realDirty_116 = and(valid[116], dirty[116]) @[DataCache.scala 68:59]
    node realDirty_117 = and(valid[117], dirty[117]) @[DataCache.scala 68:59]
    node realDirty_118 = and(valid[118], dirty[118]) @[DataCache.scala 68:59]
    node realDirty_119 = and(valid[119], dirty[119]) @[DataCache.scala 68:59]
    node realDirty_120 = and(valid[120], dirty[120]) @[DataCache.scala 68:59]
    node realDirty_121 = and(valid[121], dirty[121]) @[DataCache.scala 68:59]
    node realDirty_122 = and(valid[122], dirty[122]) @[DataCache.scala 68:59]
    node realDirty_123 = and(valid[123], dirty[123]) @[DataCache.scala 68:59]
    node realDirty_124 = and(valid[124], dirty[124]) @[DataCache.scala 68:59]
    node realDirty_125 = and(valid[125], dirty[125]) @[DataCache.scala 68:59]
    node realDirty_126 = and(valid[126], dirty[126]) @[DataCache.scala 68:59]
    node realDirty_127 = and(valid[127], dirty[127]) @[DataCache.scala 68:59]
    node _T_8 = or(realDirty_0, realDirty_1) @[DataCache.scala 69:37]
    node _T_9 = or(_T_8, realDirty_2) @[DataCache.scala 69:37]
    node _T_10 = or(_T_9, realDirty_3) @[DataCache.scala 69:37]
    node _T_11 = or(_T_10, realDirty_4) @[DataCache.scala 69:37]
    node _T_12 = or(_T_11, realDirty_5) @[DataCache.scala 69:37]
    node _T_13 = or(_T_12, realDirty_6) @[DataCache.scala 69:37]
    node _T_14 = or(_T_13, realDirty_7) @[DataCache.scala 69:37]
    node _T_15 = or(_T_14, realDirty_8) @[DataCache.scala 69:37]
    node _T_16 = or(_T_15, realDirty_9) @[DataCache.scala 69:37]
    node _T_17 = or(_T_16, realDirty_10) @[DataCache.scala 69:37]
    node _T_18 = or(_T_17, realDirty_11) @[DataCache.scala 69:37]
    node _T_19 = or(_T_18, realDirty_12) @[DataCache.scala 69:37]
    node _T_20 = or(_T_19, realDirty_13) @[DataCache.scala 69:37]
    node _T_21 = or(_T_20, realDirty_14) @[DataCache.scala 69:37]
    node _T_22 = or(_T_21, realDirty_15) @[DataCache.scala 69:37]
    node _T_23 = or(_T_22, realDirty_16) @[DataCache.scala 69:37]
    node _T_24 = or(_T_23, realDirty_17) @[DataCache.scala 69:37]
    node _T_25 = or(_T_24, realDirty_18) @[DataCache.scala 69:37]
    node _T_26 = or(_T_25, realDirty_19) @[DataCache.scala 69:37]
    node _T_27 = or(_T_26, realDirty_20) @[DataCache.scala 69:37]
    node _T_28 = or(_T_27, realDirty_21) @[DataCache.scala 69:37]
    node _T_29 = or(_T_28, realDirty_22) @[DataCache.scala 69:37]
    node _T_30 = or(_T_29, realDirty_23) @[DataCache.scala 69:37]
    node _T_31 = or(_T_30, realDirty_24) @[DataCache.scala 69:37]
    node _T_32 = or(_T_31, realDirty_25) @[DataCache.scala 69:37]
    node _T_33 = or(_T_32, realDirty_26) @[DataCache.scala 69:37]
    node _T_34 = or(_T_33, realDirty_27) @[DataCache.scala 69:37]
    node _T_35 = or(_T_34, realDirty_28) @[DataCache.scala 69:37]
    node _T_36 = or(_T_35, realDirty_29) @[DataCache.scala 69:37]
    node _T_37 = or(_T_36, realDirty_30) @[DataCache.scala 69:37]
    node _T_38 = or(_T_37, realDirty_31) @[DataCache.scala 69:37]
    node _T_39 = or(_T_38, realDirty_32) @[DataCache.scala 69:37]
    node _T_40 = or(_T_39, realDirty_33) @[DataCache.scala 69:37]
    node _T_41 = or(_T_40, realDirty_34) @[DataCache.scala 69:37]
    node _T_42 = or(_T_41, realDirty_35) @[DataCache.scala 69:37]
    node _T_43 = or(_T_42, realDirty_36) @[DataCache.scala 69:37]
    node _T_44 = or(_T_43, realDirty_37) @[DataCache.scala 69:37]
    node _T_45 = or(_T_44, realDirty_38) @[DataCache.scala 69:37]
    node _T_46 = or(_T_45, realDirty_39) @[DataCache.scala 69:37]
    node _T_47 = or(_T_46, realDirty_40) @[DataCache.scala 69:37]
    node _T_48 = or(_T_47, realDirty_41) @[DataCache.scala 69:37]
    node _T_49 = or(_T_48, realDirty_42) @[DataCache.scala 69:37]
    node _T_50 = or(_T_49, realDirty_43) @[DataCache.scala 69:37]
    node _T_51 = or(_T_50, realDirty_44) @[DataCache.scala 69:37]
    node _T_52 = or(_T_51, realDirty_45) @[DataCache.scala 69:37]
    node _T_53 = or(_T_52, realDirty_46) @[DataCache.scala 69:37]
    node _T_54 = or(_T_53, realDirty_47) @[DataCache.scala 69:37]
    node _T_55 = or(_T_54, realDirty_48) @[DataCache.scala 69:37]
    node _T_56 = or(_T_55, realDirty_49) @[DataCache.scala 69:37]
    node _T_57 = or(_T_56, realDirty_50) @[DataCache.scala 69:37]
    node _T_58 = or(_T_57, realDirty_51) @[DataCache.scala 69:37]
    node _T_59 = or(_T_58, realDirty_52) @[DataCache.scala 69:37]
    node _T_60 = or(_T_59, realDirty_53) @[DataCache.scala 69:37]
    node _T_61 = or(_T_60, realDirty_54) @[DataCache.scala 69:37]
    node _T_62 = or(_T_61, realDirty_55) @[DataCache.scala 69:37]
    node _T_63 = or(_T_62, realDirty_56) @[DataCache.scala 69:37]
    node _T_64 = or(_T_63, realDirty_57) @[DataCache.scala 69:37]
    node _T_65 = or(_T_64, realDirty_58) @[DataCache.scala 69:37]
    node _T_66 = or(_T_65, realDirty_59) @[DataCache.scala 69:37]
    node _T_67 = or(_T_66, realDirty_60) @[DataCache.scala 69:37]
    node _T_68 = or(_T_67, realDirty_61) @[DataCache.scala 69:37]
    node _T_69 = or(_T_68, realDirty_62) @[DataCache.scala 69:37]
    node _T_70 = or(_T_69, realDirty_63) @[DataCache.scala 69:37]
    node _T_71 = or(_T_70, realDirty_64) @[DataCache.scala 69:37]
    node _T_72 = or(_T_71, realDirty_65) @[DataCache.scala 69:37]
    node _T_73 = or(_T_72, realDirty_66) @[DataCache.scala 69:37]
    node _T_74 = or(_T_73, realDirty_67) @[DataCache.scala 69:37]
    node _T_75 = or(_T_74, realDirty_68) @[DataCache.scala 69:37]
    node _T_76 = or(_T_75, realDirty_69) @[DataCache.scala 69:37]
    node _T_77 = or(_T_76, realDirty_70) @[DataCache.scala 69:37]
    node _T_78 = or(_T_77, realDirty_71) @[DataCache.scala 69:37]
    node _T_79 = or(_T_78, realDirty_72) @[DataCache.scala 69:37]
    node _T_80 = or(_T_79, realDirty_73) @[DataCache.scala 69:37]
    node _T_81 = or(_T_80, realDirty_74) @[DataCache.scala 69:37]
    node _T_82 = or(_T_81, realDirty_75) @[DataCache.scala 69:37]
    node _T_83 = or(_T_82, realDirty_76) @[DataCache.scala 69:37]
    node _T_84 = or(_T_83, realDirty_77) @[DataCache.scala 69:37]
    node _T_85 = or(_T_84, realDirty_78) @[DataCache.scala 69:37]
    node _T_86 = or(_T_85, realDirty_79) @[DataCache.scala 69:37]
    node _T_87 = or(_T_86, realDirty_80) @[DataCache.scala 69:37]
    node _T_88 = or(_T_87, realDirty_81) @[DataCache.scala 69:37]
    node _T_89 = or(_T_88, realDirty_82) @[DataCache.scala 69:37]
    node _T_90 = or(_T_89, realDirty_83) @[DataCache.scala 69:37]
    node _T_91 = or(_T_90, realDirty_84) @[DataCache.scala 69:37]
    node _T_92 = or(_T_91, realDirty_85) @[DataCache.scala 69:37]
    node _T_93 = or(_T_92, realDirty_86) @[DataCache.scala 69:37]
    node _T_94 = or(_T_93, realDirty_87) @[DataCache.scala 69:37]
    node _T_95 = or(_T_94, realDirty_88) @[DataCache.scala 69:37]
    node _T_96 = or(_T_95, realDirty_89) @[DataCache.scala 69:37]
    node _T_97 = or(_T_96, realDirty_90) @[DataCache.scala 69:37]
    node _T_98 = or(_T_97, realDirty_91) @[DataCache.scala 69:37]
    node _T_99 = or(_T_98, realDirty_92) @[DataCache.scala 69:37]
    node _T_100 = or(_T_99, realDirty_93) @[DataCache.scala 69:37]
    node _T_101 = or(_T_100, realDirty_94) @[DataCache.scala 69:37]
    node _T_102 = or(_T_101, realDirty_95) @[DataCache.scala 69:37]
    node _T_103 = or(_T_102, realDirty_96) @[DataCache.scala 69:37]
    node _T_104 = or(_T_103, realDirty_97) @[DataCache.scala 69:37]
    node _T_105 = or(_T_104, realDirty_98) @[DataCache.scala 69:37]
    node _T_106 = or(_T_105, realDirty_99) @[DataCache.scala 69:37]
    node _T_107 = or(_T_106, realDirty_100) @[DataCache.scala 69:37]
    node _T_108 = or(_T_107, realDirty_101) @[DataCache.scala 69:37]
    node _T_109 = or(_T_108, realDirty_102) @[DataCache.scala 69:37]
    node _T_110 = or(_T_109, realDirty_103) @[DataCache.scala 69:37]
    node _T_111 = or(_T_110, realDirty_104) @[DataCache.scala 69:37]
    node _T_112 = or(_T_111, realDirty_105) @[DataCache.scala 69:37]
    node _T_113 = or(_T_112, realDirty_106) @[DataCache.scala 69:37]
    node _T_114 = or(_T_113, realDirty_107) @[DataCache.scala 69:37]
    node _T_115 = or(_T_114, realDirty_108) @[DataCache.scala 69:37]
    node _T_116 = or(_T_115, realDirty_109) @[DataCache.scala 69:37]
    node _T_117 = or(_T_116, realDirty_110) @[DataCache.scala 69:37]
    node _T_118 = or(_T_117, realDirty_111) @[DataCache.scala 69:37]
    node _T_119 = or(_T_118, realDirty_112) @[DataCache.scala 69:37]
    node _T_120 = or(_T_119, realDirty_113) @[DataCache.scala 69:37]
    node _T_121 = or(_T_120, realDirty_114) @[DataCache.scala 69:37]
    node _T_122 = or(_T_121, realDirty_115) @[DataCache.scala 69:37]
    node _T_123 = or(_T_122, realDirty_116) @[DataCache.scala 69:37]
    node _T_124 = or(_T_123, realDirty_117) @[DataCache.scala 69:37]
    node _T_125 = or(_T_124, realDirty_118) @[DataCache.scala 69:37]
    node _T_126 = or(_T_125, realDirty_119) @[DataCache.scala 69:37]
    node _T_127 = or(_T_126, realDirty_120) @[DataCache.scala 69:37]
    node _T_128 = or(_T_127, realDirty_121) @[DataCache.scala 69:37]
    node _T_129 = or(_T_128, realDirty_122) @[DataCache.scala 69:37]
    node _T_130 = or(_T_129, realDirty_123) @[DataCache.scala 69:37]
    node _T_131 = or(_T_130, realDirty_124) @[DataCache.scala 69:37]
    node _T_132 = or(_T_131, realDirty_125) @[DataCache.scala 69:37]
    node _T_133 = or(_T_132, realDirty_126) @[DataCache.scala 69:37]
    node isDirty = or(_T_133, realDirty_127) @[DataCache.scala 69:37]
    node _T_134 = mux(realDirty_126, UInt<7>("h07e"), UInt<7>("h07f")) @[Mux.scala 47:69]
    node _T_135 = mux(realDirty_125, UInt<7>("h07d"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(realDirty_124, UInt<7>("h07c"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(realDirty_123, UInt<7>("h07b"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(realDirty_122, UInt<7>("h07a"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(realDirty_121, UInt<7>("h079"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(realDirty_120, UInt<7>("h078"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(realDirty_119, UInt<7>("h077"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(realDirty_118, UInt<7>("h076"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(realDirty_117, UInt<7>("h075"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(realDirty_116, UInt<7>("h074"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(realDirty_115, UInt<7>("h073"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(realDirty_114, UInt<7>("h072"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(realDirty_113, UInt<7>("h071"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(realDirty_112, UInt<7>("h070"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(realDirty_111, UInt<7>("h06f"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(realDirty_110, UInt<7>("h06e"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(realDirty_109, UInt<7>("h06d"), _T_150) @[Mux.scala 47:69]
    node _T_152 = mux(realDirty_108, UInt<7>("h06c"), _T_151) @[Mux.scala 47:69]
    node _T_153 = mux(realDirty_107, UInt<7>("h06b"), _T_152) @[Mux.scala 47:69]
    node _T_154 = mux(realDirty_106, UInt<7>("h06a"), _T_153) @[Mux.scala 47:69]
    node _T_155 = mux(realDirty_105, UInt<7>("h069"), _T_154) @[Mux.scala 47:69]
    node _T_156 = mux(realDirty_104, UInt<7>("h068"), _T_155) @[Mux.scala 47:69]
    node _T_157 = mux(realDirty_103, UInt<7>("h067"), _T_156) @[Mux.scala 47:69]
    node _T_158 = mux(realDirty_102, UInt<7>("h066"), _T_157) @[Mux.scala 47:69]
    node _T_159 = mux(realDirty_101, UInt<7>("h065"), _T_158) @[Mux.scala 47:69]
    node _T_160 = mux(realDirty_100, UInt<7>("h064"), _T_159) @[Mux.scala 47:69]
    node _T_161 = mux(realDirty_99, UInt<7>("h063"), _T_160) @[Mux.scala 47:69]
    node _T_162 = mux(realDirty_98, UInt<7>("h062"), _T_161) @[Mux.scala 47:69]
    node _T_163 = mux(realDirty_97, UInt<7>("h061"), _T_162) @[Mux.scala 47:69]
    node _T_164 = mux(realDirty_96, UInt<7>("h060"), _T_163) @[Mux.scala 47:69]
    node _T_165 = mux(realDirty_95, UInt<7>("h05f"), _T_164) @[Mux.scala 47:69]
    node _T_166 = mux(realDirty_94, UInt<7>("h05e"), _T_165) @[Mux.scala 47:69]
    node _T_167 = mux(realDirty_93, UInt<7>("h05d"), _T_166) @[Mux.scala 47:69]
    node _T_168 = mux(realDirty_92, UInt<7>("h05c"), _T_167) @[Mux.scala 47:69]
    node _T_169 = mux(realDirty_91, UInt<7>("h05b"), _T_168) @[Mux.scala 47:69]
    node _T_170 = mux(realDirty_90, UInt<7>("h05a"), _T_169) @[Mux.scala 47:69]
    node _T_171 = mux(realDirty_89, UInt<7>("h059"), _T_170) @[Mux.scala 47:69]
    node _T_172 = mux(realDirty_88, UInt<7>("h058"), _T_171) @[Mux.scala 47:69]
    node _T_173 = mux(realDirty_87, UInt<7>("h057"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(realDirty_86, UInt<7>("h056"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(realDirty_85, UInt<7>("h055"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(realDirty_84, UInt<7>("h054"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(realDirty_83, UInt<7>("h053"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(realDirty_82, UInt<7>("h052"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(realDirty_81, UInt<7>("h051"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(realDirty_80, UInt<7>("h050"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(realDirty_79, UInt<7>("h04f"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(realDirty_78, UInt<7>("h04e"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(realDirty_77, UInt<7>("h04d"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(realDirty_76, UInt<7>("h04c"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(realDirty_75, UInt<7>("h04b"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(realDirty_74, UInt<7>("h04a"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(realDirty_73, UInt<7>("h049"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(realDirty_72, UInt<7>("h048"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(realDirty_71, UInt<7>("h047"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(realDirty_70, UInt<7>("h046"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(realDirty_69, UInt<7>("h045"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(realDirty_68, UInt<7>("h044"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(realDirty_67, UInt<7>("h043"), _T_192) @[Mux.scala 47:69]
    node _T_194 = mux(realDirty_66, UInt<7>("h042"), _T_193) @[Mux.scala 47:69]
    node _T_195 = mux(realDirty_65, UInt<7>("h041"), _T_194) @[Mux.scala 47:69]
    node _T_196 = mux(realDirty_64, UInt<7>("h040"), _T_195) @[Mux.scala 47:69]
    node _T_197 = mux(realDirty_63, UInt<6>("h03f"), _T_196) @[Mux.scala 47:69]
    node _T_198 = mux(realDirty_62, UInt<6>("h03e"), _T_197) @[Mux.scala 47:69]
    node _T_199 = mux(realDirty_61, UInt<6>("h03d"), _T_198) @[Mux.scala 47:69]
    node _T_200 = mux(realDirty_60, UInt<6>("h03c"), _T_199) @[Mux.scala 47:69]
    node _T_201 = mux(realDirty_59, UInt<6>("h03b"), _T_200) @[Mux.scala 47:69]
    node _T_202 = mux(realDirty_58, UInt<6>("h03a"), _T_201) @[Mux.scala 47:69]
    node _T_203 = mux(realDirty_57, UInt<6>("h039"), _T_202) @[Mux.scala 47:69]
    node _T_204 = mux(realDirty_56, UInt<6>("h038"), _T_203) @[Mux.scala 47:69]
    node _T_205 = mux(realDirty_55, UInt<6>("h037"), _T_204) @[Mux.scala 47:69]
    node _T_206 = mux(realDirty_54, UInt<6>("h036"), _T_205) @[Mux.scala 47:69]
    node _T_207 = mux(realDirty_53, UInt<6>("h035"), _T_206) @[Mux.scala 47:69]
    node _T_208 = mux(realDirty_52, UInt<6>("h034"), _T_207) @[Mux.scala 47:69]
    node _T_209 = mux(realDirty_51, UInt<6>("h033"), _T_208) @[Mux.scala 47:69]
    node _T_210 = mux(realDirty_50, UInt<6>("h032"), _T_209) @[Mux.scala 47:69]
    node _T_211 = mux(realDirty_49, UInt<6>("h031"), _T_210) @[Mux.scala 47:69]
    node _T_212 = mux(realDirty_48, UInt<6>("h030"), _T_211) @[Mux.scala 47:69]
    node _T_213 = mux(realDirty_47, UInt<6>("h02f"), _T_212) @[Mux.scala 47:69]
    node _T_214 = mux(realDirty_46, UInt<6>("h02e"), _T_213) @[Mux.scala 47:69]
    node _T_215 = mux(realDirty_45, UInt<6>("h02d"), _T_214) @[Mux.scala 47:69]
    node _T_216 = mux(realDirty_44, UInt<6>("h02c"), _T_215) @[Mux.scala 47:69]
    node _T_217 = mux(realDirty_43, UInt<6>("h02b"), _T_216) @[Mux.scala 47:69]
    node _T_218 = mux(realDirty_42, UInt<6>("h02a"), _T_217) @[Mux.scala 47:69]
    node _T_219 = mux(realDirty_41, UInt<6>("h029"), _T_218) @[Mux.scala 47:69]
    node _T_220 = mux(realDirty_40, UInt<6>("h028"), _T_219) @[Mux.scala 47:69]
    node _T_221 = mux(realDirty_39, UInt<6>("h027"), _T_220) @[Mux.scala 47:69]
    node _T_222 = mux(realDirty_38, UInt<6>("h026"), _T_221) @[Mux.scala 47:69]
    node _T_223 = mux(realDirty_37, UInt<6>("h025"), _T_222) @[Mux.scala 47:69]
    node _T_224 = mux(realDirty_36, UInt<6>("h024"), _T_223) @[Mux.scala 47:69]
    node _T_225 = mux(realDirty_35, UInt<6>("h023"), _T_224) @[Mux.scala 47:69]
    node _T_226 = mux(realDirty_34, UInt<6>("h022"), _T_225) @[Mux.scala 47:69]
    node _T_227 = mux(realDirty_33, UInt<6>("h021"), _T_226) @[Mux.scala 47:69]
    node _T_228 = mux(realDirty_32, UInt<6>("h020"), _T_227) @[Mux.scala 47:69]
    node _T_229 = mux(realDirty_31, UInt<5>("h01f"), _T_228) @[Mux.scala 47:69]
    node _T_230 = mux(realDirty_30, UInt<5>("h01e"), _T_229) @[Mux.scala 47:69]
    node _T_231 = mux(realDirty_29, UInt<5>("h01d"), _T_230) @[Mux.scala 47:69]
    node _T_232 = mux(realDirty_28, UInt<5>("h01c"), _T_231) @[Mux.scala 47:69]
    node _T_233 = mux(realDirty_27, UInt<5>("h01b"), _T_232) @[Mux.scala 47:69]
    node _T_234 = mux(realDirty_26, UInt<5>("h01a"), _T_233) @[Mux.scala 47:69]
    node _T_235 = mux(realDirty_25, UInt<5>("h019"), _T_234) @[Mux.scala 47:69]
    node _T_236 = mux(realDirty_24, UInt<5>("h018"), _T_235) @[Mux.scala 47:69]
    node _T_237 = mux(realDirty_23, UInt<5>("h017"), _T_236) @[Mux.scala 47:69]
    node _T_238 = mux(realDirty_22, UInt<5>("h016"), _T_237) @[Mux.scala 47:69]
    node _T_239 = mux(realDirty_21, UInt<5>("h015"), _T_238) @[Mux.scala 47:69]
    node _T_240 = mux(realDirty_20, UInt<5>("h014"), _T_239) @[Mux.scala 47:69]
    node _T_241 = mux(realDirty_19, UInt<5>("h013"), _T_240) @[Mux.scala 47:69]
    node _T_242 = mux(realDirty_18, UInt<5>("h012"), _T_241) @[Mux.scala 47:69]
    node _T_243 = mux(realDirty_17, UInt<5>("h011"), _T_242) @[Mux.scala 47:69]
    node _T_244 = mux(realDirty_16, UInt<5>("h010"), _T_243) @[Mux.scala 47:69]
    node _T_245 = mux(realDirty_15, UInt<4>("h0f"), _T_244) @[Mux.scala 47:69]
    node _T_246 = mux(realDirty_14, UInt<4>("h0e"), _T_245) @[Mux.scala 47:69]
    node _T_247 = mux(realDirty_13, UInt<4>("h0d"), _T_246) @[Mux.scala 47:69]
    node _T_248 = mux(realDirty_12, UInt<4>("h0c"), _T_247) @[Mux.scala 47:69]
    node _T_249 = mux(realDirty_11, UInt<4>("h0b"), _T_248) @[Mux.scala 47:69]
    node _T_250 = mux(realDirty_10, UInt<4>("h0a"), _T_249) @[Mux.scala 47:69]
    node _T_251 = mux(realDirty_9, UInt<4>("h09"), _T_250) @[Mux.scala 47:69]
    node _T_252 = mux(realDirty_8, UInt<4>("h08"), _T_251) @[Mux.scala 47:69]
    node _T_253 = mux(realDirty_7, UInt<3>("h07"), _T_252) @[Mux.scala 47:69]
    node _T_254 = mux(realDirty_6, UInt<3>("h06"), _T_253) @[Mux.scala 47:69]
    node _T_255 = mux(realDirty_5, UInt<3>("h05"), _T_254) @[Mux.scala 47:69]
    node _T_256 = mux(realDirty_4, UInt<3>("h04"), _T_255) @[Mux.scala 47:69]
    node _T_257 = mux(realDirty_3, UInt<2>("h03"), _T_256) @[Mux.scala 47:69]
    node _T_258 = mux(realDirty_2, UInt<2>("h02"), _T_257) @[Mux.scala 47:69]
    node _T_259 = mux(realDirty_1, UInt<1>("h01"), _T_258) @[Mux.scala 47:69]
    node _T_260 = mux(realDirty_0, UInt<1>("h00"), _T_259) @[Mux.scala 47:69]
    node nextDirty = bits(_T_260, 6, 0) @[DataCache.scala 70:45]
    infer mport _T_261 = tag[nextDirty], clock @[DataCache.scala 71:26]
    node _T_262 = cat(_T_261, nextDirty) @[Cat.scala 30:58]
    node flushAddr = cat(_T_262, UInt<6>("h00")) @[Cat.scala 30:58]
    node flushSel = cat(nextDirty, dataOfsRef) @[Cat.scala 30:58]
    node _T_263 = eq(state, UInt<4>("h00")) @[DataCache.scala 75:27]
    node _T_264 = eq(io.flush, UInt<1>("h00")) @[DataCache.scala 75:40]
    node _T_265 = and(_T_263, _T_264) @[DataCache.scala 75:37]
    node _T_266 = and(_T_265, io.sram.en) @[DataCache.scala 75:50]
    node lineEnCpu = and(_T_266, cacheHit) @[DataCache.scala 75:64]
    node _T_267 = eq(state, UInt<4>("h02")) @[DataCache.scala 76:27]
    node lineEnRead = and(_T_267, io.axi.readData.valid) @[DataCache.scala 76:41]
    node lineEnWrite = eq(state, UInt<4>("h05")) @[DataCache.scala 77:27]
    node lineEnFlush = eq(state, UInt<4>("h07")) @[DataCache.scala 78:27]
    lines.io.en <= UInt<1>("h01") @[DataCache.scala 79:19]
    node _T_268 = mux(lineEnRead, UInt<4>("h0f"), UInt<1>("h00")) @[DataCache.scala 81:25]
    node _T_269 = mux(lineEnCpu, io.sram.wen, _T_268) @[DataCache.scala 80:25]
    lines.io.wen <= _T_269 @[DataCache.scala 80:19]
    node _T_270 = or(lineEnRead, lineEnWrite) @[DataCache.scala 82:37]
    node _T_271 = mux(lineEnFlush, flushSel, lineDataSel) @[DataCache.scala 83:25]
    node _T_272 = mux(_T_270, dataSel, _T_271) @[DataCache.scala 82:25]
    lines.io.addr <= _T_272 @[DataCache.scala 82:19]
    node _T_273 = mux(lineEnCpu, io.sram.wdata, io.axi.readData.bits.data) @[DataCache.scala 84:25]
    lines.io.wdata <= _T_273 @[DataCache.scala 84:19]
    node _T_274 = eq(UInt<4>("h00"), state) @[Conditional.scala 37:30]
    when _T_274 : @[Conditional.scala 40:58]
      node _T_275 = and(io.flush, isDirty) @[DataCache.scala 91:22]
      when _T_275 : @[DataCache.scala 91:34]
        state <= UInt<4>("h06") @[DataCache.scala 93:15]
        skip @[DataCache.scala 91:34]
      else : @[DataCache.scala 94:32]
        when io.sram.en : @[DataCache.scala 94:32]
          when cacheHit : @[DataCache.scala 95:25]
            node _T_276 = neq(io.sram.wen, UInt<1>("h00")) @[DataCache.scala 97:29]
            when _T_276 : @[DataCache.scala 97:38]
              dirty[lineSel] <= UInt<1>("h01") @[DataCache.scala 99:28]
              skip @[DataCache.scala 97:38]
            skip @[DataCache.scala 95:25]
          else : @[DataCache.scala 101:56]
            node _T_277 = and(valid[lineSel], dirty[lineSel]) @[DataCache.scala 101:37]
            when _T_277 : @[DataCache.scala 101:56]
              sramAddr <= io.sram.addr @[DataCache.scala 103:20]
              state <= UInt<4>("h04") @[DataCache.scala 104:17]
              skip @[DataCache.scala 101:56]
            else : @[DataCache.scala 105:22]
              sramAddr <= io.sram.addr @[DataCache.scala 107:20]
              state <= UInt<4>("h01") @[DataCache.scala 108:17]
              skip @[DataCache.scala 105:22]
          skip @[DataCache.scala 94:32]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_278 = eq(UInt<4>("h01"), state) @[Conditional.scala 37:30]
      when _T_278 : @[Conditional.scala 39:67]
        aren <= UInt<1>("h01") @[DataCache.scala 114:12]
        raddr <= startRaddr @[DataCache.scala 115:13]
        node _T_279 = and(aren, io.axi.readAddr.ready) @[DataCache.scala 117:18]
        when _T_279 : @[DataCache.scala 117:44]
          aren <= UInt<1>("h00") @[DataCache.scala 118:14]
          dataOffset <= UInt<1>("h00") @[DataCache.scala 119:20]
          state <= UInt<4>("h02") @[DataCache.scala 120:15]
          skip @[DataCache.scala 117:44]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_280 = eq(UInt<4>("h02"), state) @[Conditional.scala 37:30]
        when _T_280 : @[Conditional.scala 39:67]
          when io.axi.readData.valid : @[DataCache.scala 125:36]
            node _T_281 = add(dataOffset, UInt<1>("h01")) @[DataCache.scala 126:34]
            node _T_282 = tail(_T_281, 1) @[DataCache.scala 126:34]
            dataOffset <= _T_282 @[DataCache.scala 126:20]
            skip @[DataCache.scala 125:36]
          node _T_283 = and(io.axi.readData.valid, io.axi.readData.bits.last) @[DataCache.scala 129:35]
          when _T_283 : @[DataCache.scala 129:65]
            valid[lineSel] <= UInt<1>("h01") @[DataCache.scala 130:24]
            dirty[lineSel] <= UInt<1>("h00") @[DataCache.scala 131:24]
            infer mport _T_284 = tag[lineSel], clock @[DataCache.scala 132:12]
            _T_284 <= tagSel @[DataCache.scala 132:22]
            state <= UInt<4>("h03") @[DataCache.scala 133:15]
            skip @[DataCache.scala 129:65]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_285 = eq(UInt<4>("h03"), state) @[Conditional.scala 37:30]
          when _T_285 : @[Conditional.scala 39:67]
            state <= UInt<4>("h00") @[DataCache.scala 138:13]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_286 = eq(UInt<4>("h04"), state) @[Conditional.scala 37:30]
            when _T_286 : @[Conditional.scala 39:67]
              awen <= UInt<1>("h01") @[DataCache.scala 142:12]
              waddr <= startWaddr @[DataCache.scala 143:13]
              node _T_287 = and(awen, io.axi.writeAddr.ready) @[DataCache.scala 145:18]
              when _T_287 : @[DataCache.scala 145:45]
                awen <= UInt<1>("h00") @[DataCache.scala 146:14]
                dataOffset <= UInt<1>("h00") @[DataCache.scala 147:20]
                lastOffset <= UInt<1>("h00") @[DataCache.scala 148:20]
                state <= UInt<4>("h05") @[DataCache.scala 149:15]
                skip @[DataCache.scala 145:45]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_288 = eq(UInt<4>("h05"), state) @[Conditional.scala 37:30]
              when _T_288 : @[Conditional.scala 39:67]
                node _T_289 = eq(wlast, UInt<1>("h00")) @[DataCache.scala 155:39]
                node _T_290 = and(io.axi.writeData.ready, _T_289) @[DataCache.scala 155:36]
                when _T_290 : @[DataCache.scala 155:47]
                  wen <= UInt<1>("h01") @[DataCache.scala 156:13]
                  node _T_291 = add(dataOffset, UInt<1>("h01")) @[DataCache.scala 157:34]
                  node _T_292 = tail(_T_291, 1) @[DataCache.scala 157:34]
                  dataOffset <= _T_292 @[DataCache.scala 157:20]
                  lastOffset <= dataOffset @[DataCache.scala 158:20]
                  skip @[DataCache.scala 155:47]
                else : @[DataCache.scala 159:20]
                  wen <= UInt<1>("h00") @[DataCache.scala 160:13]
                  dataOffset <= lastOffset @[DataCache.scala 161:20]
                  skip @[DataCache.scala 159:20]
                when wlast : @[DataCache.scala 164:20]
                  wen <= UInt<1>("h00") @[DataCache.scala 165:13]
                  valid[lineSel] <= UInt<1>("h00") @[DataCache.scala 166:24]
                  state <= UInt<4>("h01") @[DataCache.scala 167:15]
                  skip @[DataCache.scala 164:20]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_293 = eq(UInt<4>("h06"), state) @[Conditional.scala 37:30]
                when _T_293 : @[Conditional.scala 39:67]
                  awen <= UInt<1>("h01") @[DataCache.scala 172:12]
                  waddr <= flushAddr @[DataCache.scala 173:13]
                  node _T_294 = and(awen, io.axi.writeAddr.ready) @[DataCache.scala 175:18]
                  when _T_294 : @[DataCache.scala 175:45]
                    awen <= UInt<1>("h00") @[DataCache.scala 176:14]
                    dataOffset <= UInt<1>("h00") @[DataCache.scala 177:20]
                    state <= UInt<4>("h07") @[DataCache.scala 178:15]
                    skip @[DataCache.scala 175:45]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_295 = eq(UInt<4>("h07"), state) @[Conditional.scala 37:30]
                  when _T_295 : @[Conditional.scala 39:67]
                    node _T_296 = eq(wlast, UInt<1>("h00")) @[DataCache.scala 184:39]
                    node _T_297 = and(io.axi.writeData.ready, _T_296) @[DataCache.scala 184:36]
                    when _T_297 : @[DataCache.scala 184:47]
                      wen <= UInt<1>("h01") @[DataCache.scala 185:13]
                      node _T_298 = add(dataOffset, UInt<1>("h01")) @[DataCache.scala 186:34]
                      node _T_299 = tail(_T_298, 1) @[DataCache.scala 186:34]
                      dataOffset <= _T_299 @[DataCache.scala 186:20]
                      skip @[DataCache.scala 184:47]
                    else : @[DataCache.scala 187:20]
                      wen <= UInt<1>("h00") @[DataCache.scala 188:13]
                      skip @[DataCache.scala 187:20]
                    when wlast : @[DataCache.scala 191:20]
                      wen <= UInt<1>("h00") @[DataCache.scala 192:13]
                      valid[nextDirty] <= UInt<1>("h00") @[DataCache.scala 193:26]
                      state <= UInt<4>("h08") @[DataCache.scala 194:15]
                      skip @[DataCache.scala 191:20]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_300 = eq(UInt<4>("h08"), state) @[Conditional.scala 37:30]
                    when _T_300 : @[Conditional.scala 39:67]
                      node _T_301 = mux(isDirty, UInt<4>("h06"), UInt<4>("h00")) @[DataCache.scala 199:19]
                      state <= _T_301 @[DataCache.scala 199:13]
                      skip @[Conditional.scala 39:67]
    node _T_302 = eq(state, UInt<4>("h00")) @[DataCache.scala 204:26]
    node _T_303 = eq(isDirty, UInt<1>("h00")) @[DataCache.scala 204:53]
    node _T_304 = mux(io.flush, _T_303, cacheHit) @[DataCache.scala 204:42]
    node _T_305 = and(_T_302, _T_304) @[DataCache.scala 204:36]
    io.sram.valid <= _T_305 @[DataCache.scala 204:17]
    io.sram.fault <= UInt<1>("h00") @[DataCache.scala 205:17]
    io.sram.rdata <= lines.io.rdata @[DataCache.scala 206:17]
    wire _T_306 : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>} @[AXI.scala 9:36]
    _T_306.prot <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_306.cache <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_306.lock <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_306.burst <= UInt<2>("h00") @[AXI.scala 9:36]
    _T_306.len <= UInt<8>("h00") @[AXI.scala 9:36]
    _T_306.size <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_306.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_306.addr <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.readAddr.bits.prot <= _T_306.prot @[AXI.scala 9:21]
    io.axi.readAddr.bits.cache <= _T_306.cache @[AXI.scala 9:21]
    io.axi.readAddr.bits.lock <= _T_306.lock @[AXI.scala 9:21]
    io.axi.readAddr.bits.burst <= _T_306.burst @[AXI.scala 9:21]
    io.axi.readAddr.bits.len <= _T_306.len @[AXI.scala 9:21]
    io.axi.readAddr.bits.size <= _T_306.size @[AXI.scala 9:21]
    io.axi.readAddr.bits.id <= _T_306.id @[AXI.scala 9:21]
    io.axi.readAddr.bits.addr <= _T_306.addr @[AXI.scala 9:21]
    io.axi.readAddr.valid <= UInt<1>("h00") @[AXI.scala 56:20]
    io.axi.readData.ready <= UInt<1>("h00") @[AXI.scala 57:20]
    wire _T_307 : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>} @[AXI.scala 9:36]
    _T_307.prot <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_307.cache <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_307.lock <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_307.burst <= UInt<2>("h00") @[AXI.scala 9:36]
    _T_307.len <= UInt<8>("h00") @[AXI.scala 9:36]
    _T_307.size <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_307.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_307.addr <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.writeAddr.bits.prot <= _T_307.prot @[AXI.scala 9:21]
    io.axi.writeAddr.bits.cache <= _T_307.cache @[AXI.scala 9:21]
    io.axi.writeAddr.bits.lock <= _T_307.lock @[AXI.scala 9:21]
    io.axi.writeAddr.bits.burst <= _T_307.burst @[AXI.scala 9:21]
    io.axi.writeAddr.bits.len <= _T_307.len @[AXI.scala 9:21]
    io.axi.writeAddr.bits.size <= _T_307.size @[AXI.scala 9:21]
    io.axi.writeAddr.bits.id <= _T_307.id @[AXI.scala 9:21]
    io.axi.writeAddr.bits.addr <= _T_307.addr @[AXI.scala 9:21]
    io.axi.writeAddr.valid <= UInt<1>("h00") @[AXI.scala 59:21]
    wire _T_308 : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>} @[AXI.scala 9:36]
    _T_308.strb <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_308.last <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_308.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_308.data <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.writeData.bits.strb <= _T_308.strb @[AXI.scala 9:21]
    io.axi.writeData.bits.last <= _T_308.last @[AXI.scala 9:21]
    io.axi.writeData.bits.id <= _T_308.id @[AXI.scala 9:21]
    io.axi.writeData.bits.data <= _T_308.data @[AXI.scala 9:21]
    io.axi.writeData.valid <= UInt<1>("h00") @[AXI.scala 61:21]
    io.axi.writeResp.ready <= UInt<1>("h00") @[AXI.scala 62:21]
    io.axi.readAddr.valid <= aren @[DataCache.scala 210:31]
    io.axi.readAddr.bits.addr <= raddr @[DataCache.scala 211:31]
    io.axi.readAddr.bits.size <= UInt<2>("h02") @[DataCache.scala 212:31]
    io.axi.readAddr.bits.len <= UInt<4>("h0f") @[DataCache.scala 213:31]
    io.axi.readAddr.bits.burst <= UInt<1>("h01") @[DataCache.scala 214:31]
    io.axi.readData.ready <= UInt<1>("h01") @[DataCache.scala 215:31]
    io.axi.writeAddr.valid <= awen @[DataCache.scala 216:31]
    io.axi.writeAddr.bits.addr <= waddr @[DataCache.scala 217:31]
    io.axi.writeAddr.bits.size <= UInt<2>("h02") @[DataCache.scala 218:31]
    io.axi.writeAddr.bits.len <= UInt<4>("h0f") @[DataCache.scala 219:31]
    io.axi.writeAddr.bits.burst <= UInt<1>("h01") @[DataCache.scala 220:31]
    io.axi.writeData.valid <= wen @[DataCache.scala 221:31]
    io.axi.writeData.bits.data <= lines.io.rdata @[DataCache.scala 222:31]
    io.axi.writeData.bits.last <= wlast @[DataCache.scala 223:31]
    io.axi.writeData.bits.strb <= UInt<4>("h0f") @[DataCache.scala 224:31]
    io.axi.writeResp.ready <= UInt<1>("h01") @[DataCache.scala 225:31]
    
  module Uncached : 
    input clock : Clock
    input reset : Reset
    output io : {flip sram : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, axi : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}}
    
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Uncached.scala 25:22]
    reg rdata : UInt<32>, clock @[Uncached.scala 28:20]
    node arvalid = eq(state, UInt<3>("h01")) @[Uncached.scala 29:23]
    node awvalid = eq(state, UInt<3>("h03")) @[Uncached.scala 30:23]
    node rvalid = and(io.axi.readData.valid, io.axi.readData.bits.last) @[Uncached.scala 31:39]
    node wvalid = eq(state, UInt<3>("h04")) @[Uncached.scala 32:23]
    node _T = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      when io.sram.en : @[Uncached.scala 37:25]
        node _T_1 = neq(io.sram.wen, UInt<1>("h00")) @[Uncached.scala 38:34]
        node _T_2 = mux(_T_1, UInt<3>("h03"), UInt<3>("h01")) @[Uncached.scala 38:21]
        state <= _T_2 @[Uncached.scala 38:15]
        skip @[Uncached.scala 37:25]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
      when _T_3 : @[Conditional.scala 39:67]
        when io.axi.readAddr.ready : @[Uncached.scala 42:36]
          state <= UInt<3>("h02") @[Uncached.scala 43:15]
          skip @[Uncached.scala 42:36]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          when rvalid : @[Uncached.scala 47:21]
            rdata <= io.axi.readData.bits.data @[Uncached.scala 48:15]
            state <= UInt<3>("h05") @[Uncached.scala 49:15]
            skip @[Uncached.scala 47:21]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_5 = eq(UInt<3>("h03"), state) @[Conditional.scala 37:30]
          when _T_5 : @[Conditional.scala 39:67]
            when io.axi.writeAddr.ready : @[Uncached.scala 53:37]
              state <= UInt<3>("h04") @[Uncached.scala 54:15]
              skip @[Uncached.scala 53:37]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_6 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
            when _T_6 : @[Conditional.scala 39:67]
              when io.axi.writeData.ready : @[Uncached.scala 58:37]
                state <= UInt<3>("h06") @[Uncached.scala 59:15]
                skip @[Uncached.scala 58:37]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_7 = eq(UInt<3>("h05"), state) @[Conditional.scala 37:30]
              when _T_7 : @[Conditional.scala 39:67]
                state <= UInt<3>("h00") @[Uncached.scala 63:13]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_8 = eq(UInt<3>("h06"), state) @[Conditional.scala 37:30]
                when _T_8 : @[Conditional.scala 39:67]
                  state <= UInt<3>("h00") @[Uncached.scala 66:13]
                  skip @[Conditional.scala 39:67]
    node _T_9 = eq(state, UInt<3>("h06")) @[Uncached.scala 71:26]
    node _T_10 = or(_T_9, rvalid) @[Uncached.scala 71:40]
    io.sram.valid <= _T_10 @[Uncached.scala 71:17]
    io.sram.fault <= UInt<1>("h00") @[Uncached.scala 72:17]
    io.sram.rdata <= rdata @[Uncached.scala 73:17]
    wire _T_11 : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>} @[AXI.scala 9:36]
    _T_11.prot <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_11.cache <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_11.lock <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_11.burst <= UInt<2>("h00") @[AXI.scala 9:36]
    _T_11.len <= UInt<8>("h00") @[AXI.scala 9:36]
    _T_11.size <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_11.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_11.addr <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.readAddr.bits.prot <= _T_11.prot @[AXI.scala 9:21]
    io.axi.readAddr.bits.cache <= _T_11.cache @[AXI.scala 9:21]
    io.axi.readAddr.bits.lock <= _T_11.lock @[AXI.scala 9:21]
    io.axi.readAddr.bits.burst <= _T_11.burst @[AXI.scala 9:21]
    io.axi.readAddr.bits.len <= _T_11.len @[AXI.scala 9:21]
    io.axi.readAddr.bits.size <= _T_11.size @[AXI.scala 9:21]
    io.axi.readAddr.bits.id <= _T_11.id @[AXI.scala 9:21]
    io.axi.readAddr.bits.addr <= _T_11.addr @[AXI.scala 9:21]
    io.axi.readAddr.valid <= UInt<1>("h00") @[AXI.scala 56:20]
    io.axi.readData.ready <= UInt<1>("h00") @[AXI.scala 57:20]
    wire _T_12 : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>} @[AXI.scala 9:36]
    _T_12.prot <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_12.cache <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_12.lock <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_12.burst <= UInt<2>("h00") @[AXI.scala 9:36]
    _T_12.len <= UInt<8>("h00") @[AXI.scala 9:36]
    _T_12.size <= UInt<3>("h00") @[AXI.scala 9:36]
    _T_12.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_12.addr <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.writeAddr.bits.prot <= _T_12.prot @[AXI.scala 9:21]
    io.axi.writeAddr.bits.cache <= _T_12.cache @[AXI.scala 9:21]
    io.axi.writeAddr.bits.lock <= _T_12.lock @[AXI.scala 9:21]
    io.axi.writeAddr.bits.burst <= _T_12.burst @[AXI.scala 9:21]
    io.axi.writeAddr.bits.len <= _T_12.len @[AXI.scala 9:21]
    io.axi.writeAddr.bits.size <= _T_12.size @[AXI.scala 9:21]
    io.axi.writeAddr.bits.id <= _T_12.id @[AXI.scala 9:21]
    io.axi.writeAddr.bits.addr <= _T_12.addr @[AXI.scala 9:21]
    io.axi.writeAddr.valid <= UInt<1>("h00") @[AXI.scala 59:21]
    wire _T_13 : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>} @[AXI.scala 9:36]
    _T_13.strb <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_13.last <= UInt<1>("h00") @[AXI.scala 9:36]
    _T_13.id <= UInt<4>("h00") @[AXI.scala 9:36]
    _T_13.data <= UInt<32>("h00") @[AXI.scala 9:36]
    io.axi.writeData.bits.strb <= _T_13.strb @[AXI.scala 9:21]
    io.axi.writeData.bits.last <= _T_13.last @[AXI.scala 9:21]
    io.axi.writeData.bits.id <= _T_13.id @[AXI.scala 9:21]
    io.axi.writeData.bits.data <= _T_13.data @[AXI.scala 9:21]
    io.axi.writeData.valid <= UInt<1>("h00") @[AXI.scala 61:21]
    io.axi.writeResp.ready <= UInt<1>("h00") @[AXI.scala 62:21]
    io.axi.readAddr.valid <= arvalid @[Uncached.scala 77:31]
    io.axi.readAddr.bits.addr <= io.sram.addr @[Uncached.scala 78:31]
    io.axi.readAddr.bits.size <= UInt<2>("h02") @[Uncached.scala 79:31]
    io.axi.readAddr.bits.burst <= UInt<1>("h01") @[Uncached.scala 80:31]
    io.axi.readData.ready <= UInt<1>("h01") @[Uncached.scala 81:31]
    io.axi.writeAddr.valid <= awvalid @[Uncached.scala 82:31]
    io.axi.writeAddr.bits.addr <= io.sram.addr @[Uncached.scala 83:31]
    io.axi.writeAddr.bits.size <= UInt<2>("h02") @[Uncached.scala 84:31]
    io.axi.writeData.valid <= wvalid @[Uncached.scala 85:31]
    io.axi.writeData.bits.data <= io.sram.wdata @[Uncached.scala 86:31]
    io.axi.writeData.bits.last <= wvalid @[Uncached.scala 87:31]
    io.axi.writeData.bits.strb <= io.sram.wen @[Uncached.scala 88:31]
    io.axi.writeResp.ready <= UInt<1>("h01") @[Uncached.scala 89:31]
    
  module CoreBus : 
    input clock : Clock
    input reset : Reset
    output io : {flip rom : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flip ram : {en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}, flip tlb : {en : UInt<1>, flushInst : UInt<1>, flushData : UInt<1>, basePpn : UInt<22>, sum : UInt<1>, smode : UInt<1>}, flip cache : {flushInst : UInt<1>, flushData : UInt<1>}, inst : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}, data : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}, uncached : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}}
    
    inst immu of MMU @[CoreBus.scala 64:20]
    immu.clock <= clock
    immu.reset <= reset
    immu.io.en <= io.tlb.en @[CoreBus.scala 65:19]
    immu.io.flush <= io.tlb.flushInst @[CoreBus.scala 66:19]
    immu.io.basePpn <= io.tlb.basePpn @[CoreBus.scala 67:19]
    immu.io.sum <= io.tlb.sum @[CoreBus.scala 68:19]
    immu.io.smode <= io.tlb.smode @[CoreBus.scala 69:19]
    immu.io.lookup <= io.rom.en @[CoreBus.scala 70:19]
    node _T = neq(io.rom.wen, UInt<1>("h00")) @[CoreBus.scala 71:33]
    immu.io.write <= _T @[CoreBus.scala 71:19]
    immu.io.vaddr <= io.rom.addr @[CoreBus.scala 72:19]
    inst idemux of SramDemux2 @[CoreBus.scala 75:22]
    idemux.clock <= clock
    idemux.reset <= reset
    idemux.io.sel2 <= immu.io.valid @[CoreBus.scala 76:23]
    idemux.io.in1.wdata <= immu.io.data.wdata @[CoreBus.scala 77:23]
    immu.io.data.rdata <= idemux.io.in1.rdata @[CoreBus.scala 77:23]
    idemux.io.in1.addr <= immu.io.data.addr @[CoreBus.scala 77:23]
    idemux.io.in1.wen <= immu.io.data.wen @[CoreBus.scala 77:23]
    immu.io.data.fault <= idemux.io.in1.fault @[CoreBus.scala 77:23]
    immu.io.data.valid <= idemux.io.in1.valid @[CoreBus.scala 77:23]
    idemux.io.in1.en <= immu.io.data.en @[CoreBus.scala 77:23]
    idemux.io.in2.wdata <= io.rom.wdata @[CoreBus.scala 78:23]
    io.rom.rdata <= idemux.io.in2.rdata @[CoreBus.scala 78:23]
    idemux.io.in2.addr <= io.rom.addr @[CoreBus.scala 78:23]
    idemux.io.in2.wen <= io.rom.wen @[CoreBus.scala 78:23]
    io.rom.fault <= idemux.io.in2.fault @[CoreBus.scala 78:23]
    io.rom.valid <= idemux.io.in2.valid @[CoreBus.scala 78:23]
    idemux.io.in2.en <= io.rom.en @[CoreBus.scala 78:23]
    idemux.io.in2.addr <= immu.io.paddr @[CoreBus.scala 79:23]
    inst icache of InstCache @[CoreBus.scala 82:22]
    icache.clock <= clock
    icache.reset <= reset
    icache.io.sram.wdata <= idemux.io.out.wdata @[CoreBus.scala 83:19]
    idemux.io.out.rdata <= icache.io.sram.rdata @[CoreBus.scala 83:19]
    icache.io.sram.addr <= idemux.io.out.addr @[CoreBus.scala 83:19]
    icache.io.sram.wen <= idemux.io.out.wen @[CoreBus.scala 83:19]
    idemux.io.out.fault <= icache.io.sram.fault @[CoreBus.scala 83:19]
    idemux.io.out.valid <= icache.io.sram.valid @[CoreBus.scala 83:19]
    icache.io.sram.en <= idemux.io.out.en @[CoreBus.scala 83:19]
    icache.io.flush <= io.cache.flushInst @[CoreBus.scala 84:19]
    icache.io.axi.writeResp.bits.resp <= io.inst.writeResp.bits.resp @[CoreBus.scala 85:19]
    icache.io.axi.writeResp.bits.id <= io.inst.writeResp.bits.id @[CoreBus.scala 85:19]
    icache.io.axi.writeResp.valid <= io.inst.writeResp.valid @[CoreBus.scala 85:19]
    io.inst.writeResp.ready <= icache.io.axi.writeResp.ready @[CoreBus.scala 85:19]
    io.inst.writeData.bits.strb <= icache.io.axi.writeData.bits.strb @[CoreBus.scala 85:19]
    io.inst.writeData.bits.last <= icache.io.axi.writeData.bits.last @[CoreBus.scala 85:19]
    io.inst.writeData.bits.id <= icache.io.axi.writeData.bits.id @[CoreBus.scala 85:19]
    io.inst.writeData.bits.data <= icache.io.axi.writeData.bits.data @[CoreBus.scala 85:19]
    io.inst.writeData.valid <= icache.io.axi.writeData.valid @[CoreBus.scala 85:19]
    icache.io.axi.writeData.ready <= io.inst.writeData.ready @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.prot <= icache.io.axi.writeAddr.bits.prot @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.cache <= icache.io.axi.writeAddr.bits.cache @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.lock <= icache.io.axi.writeAddr.bits.lock @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.burst <= icache.io.axi.writeAddr.bits.burst @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.len <= icache.io.axi.writeAddr.bits.len @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.size <= icache.io.axi.writeAddr.bits.size @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.id <= icache.io.axi.writeAddr.bits.id @[CoreBus.scala 85:19]
    io.inst.writeAddr.bits.addr <= icache.io.axi.writeAddr.bits.addr @[CoreBus.scala 85:19]
    io.inst.writeAddr.valid <= icache.io.axi.writeAddr.valid @[CoreBus.scala 85:19]
    icache.io.axi.writeAddr.ready <= io.inst.writeAddr.ready @[CoreBus.scala 85:19]
    icache.io.axi.readData.bits.resp <= io.inst.readData.bits.resp @[CoreBus.scala 85:19]
    icache.io.axi.readData.bits.last <= io.inst.readData.bits.last @[CoreBus.scala 85:19]
    icache.io.axi.readData.bits.id <= io.inst.readData.bits.id @[CoreBus.scala 85:19]
    icache.io.axi.readData.bits.data <= io.inst.readData.bits.data @[CoreBus.scala 85:19]
    icache.io.axi.readData.valid <= io.inst.readData.valid @[CoreBus.scala 85:19]
    io.inst.readData.ready <= icache.io.axi.readData.ready @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.prot <= icache.io.axi.readAddr.bits.prot @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.cache <= icache.io.axi.readAddr.bits.cache @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.lock <= icache.io.axi.readAddr.bits.lock @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.burst <= icache.io.axi.readAddr.bits.burst @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.len <= icache.io.axi.readAddr.bits.len @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.size <= icache.io.axi.readAddr.bits.size @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.id <= icache.io.axi.readAddr.bits.id @[CoreBus.scala 85:19]
    io.inst.readAddr.bits.addr <= icache.io.axi.readAddr.bits.addr @[CoreBus.scala 85:19]
    io.inst.readAddr.valid <= icache.io.axi.readAddr.valid @[CoreBus.scala 85:19]
    icache.io.axi.readAddr.ready <= io.inst.readAddr.ready @[CoreBus.scala 85:19]
    io.rom.fault <= immu.io.fault @[CoreBus.scala 88:17]
    inst dmmu of MMU_1 @[CoreBus.scala 91:20]
    dmmu.clock <= clock
    dmmu.reset <= reset
    dmmu.io.en <= io.tlb.en @[CoreBus.scala 92:19]
    dmmu.io.flush <= io.tlb.flushData @[CoreBus.scala 93:19]
    dmmu.io.basePpn <= io.tlb.basePpn @[CoreBus.scala 94:19]
    dmmu.io.sum <= io.tlb.sum @[CoreBus.scala 95:19]
    dmmu.io.smode <= io.tlb.smode @[CoreBus.scala 96:19]
    dmmu.io.lookup <= io.ram.en @[CoreBus.scala 97:19]
    node _T_1 = neq(io.ram.wen, UInt<1>("h00")) @[CoreBus.scala 98:33]
    dmmu.io.write <= _T_1 @[CoreBus.scala 98:19]
    dmmu.io.vaddr <= io.ram.addr @[CoreBus.scala 99:19]
    inst ddemux of SramDemux2_1 @[CoreBus.scala 102:22]
    ddemux.clock <= clock
    ddemux.reset <= reset
    ddemux.io.sel2 <= dmmu.io.valid @[CoreBus.scala 103:23]
    ddemux.io.in1.wdata <= dmmu.io.data.wdata @[CoreBus.scala 104:23]
    dmmu.io.data.rdata <= ddemux.io.in1.rdata @[CoreBus.scala 104:23]
    ddemux.io.in1.addr <= dmmu.io.data.addr @[CoreBus.scala 104:23]
    ddemux.io.in1.wen <= dmmu.io.data.wen @[CoreBus.scala 104:23]
    dmmu.io.data.fault <= ddemux.io.in1.fault @[CoreBus.scala 104:23]
    dmmu.io.data.valid <= ddemux.io.in1.valid @[CoreBus.scala 104:23]
    ddemux.io.in1.en <= dmmu.io.data.en @[CoreBus.scala 104:23]
    ddemux.io.in2.wdata <= io.ram.wdata @[CoreBus.scala 105:23]
    io.ram.rdata <= ddemux.io.in2.rdata @[CoreBus.scala 105:23]
    ddemux.io.in2.addr <= io.ram.addr @[CoreBus.scala 105:23]
    ddemux.io.in2.wen <= io.ram.wen @[CoreBus.scala 105:23]
    io.ram.fault <= ddemux.io.in2.fault @[CoreBus.scala 105:23]
    io.ram.valid <= ddemux.io.in2.valid @[CoreBus.scala 105:23]
    ddemux.io.in2.en <= io.ram.en @[CoreBus.scala 105:23]
    ddemux.io.in2.addr <= dmmu.io.paddr @[CoreBus.scala 106:23]
    inst mux of SramMux2 @[CoreBus.scala 109:19]
    mux.clock <= clock
    mux.reset <= reset
    node _T_2 = geq(dmmu.io.paddr, UInt<32>("h010000000")) @[CoreBus.scala 110:32]
    node _T_3 = lt(dmmu.io.paddr, UInt<32>("h020000000")) @[CoreBus.scala 111:32]
    node _T_4 = and(_T_2, _T_3) @[CoreBus.scala 110:55]
    mux.io.sel2 <= _T_4 @[CoreBus.scala 110:15]
    mux.io.in.wdata <= ddemux.io.out.wdata @[CoreBus.scala 112:15]
    ddemux.io.out.rdata <= mux.io.in.rdata @[CoreBus.scala 112:15]
    mux.io.in.addr <= ddemux.io.out.addr @[CoreBus.scala 112:15]
    mux.io.in.wen <= ddemux.io.out.wen @[CoreBus.scala 112:15]
    ddemux.io.out.fault <= mux.io.in.fault @[CoreBus.scala 112:15]
    ddemux.io.out.valid <= mux.io.in.valid @[CoreBus.scala 112:15]
    mux.io.in.en <= ddemux.io.out.en @[CoreBus.scala 112:15]
    inst dcache of DataCache @[CoreBus.scala 115:22]
    dcache.clock <= clock
    dcache.reset <= reset
    dcache.io.sram.wdata <= mux.io.out1.wdata @[CoreBus.scala 116:19]
    mux.io.out1.rdata <= dcache.io.sram.rdata @[CoreBus.scala 116:19]
    dcache.io.sram.addr <= mux.io.out1.addr @[CoreBus.scala 116:19]
    dcache.io.sram.wen <= mux.io.out1.wen @[CoreBus.scala 116:19]
    mux.io.out1.fault <= dcache.io.sram.fault @[CoreBus.scala 116:19]
    mux.io.out1.valid <= dcache.io.sram.valid @[CoreBus.scala 116:19]
    dcache.io.sram.en <= mux.io.out1.en @[CoreBus.scala 116:19]
    dcache.io.flush <= io.cache.flushData @[CoreBus.scala 117:19]
    dcache.io.axi.writeResp.bits.resp <= io.data.writeResp.bits.resp @[CoreBus.scala 118:19]
    dcache.io.axi.writeResp.bits.id <= io.data.writeResp.bits.id @[CoreBus.scala 118:19]
    dcache.io.axi.writeResp.valid <= io.data.writeResp.valid @[CoreBus.scala 118:19]
    io.data.writeResp.ready <= dcache.io.axi.writeResp.ready @[CoreBus.scala 118:19]
    io.data.writeData.bits.strb <= dcache.io.axi.writeData.bits.strb @[CoreBus.scala 118:19]
    io.data.writeData.bits.last <= dcache.io.axi.writeData.bits.last @[CoreBus.scala 118:19]
    io.data.writeData.bits.id <= dcache.io.axi.writeData.bits.id @[CoreBus.scala 118:19]
    io.data.writeData.bits.data <= dcache.io.axi.writeData.bits.data @[CoreBus.scala 118:19]
    io.data.writeData.valid <= dcache.io.axi.writeData.valid @[CoreBus.scala 118:19]
    dcache.io.axi.writeData.ready <= io.data.writeData.ready @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.prot <= dcache.io.axi.writeAddr.bits.prot @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.cache <= dcache.io.axi.writeAddr.bits.cache @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.lock <= dcache.io.axi.writeAddr.bits.lock @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.burst <= dcache.io.axi.writeAddr.bits.burst @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.len <= dcache.io.axi.writeAddr.bits.len @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.size <= dcache.io.axi.writeAddr.bits.size @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.id <= dcache.io.axi.writeAddr.bits.id @[CoreBus.scala 118:19]
    io.data.writeAddr.bits.addr <= dcache.io.axi.writeAddr.bits.addr @[CoreBus.scala 118:19]
    io.data.writeAddr.valid <= dcache.io.axi.writeAddr.valid @[CoreBus.scala 118:19]
    dcache.io.axi.writeAddr.ready <= io.data.writeAddr.ready @[CoreBus.scala 118:19]
    dcache.io.axi.readData.bits.resp <= io.data.readData.bits.resp @[CoreBus.scala 118:19]
    dcache.io.axi.readData.bits.last <= io.data.readData.bits.last @[CoreBus.scala 118:19]
    dcache.io.axi.readData.bits.id <= io.data.readData.bits.id @[CoreBus.scala 118:19]
    dcache.io.axi.readData.bits.data <= io.data.readData.bits.data @[CoreBus.scala 118:19]
    dcache.io.axi.readData.valid <= io.data.readData.valid @[CoreBus.scala 118:19]
    io.data.readData.ready <= dcache.io.axi.readData.ready @[CoreBus.scala 118:19]
    io.data.readAddr.bits.prot <= dcache.io.axi.readAddr.bits.prot @[CoreBus.scala 118:19]
    io.data.readAddr.bits.cache <= dcache.io.axi.readAddr.bits.cache @[CoreBus.scala 118:19]
    io.data.readAddr.bits.lock <= dcache.io.axi.readAddr.bits.lock @[CoreBus.scala 118:19]
    io.data.readAddr.bits.burst <= dcache.io.axi.readAddr.bits.burst @[CoreBus.scala 118:19]
    io.data.readAddr.bits.len <= dcache.io.axi.readAddr.bits.len @[CoreBus.scala 118:19]
    io.data.readAddr.bits.size <= dcache.io.axi.readAddr.bits.size @[CoreBus.scala 118:19]
    io.data.readAddr.bits.id <= dcache.io.axi.readAddr.bits.id @[CoreBus.scala 118:19]
    io.data.readAddr.bits.addr <= dcache.io.axi.readAddr.bits.addr @[CoreBus.scala 118:19]
    io.data.readAddr.valid <= dcache.io.axi.readAddr.valid @[CoreBus.scala 118:19]
    dcache.io.axi.readAddr.ready <= io.data.readAddr.ready @[CoreBus.scala 118:19]
    inst uncached of Uncached @[CoreBus.scala 121:24]
    uncached.clock <= clock
    uncached.reset <= reset
    uncached.io.sram.wdata <= mux.io.out2.wdata @[CoreBus.scala 122:21]
    mux.io.out2.rdata <= uncached.io.sram.rdata @[CoreBus.scala 122:21]
    uncached.io.sram.addr <= mux.io.out2.addr @[CoreBus.scala 122:21]
    uncached.io.sram.wen <= mux.io.out2.wen @[CoreBus.scala 122:21]
    mux.io.out2.fault <= uncached.io.sram.fault @[CoreBus.scala 122:21]
    mux.io.out2.valid <= uncached.io.sram.valid @[CoreBus.scala 122:21]
    uncached.io.sram.en <= mux.io.out2.en @[CoreBus.scala 122:21]
    uncached.io.axi.writeResp.bits.resp <= io.uncached.writeResp.bits.resp @[CoreBus.scala 123:21]
    uncached.io.axi.writeResp.bits.id <= io.uncached.writeResp.bits.id @[CoreBus.scala 123:21]
    uncached.io.axi.writeResp.valid <= io.uncached.writeResp.valid @[CoreBus.scala 123:21]
    io.uncached.writeResp.ready <= uncached.io.axi.writeResp.ready @[CoreBus.scala 123:21]
    io.uncached.writeData.bits.strb <= uncached.io.axi.writeData.bits.strb @[CoreBus.scala 123:21]
    io.uncached.writeData.bits.last <= uncached.io.axi.writeData.bits.last @[CoreBus.scala 123:21]
    io.uncached.writeData.bits.id <= uncached.io.axi.writeData.bits.id @[CoreBus.scala 123:21]
    io.uncached.writeData.bits.data <= uncached.io.axi.writeData.bits.data @[CoreBus.scala 123:21]
    io.uncached.writeData.valid <= uncached.io.axi.writeData.valid @[CoreBus.scala 123:21]
    uncached.io.axi.writeData.ready <= io.uncached.writeData.ready @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.prot <= uncached.io.axi.writeAddr.bits.prot @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.cache <= uncached.io.axi.writeAddr.bits.cache @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.lock <= uncached.io.axi.writeAddr.bits.lock @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.burst <= uncached.io.axi.writeAddr.bits.burst @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.len <= uncached.io.axi.writeAddr.bits.len @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.size <= uncached.io.axi.writeAddr.bits.size @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.id <= uncached.io.axi.writeAddr.bits.id @[CoreBus.scala 123:21]
    io.uncached.writeAddr.bits.addr <= uncached.io.axi.writeAddr.bits.addr @[CoreBus.scala 123:21]
    io.uncached.writeAddr.valid <= uncached.io.axi.writeAddr.valid @[CoreBus.scala 123:21]
    uncached.io.axi.writeAddr.ready <= io.uncached.writeAddr.ready @[CoreBus.scala 123:21]
    uncached.io.axi.readData.bits.resp <= io.uncached.readData.bits.resp @[CoreBus.scala 123:21]
    uncached.io.axi.readData.bits.last <= io.uncached.readData.bits.last @[CoreBus.scala 123:21]
    uncached.io.axi.readData.bits.id <= io.uncached.readData.bits.id @[CoreBus.scala 123:21]
    uncached.io.axi.readData.bits.data <= io.uncached.readData.bits.data @[CoreBus.scala 123:21]
    uncached.io.axi.readData.valid <= io.uncached.readData.valid @[CoreBus.scala 123:21]
    io.uncached.readData.ready <= uncached.io.axi.readData.ready @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.prot <= uncached.io.axi.readAddr.bits.prot @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.cache <= uncached.io.axi.readAddr.bits.cache @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.lock <= uncached.io.axi.readAddr.bits.lock @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.burst <= uncached.io.axi.readAddr.bits.burst @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.len <= uncached.io.axi.readAddr.bits.len @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.size <= uncached.io.axi.readAddr.bits.size @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.id <= uncached.io.axi.readAddr.bits.id @[CoreBus.scala 123:21]
    io.uncached.readAddr.bits.addr <= uncached.io.axi.readAddr.bits.addr @[CoreBus.scala 123:21]
    io.uncached.readAddr.valid <= uncached.io.axi.readAddr.valid @[CoreBus.scala 123:21]
    uncached.io.axi.readAddr.ready <= io.uncached.readAddr.ready @[CoreBus.scala 123:21]
    io.ram.fault <= dmmu.io.fault @[CoreBus.scala 126:17]
    
  module Fuxi : 
    input clock : Clock
    input reset : UInt<1>
    output io : {irq : {flip timer : UInt<1>, flip soft : UInt<1>, flip extern : UInt<1>}, debug : {regWen : UInt<1>, regWaddr : UInt<5>, regWdata : UInt<32>, pc : UInt<32>}, inst : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}, data : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}, uncached : {readAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, flip readData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, resp : UInt<2>}}, writeAddr : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, id : UInt<4>, size : UInt<3>, len : UInt<8>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, prot : UInt<3>}}, writeData : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, id : UInt<4>, last : UInt<1>, strb : UInt<4>}}, flip writeResp : {flip ready : UInt<1>, valid : UInt<1>, bits : {id : UInt<4>, resp : UInt<2>}}}}
    
    inst core of Core @[Fuxi.scala 22:23]
    core.clock <= clock
    core.reset <= reset
    inst coreBus of CoreBus @[Fuxi.scala 23:23]
    coreBus.clock <= clock
    coreBus.reset <= reset
    core.io.irq.extern <= io.irq.extern @[Fuxi.scala 25:17]
    core.io.irq.soft <= io.irq.soft @[Fuxi.scala 25:17]
    core.io.irq.timer <= io.irq.timer @[Fuxi.scala 25:17]
    coreBus.io.tlb.smode <= core.io.tlb.smode @[Fuxi.scala 26:17]
    coreBus.io.tlb.sum <= core.io.tlb.sum @[Fuxi.scala 26:17]
    coreBus.io.tlb.basePpn <= core.io.tlb.basePpn @[Fuxi.scala 26:17]
    coreBus.io.tlb.flushData <= core.io.tlb.flushData @[Fuxi.scala 26:17]
    coreBus.io.tlb.flushInst <= core.io.tlb.flushInst @[Fuxi.scala 26:17]
    coreBus.io.tlb.en <= core.io.tlb.en @[Fuxi.scala 26:17]
    coreBus.io.cache.flushData <= core.io.cache.flushData @[Fuxi.scala 27:17]
    coreBus.io.cache.flushInst <= core.io.cache.flushInst @[Fuxi.scala 27:17]
    coreBus.io.rom.wdata <= core.io.rom.wdata @[Fuxi.scala 28:17]
    core.io.rom.rdata <= coreBus.io.rom.rdata @[Fuxi.scala 28:17]
    coreBus.io.rom.addr <= core.io.rom.addr @[Fuxi.scala 28:17]
    coreBus.io.rom.wen <= core.io.rom.wen @[Fuxi.scala 28:17]
    core.io.rom.fault <= coreBus.io.rom.fault @[Fuxi.scala 28:17]
    core.io.rom.valid <= coreBus.io.rom.valid @[Fuxi.scala 28:17]
    coreBus.io.rom.en <= core.io.rom.en @[Fuxi.scala 28:17]
    coreBus.io.ram.wdata <= core.io.ram.wdata @[Fuxi.scala 29:17]
    core.io.ram.rdata <= coreBus.io.ram.rdata @[Fuxi.scala 29:17]
    coreBus.io.ram.addr <= core.io.ram.addr @[Fuxi.scala 29:17]
    coreBus.io.ram.wen <= core.io.ram.wen @[Fuxi.scala 29:17]
    core.io.ram.fault <= coreBus.io.ram.fault @[Fuxi.scala 29:17]
    core.io.ram.valid <= coreBus.io.ram.valid @[Fuxi.scala 29:17]
    coreBus.io.ram.en <= core.io.ram.en @[Fuxi.scala 29:17]
    io.debug.pc <= core.io.debug.pc @[Fuxi.scala 30:17]
    io.debug.regWdata <= core.io.debug.regWdata @[Fuxi.scala 30:17]
    io.debug.regWaddr <= core.io.debug.regWaddr @[Fuxi.scala 30:17]
    io.debug.regWen <= core.io.debug.regWen @[Fuxi.scala 30:17]
    coreBus.io.inst.writeResp.bits.resp <= io.inst.writeResp.bits.resp @[Fuxi.scala 32:23]
    coreBus.io.inst.writeResp.bits.id <= io.inst.writeResp.bits.id @[Fuxi.scala 32:23]
    coreBus.io.inst.writeResp.valid <= io.inst.writeResp.valid @[Fuxi.scala 32:23]
    io.inst.writeResp.ready <= coreBus.io.inst.writeResp.ready @[Fuxi.scala 32:23]
    io.inst.writeData.bits.strb <= coreBus.io.inst.writeData.bits.strb @[Fuxi.scala 32:23]
    io.inst.writeData.bits.last <= coreBus.io.inst.writeData.bits.last @[Fuxi.scala 32:23]
    io.inst.writeData.bits.id <= coreBus.io.inst.writeData.bits.id @[Fuxi.scala 32:23]
    io.inst.writeData.bits.data <= coreBus.io.inst.writeData.bits.data @[Fuxi.scala 32:23]
    io.inst.writeData.valid <= coreBus.io.inst.writeData.valid @[Fuxi.scala 32:23]
    coreBus.io.inst.writeData.ready <= io.inst.writeData.ready @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.prot <= coreBus.io.inst.writeAddr.bits.prot @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.cache <= coreBus.io.inst.writeAddr.bits.cache @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.lock <= coreBus.io.inst.writeAddr.bits.lock @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.burst <= coreBus.io.inst.writeAddr.bits.burst @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.len <= coreBus.io.inst.writeAddr.bits.len @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.size <= coreBus.io.inst.writeAddr.bits.size @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.id <= coreBus.io.inst.writeAddr.bits.id @[Fuxi.scala 32:23]
    io.inst.writeAddr.bits.addr <= coreBus.io.inst.writeAddr.bits.addr @[Fuxi.scala 32:23]
    io.inst.writeAddr.valid <= coreBus.io.inst.writeAddr.valid @[Fuxi.scala 32:23]
    coreBus.io.inst.writeAddr.ready <= io.inst.writeAddr.ready @[Fuxi.scala 32:23]
    coreBus.io.inst.readData.bits.resp <= io.inst.readData.bits.resp @[Fuxi.scala 32:23]
    coreBus.io.inst.readData.bits.last <= io.inst.readData.bits.last @[Fuxi.scala 32:23]
    coreBus.io.inst.readData.bits.id <= io.inst.readData.bits.id @[Fuxi.scala 32:23]
    coreBus.io.inst.readData.bits.data <= io.inst.readData.bits.data @[Fuxi.scala 32:23]
    coreBus.io.inst.readData.valid <= io.inst.readData.valid @[Fuxi.scala 32:23]
    io.inst.readData.ready <= coreBus.io.inst.readData.ready @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.prot <= coreBus.io.inst.readAddr.bits.prot @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.cache <= coreBus.io.inst.readAddr.bits.cache @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.lock <= coreBus.io.inst.readAddr.bits.lock @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.burst <= coreBus.io.inst.readAddr.bits.burst @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.len <= coreBus.io.inst.readAddr.bits.len @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.size <= coreBus.io.inst.readAddr.bits.size @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.id <= coreBus.io.inst.readAddr.bits.id @[Fuxi.scala 32:23]
    io.inst.readAddr.bits.addr <= coreBus.io.inst.readAddr.bits.addr @[Fuxi.scala 32:23]
    io.inst.readAddr.valid <= coreBus.io.inst.readAddr.valid @[Fuxi.scala 32:23]
    coreBus.io.inst.readAddr.ready <= io.inst.readAddr.ready @[Fuxi.scala 32:23]
    coreBus.io.data.writeResp.bits.resp <= io.data.writeResp.bits.resp @[Fuxi.scala 33:23]
    coreBus.io.data.writeResp.bits.id <= io.data.writeResp.bits.id @[Fuxi.scala 33:23]
    coreBus.io.data.writeResp.valid <= io.data.writeResp.valid @[Fuxi.scala 33:23]
    io.data.writeResp.ready <= coreBus.io.data.writeResp.ready @[Fuxi.scala 33:23]
    io.data.writeData.bits.strb <= coreBus.io.data.writeData.bits.strb @[Fuxi.scala 33:23]
    io.data.writeData.bits.last <= coreBus.io.data.writeData.bits.last @[Fuxi.scala 33:23]
    io.data.writeData.bits.id <= coreBus.io.data.writeData.bits.id @[Fuxi.scala 33:23]
    io.data.writeData.bits.data <= coreBus.io.data.writeData.bits.data @[Fuxi.scala 33:23]
    io.data.writeData.valid <= coreBus.io.data.writeData.valid @[Fuxi.scala 33:23]
    coreBus.io.data.writeData.ready <= io.data.writeData.ready @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.prot <= coreBus.io.data.writeAddr.bits.prot @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.cache <= coreBus.io.data.writeAddr.bits.cache @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.lock <= coreBus.io.data.writeAddr.bits.lock @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.burst <= coreBus.io.data.writeAddr.bits.burst @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.len <= coreBus.io.data.writeAddr.bits.len @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.size <= coreBus.io.data.writeAddr.bits.size @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.id <= coreBus.io.data.writeAddr.bits.id @[Fuxi.scala 33:23]
    io.data.writeAddr.bits.addr <= coreBus.io.data.writeAddr.bits.addr @[Fuxi.scala 33:23]
    io.data.writeAddr.valid <= coreBus.io.data.writeAddr.valid @[Fuxi.scala 33:23]
    coreBus.io.data.writeAddr.ready <= io.data.writeAddr.ready @[Fuxi.scala 33:23]
    coreBus.io.data.readData.bits.resp <= io.data.readData.bits.resp @[Fuxi.scala 33:23]
    coreBus.io.data.readData.bits.last <= io.data.readData.bits.last @[Fuxi.scala 33:23]
    coreBus.io.data.readData.bits.id <= io.data.readData.bits.id @[Fuxi.scala 33:23]
    coreBus.io.data.readData.bits.data <= io.data.readData.bits.data @[Fuxi.scala 33:23]
    coreBus.io.data.readData.valid <= io.data.readData.valid @[Fuxi.scala 33:23]
    io.data.readData.ready <= coreBus.io.data.readData.ready @[Fuxi.scala 33:23]
    io.data.readAddr.bits.prot <= coreBus.io.data.readAddr.bits.prot @[Fuxi.scala 33:23]
    io.data.readAddr.bits.cache <= coreBus.io.data.readAddr.bits.cache @[Fuxi.scala 33:23]
    io.data.readAddr.bits.lock <= coreBus.io.data.readAddr.bits.lock @[Fuxi.scala 33:23]
    io.data.readAddr.bits.burst <= coreBus.io.data.readAddr.bits.burst @[Fuxi.scala 33:23]
    io.data.readAddr.bits.len <= coreBus.io.data.readAddr.bits.len @[Fuxi.scala 33:23]
    io.data.readAddr.bits.size <= coreBus.io.data.readAddr.bits.size @[Fuxi.scala 33:23]
    io.data.readAddr.bits.id <= coreBus.io.data.readAddr.bits.id @[Fuxi.scala 33:23]
    io.data.readAddr.bits.addr <= coreBus.io.data.readAddr.bits.addr @[Fuxi.scala 33:23]
    io.data.readAddr.valid <= coreBus.io.data.readAddr.valid @[Fuxi.scala 33:23]
    coreBus.io.data.readAddr.ready <= io.data.readAddr.ready @[Fuxi.scala 33:23]
    coreBus.io.uncached.writeResp.bits.resp <= io.uncached.writeResp.bits.resp @[Fuxi.scala 34:23]
    coreBus.io.uncached.writeResp.bits.id <= io.uncached.writeResp.bits.id @[Fuxi.scala 34:23]
    coreBus.io.uncached.writeResp.valid <= io.uncached.writeResp.valid @[Fuxi.scala 34:23]
    io.uncached.writeResp.ready <= coreBus.io.uncached.writeResp.ready @[Fuxi.scala 34:23]
    io.uncached.writeData.bits.strb <= coreBus.io.uncached.writeData.bits.strb @[Fuxi.scala 34:23]
    io.uncached.writeData.bits.last <= coreBus.io.uncached.writeData.bits.last @[Fuxi.scala 34:23]
    io.uncached.writeData.bits.id <= coreBus.io.uncached.writeData.bits.id @[Fuxi.scala 34:23]
    io.uncached.writeData.bits.data <= coreBus.io.uncached.writeData.bits.data @[Fuxi.scala 34:23]
    io.uncached.writeData.valid <= coreBus.io.uncached.writeData.valid @[Fuxi.scala 34:23]
    coreBus.io.uncached.writeData.ready <= io.uncached.writeData.ready @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.prot <= coreBus.io.uncached.writeAddr.bits.prot @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.cache <= coreBus.io.uncached.writeAddr.bits.cache @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.lock <= coreBus.io.uncached.writeAddr.bits.lock @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.burst <= coreBus.io.uncached.writeAddr.bits.burst @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.len <= coreBus.io.uncached.writeAddr.bits.len @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.size <= coreBus.io.uncached.writeAddr.bits.size @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.id <= coreBus.io.uncached.writeAddr.bits.id @[Fuxi.scala 34:23]
    io.uncached.writeAddr.bits.addr <= coreBus.io.uncached.writeAddr.bits.addr @[Fuxi.scala 34:23]
    io.uncached.writeAddr.valid <= coreBus.io.uncached.writeAddr.valid @[Fuxi.scala 34:23]
    coreBus.io.uncached.writeAddr.ready <= io.uncached.writeAddr.ready @[Fuxi.scala 34:23]
    coreBus.io.uncached.readData.bits.resp <= io.uncached.readData.bits.resp @[Fuxi.scala 34:23]
    coreBus.io.uncached.readData.bits.last <= io.uncached.readData.bits.last @[Fuxi.scala 34:23]
    coreBus.io.uncached.readData.bits.id <= io.uncached.readData.bits.id @[Fuxi.scala 34:23]
    coreBus.io.uncached.readData.bits.data <= io.uncached.readData.bits.data @[Fuxi.scala 34:23]
    coreBus.io.uncached.readData.valid <= io.uncached.readData.valid @[Fuxi.scala 34:23]
    io.uncached.readData.ready <= coreBus.io.uncached.readData.ready @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.prot <= coreBus.io.uncached.readAddr.bits.prot @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.cache <= coreBus.io.uncached.readAddr.bits.cache @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.lock <= coreBus.io.uncached.readAddr.bits.lock @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.burst <= coreBus.io.uncached.readAddr.bits.burst @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.len <= coreBus.io.uncached.readAddr.bits.len @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.size <= coreBus.io.uncached.readAddr.bits.size @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.id <= coreBus.io.uncached.readAddr.bits.id @[Fuxi.scala 34:23]
    io.uncached.readAddr.bits.addr <= coreBus.io.uncached.readAddr.bits.addr @[Fuxi.scala 34:23]
    io.uncached.readAddr.valid <= coreBus.io.uncached.readAddr.valid @[Fuxi.scala 34:23]
    coreBus.io.uncached.readAddr.ready <= io.uncached.readAddr.ready @[Fuxi.scala 34:23]
    
